<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2013-06-06 05:13"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>Geek after Five</title>
<link>http://geekafterfive.com</link>
<description>Not your typical 8 to 5 geek.</description>
<pubDate>Thu, 06 Jun 2013 05:13:14 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>http://geekafterfive.com</wp:base_blog_url>
<wp:wp_author>
  <wp:author_login>jacobmrobinson</wp:author_login>
  <wp:author_email>jacob.m.robinson@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[Jake]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:wp_author>
<wp:category>
  <wp:term_id>586</wp:term_id>
  <wp:category_nicename>food</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[food]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1677</wp:term_id>
  <wp:category_nicename>nutrition</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[nutrition]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>178495</wp:term_id>
  <wp:category_nicename>powershell</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[Powershell]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>412</wp:term_id>
  <wp:category_nicename>video</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[Video]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>38600</wp:term_id>
  <wp:category_nicename>vmware</wp:category_nicename>
  <wp:category_parent></wp:category_parent>
  <wp:cat_name><![CDATA[vmware]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>22350225</wp:term_id>
  <wp:category_nicename>vshield</wp:category_nicename>
  <wp:category_parent>vmware</wp:category_parent>
  <wp:cat_name><![CDATA[vShield]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>20920789</wp:term_id>
  <wp:category_nicename>vsphere-vmware</wp:category_nicename>
  <wp:category_parent>vmware</wp:category_parent>
  <wp:cat_name><![CDATA[vSphere]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>11788</wp:term_id>
  <wp:category_nicename>interview</wp:category_nicename>
  <wp:category_parent>video</wp:category_parent>
  <wp:cat_name><![CDATA[Interview]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>19743086</wp:term_id>
  <wp:category_nicename>powercli</wp:category_nicename>
  <wp:category_parent>vmware</wp:category_parent>
  <wp:cat_name><![CDATA[PowerCLI]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>11114916</wp:term_id>
  <wp:category_nicename>vcloud</wp:category_nicename>
  <wp:category_parent>vmware</wp:category_parent>
  <wp:cat_name><![CDATA[vCloud]]></wp:cat_name>
</wp:category>
<wp:tag>
  <wp:term_id>3308477</wp:term_id>
  <wp:tag_slug>2448</wp:tag_slug>
  <wp:tag_name><![CDATA[2448]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1390056</wp:term_id>
  <wp:tag_slug>5-1</wp:tag_slug>
  <wp:tag_name><![CDATA[5.1]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>67745642</wp:term_id>
  <wp:tag_slug>alan-renouf</wp:tag_slug>
  <wp:tag_name><![CDATA[alan renouf]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5469</wp:term_id>
  <wp:tag_slug>backup</wp:tag_slug>
  <wp:tag_name><![CDATA[backup]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1817</wp:term_id>
  <wp:tag_slug>backups</wp:tag_slug>
  <wp:tag_name><![CDATA[backups]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>15657018</wp:term_id>
  <wp:tag_slug>bluelock</wp:tag_slug>
  <wp:tag_name><![CDATA[Bluelock]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1194</wp:term_id>
  <wp:tag_slug>browser</wp:tag_slug>
  <wp:tag_name><![CDATA[browser]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7155</wp:term_id>
  <wp:tag_slug>calendar</wp:tag_slug>
  <wp:tag_name><![CDATA[calendar]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>25514</wp:term_id>
  <wp:tag_slug>category</wp:tag_slug>
  <wp:tag_name><![CDATA[category]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>367314</wp:term_id>
  <wp:tag_slug>chrome</wp:tag_slug>
  <wp:tag_name><![CDATA[chrome]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>45303</wp:term_id>
  <wp:tag_slug>cloning</wp:tag_slug>
  <wp:tag_name><![CDATA[Cloning]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>30628462</wp:term_id>
  <wp:tag_slug>cloud-automation</wp:tag_slug>
  <wp:tag_name><![CDATA[cloud automation]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1715866</wp:term_id>
  <wp:tag_slug>cloud-computing</wp:tag_slug>
  <wp:tag_name><![CDATA[Cloud computing]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>98210086</wp:term_id>
  <wp:tag_slug>controlaccess</wp:tag_slug>
  <wp:tag_name><![CDATA[controlaccess]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>602178</wp:term_id>
  <wp:tag_slug>csv</wp:tag_slug>
  <wp:tag_name><![CDATA[csv]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1360754</wp:term_id>
  <wp:tag_slug>datastore</wp:tag_slug>
  <wp:tag_name><![CDATA[datastore]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>54527160</wp:term_id>
  <wp:tag_slug>dvportgroups</wp:tag_slug>
  <wp:tag_name><![CDATA[dvPortgroups]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>30668605</wp:term_id>
  <wp:tag_slug>edge-gateway</wp:tag_slug>
  <wp:tag_name><![CDATA[edge gateway]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>163</wp:term_id>
  <wp:tag_slug>email</wp:tag_slug>
  <wp:tag_name><![CDATA[email]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11869</wp:term_id>
  <wp:tag_slug>error</wp:tag_slug>
  <wp:tag_name><![CDATA[error]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>186239</wp:term_id>
  <wp:tag_slug>flexible</wp:tag_slug>
  <wp:tag_name><![CDATA[flexible]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>154866635</wp:term_id>
  <wp:tag_slug>forgedtransmits</wp:tag_slug>
  <wp:tag_name><![CDATA[forgedtransmits]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>16981</wp:term_id>
  <wp:tag_slug>hack</wp:tag_slug>
  <wp:tag_name><![CDATA[hack]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>608699</wp:term_id>
  <wp:tag_slug>harddisk</wp:tag_slug>
  <wp:tag_name><![CDATA[harddisk]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>20981858</wp:term_id>
  <wp:tag_slug>hot-clone</wp:tag_slug>
  <wp:tag_name><![CDATA[Hot Clone]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2708</wp:term_id>
  <wp:tag_slug>how-to</wp:tag_slug>
  <wp:tag_name><![CDATA[how-to]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>647</wp:term_id>
  <wp:tag_slug>html</wp:tag_slug>
  <wp:tag_name><![CDATA[HTML]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>43222</wp:term_id>
  <wp:tag_slug>import</wp:tag_slug>
  <wp:tag_name><![CDATA[import]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>90163248</wp:term_id>
  <wp:tag_slug>import-civapptemplate</wp:tag_slug>
  <wp:tag_name><![CDATA[Import-CIVappTemplate]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>88802487</wp:term_id>
  <wp:tag_slug>isolated-networks</wp:tag_slug>
  <wp:tag_name><![CDATA[isolated networks]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>457</wp:term_id>
  <wp:tag_slug>javascript</wp:tag_slug>
  <wp:tag_name><![CDATA[javascript]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>264</wp:term_id>
  <wp:tag_slug>learning</wp:tag_slug>
  <wp:tag_name><![CDATA[Learning]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>3818893</wp:term_id>
  <wp:tag_slug>learning-ruby</wp:tag_slug>
  <wp:tag_name><![CDATA[Learning Ruby]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>292</wp:term_id>
  <wp:tag_slug>media</wp:tag_slug>
  <wp:tag_name><![CDATA[media]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>23191</wp:term_id>
  <wp:tag_slug>metadata</wp:tag_slug>
  <wp:tag_name><![CDATA[Metadata]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4836</wp:term_id>
  <wp:tag_slug>microsoft-outlook</wp:tag_slug>
  <wp:tag_name><![CDATA[Microsoft Outlook]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>105547911</wp:term_id>
  <wp:tag_slug>missing-vapp-key</wp:tag_slug>
  <wp:tag_name><![CDATA[missing vapp key]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>54080</wp:term_id>
  <wp:tag_slug>nat</wp:tag_slug>
  <wp:tag_name><![CDATA[NAT]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>87643432</wp:term_id>
  <wp:tag_slug>natrouted</wp:tag_slug>
  <wp:tag_name><![CDATA[NatRouted]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7426</wp:term_id>
  <wp:tag_slug>networking</wp:tag_slug>
  <wp:tag_name><![CDATA[networking]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>19772728</wp:term_id>
  <wp:tag_slug>open-virtualization-format</wp:tag_slug>
  <wp:tag_name><![CDATA[Open Virtualization Format]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>9559</wp:term_id>
  <wp:tag_slug>outlook</wp:tag_slug>
  <wp:tag_name><![CDATA[outlook]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5502236</wp:term_id>
  <wp:tag_slug>ovf</wp:tag_slug>
  <wp:tag_name><![CDATA[ovf]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>45328664</wp:term_id>
  <wp:tag_slug>ovftool</wp:tag_slug>
  <wp:tag_name><![CDATA[ovftool]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>77531820</wp:term_id>
  <wp:tag_slug>pcnet32</wp:tag_slug>
  <wp:tag_name><![CDATA[pcnet32]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>19743086</wp:term_id>
  <wp:tag_slug>powercli</wp:tag_slug>
  <wp:tag_name><![CDATA[PowerCLI]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>35175609</wp:term_id>
  <wp:tag_slug>powershell-2</wp:tag_slug>
  <wp:tag_name><![CDATA[powershell]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>414839</wp:term_id>
  <wp:tag_slug>promiscuous</wp:tag_slug>
  <wp:tag_name><![CDATA[promiscuous]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6652</wp:term_id>
  <wp:tag_slug>rails</wp:tag_slug>
  <wp:tag_name><![CDATA[Rails]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>646812</wp:term_id>
  <wp:tag_slug>relocate</wp:tag_slug>
  <wp:tag_name><![CDATA[relocate]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>17573</wp:term_id>
  <wp:tag_slug>report</wp:tag_slug>
  <wp:tag_name><![CDATA[report]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>38379</wp:term_id>
  <wp:tag_slug>reporting</wp:tag_slug>
  <wp:tag_name><![CDATA[reporting]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>15314</wp:term_id>
  <wp:tag_slug>rest</wp:tag_slug>
  <wp:tag_name><![CDATA[rest]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4872</wp:term_id>
  <wp:tag_slug>ruby</wp:tag_slug>
  <wp:tag_name><![CDATA[Ruby]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>31099</wp:term_id>
  <wp:tag_slug>sap</wp:tag_slug>
  <wp:tag_name><![CDATA[sap]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>455</wp:term_id>
  <wp:tag_slug>script</wp:tag_slug>
  <wp:tag_name><![CDATA[script]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>801</wp:term_id>
  <wp:tag_slug>security</wp:tag_slug>
  <wp:tag_name><![CDATA[security]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>4569137</wp:term_id>
  <wp:tag_slug>shared-calendar</wp:tag_slug>
  <wp:tag_name><![CDATA[shared calendar]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>600</wp:term_id>
  <wp:tag_slug>sharing</wp:tag_slug>
  <wp:tag_name><![CDATA[sharing]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2255</wp:term_id>
  <wp:tag_slug>snapshots</wp:tag_slug>
  <wp:tag_name><![CDATA[snapshots]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>81168079</wp:term_id>
  <wp:tag_slug>sourcesessionticket</wp:tag_slug>
  <wp:tag_name><![CDATA[sourcesessionticket]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6615825</wp:term_id>
  <wp:tag_slug>static-routing</wp:tag_slug>
  <wp:tag_name><![CDATA[Static Routing]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>7120334</wp:term_id>
  <wp:tag_slug>svmotion</wp:tag_slug>
  <wp:tag_name><![CDATA[svmotion]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>2241418</wp:term_id>
  <wp:tag_slug>time-reporting</wp:tag_slug>
  <wp:tag_name><![CDATA[time reporting]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>393987</wp:term_id>
  <wp:tag_slug>trainsignal</wp:tag_slug>
  <wp:tag_name><![CDATA[TrainSignal]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>71809344</wp:term_id>
  <wp:tag_slug>ucs-powertool</wp:tag_slug>
  <wp:tag_name><![CDATA[ucs powertool]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>8683</wp:term_id>
  <wp:tag_slug>upgrade</wp:tag_slug>
  <wp:tag_name><![CDATA[upgrade]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>6951</wp:term_id>
  <wp:tag_slug>user</wp:tag_slug>
  <wp:tag_name><![CDATA[user]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11170465</wp:term_id>
  <wp:tag_slug>vapp</wp:tag_slug>
  <wp:tag_name><![CDATA[vApp]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>61790</wp:term_id>
  <wp:tag_slug>vcd</wp:tag_slug>
  <wp:tag_name><![CDATA[vcd]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>33341797</wp:term_id>
  <wp:tag_slug>vcheck</wp:tag_slug>
  <wp:tag_name><![CDATA[vcheck]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11114916</wp:term_id>
  <wp:tag_slug>vcloud</wp:tag_slug>
  <wp:tag_name><![CDATA[vCloud]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>108829102</wp:term_id>
  <wp:tag_slug>vcloud-5-1</wp:tag_slug>
  <wp:tag_name><![CDATA[vcloud 5.1]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>11230762</wp:term_id>
  <wp:tag_slug>vcloud-api</wp:tag_slug>
  <wp:tag_name><![CDATA[vCloud API]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>72603508</wp:term_id>
  <wp:tag_slug>vcloud-connector</wp:tag_slug>
  <wp:tag_name><![CDATA[vcloud connector]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>41745095</wp:term_id>
  <wp:tag_slug>vcloud-director</wp:tag_slug>
  <wp:tag_name><![CDATA[vCloud Director]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>109730988</wp:term_id>
  <wp:tag_slug>vcloud-director-5-1</wp:tag_slug>
  <wp:tag_name><![CDATA[vcloud director 5.1]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>80432029</wp:term_id>
  <wp:tag_slug>vcloud-media</wp:tag_slug>
  <wp:tag_name><![CDATA[vcloud media]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>87485602</wp:term_id>
  <wp:tag_slug>vcloud-vapp</wp:tag_slug>
  <wp:tag_name><![CDATA[vcloud vapp]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>90161452</wp:term_id>
  <wp:tag_slug>vcloud-vapp-template</wp:tag_slug>
  <wp:tag_name><![CDATA[vcloud vapp template]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>154866633</wp:term_id>
  <wp:tag_slug>vdportgroup</wp:tag_slug>
  <wp:tag_name><![CDATA[vdportgroup]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>26701813</wp:term_id>
  <wp:tag_slug>vforum</wp:tag_slug>
  <wp:tag_name><![CDATA[vforum]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>95007</wp:term_id>
  <wp:tag_slug>virtual-machine</wp:tag_slug>
  <wp:tag_name><![CDATA[Virtual machine]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>227425</wp:term_id>
  <wp:tag_slug>visio</wp:tag_slug>
  <wp:tag_name><![CDATA[visio]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>185229</wp:term_id>
  <wp:tag_slug>vm</wp:tag_slug>
  <wp:tag_name><![CDATA[vm]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>5259400</wp:term_id>
  <wp:tag_slug>vmdk</wp:tag_slug>
  <wp:tag_name><![CDATA[vmdk]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>38600</wp:term_id>
  <wp:tag_slug>vmware</wp:tag_slug>
  <wp:tag_name><![CDATA[vmware]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>694921</wp:term_id>
  <wp:tag_slug>vmware-tools</wp:tag_slug>
  <wp:tag_name><![CDATA[VMware Tools]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>30487138</wp:term_id>
  <wp:tag_slug>vmware-vmfs</wp:tag_slug>
  <wp:tag_name><![CDATA[VMware VMFS]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>19528666</wp:term_id>
  <wp:tag_slug>vmware-vsphere</wp:tag_slug>
  <wp:tag_name><![CDATA[VMware vSphere]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>1769597</wp:term_id>
  <wp:tag_slug>vmworld</wp:tag_slug>
  <wp:tag_name><![CDATA[vmworld]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>26423681</wp:term_id>
  <wp:tag_slug>vmxnet</wp:tag_slug>
  <wp:tag_name><![CDATA[vmxnet]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>25256160</wp:term_id>
  <wp:tag_slug>vmxnet3</wp:tag_slug>
  <wp:tag_name><![CDATA[vmxnet3]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>72603586</wp:term_id>
  <wp:tag_slug>vshield-2</wp:tag_slug>
  <wp:tag_name><![CDATA[vshield]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>14854842</wp:term_id>
  <wp:tag_slug>vsphere</wp:tag_slug>
  <wp:tag_name><![CDATA[vsphere]]></wp:tag_name>
</wp:tag>
<wp:tag>
  <wp:term_id>926032</wp:term_id>
  <wp:tag_slug>windows-powershell</wp:tag_slug>
  <wp:tag_name><![CDATA[Windows Powershell]]></wp:tag_name>
</wp:tag>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://secure.gravatar.com/blavatar/c01d5eece5eab656c984356160469db9?s=96&#038;d=https%3A%2F%2Fs2.wp.com%2Fi%2Fbuttonw-com.png</url>
		<title>Geek after FiveGeek after Five</title>
		<link>http://geekafterfive.com</link>
	</image>
	<item>
  <title>About</title>
  <link>http://geekafterfive.com/about/</link>
  <pubDate>Fri, 07 Jan 2011 20:42:41 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.wordpress.com/?page_id=2</guid>
  <description></description>
  <content:encoded><![CDATA[<a href="http://geekafterfive.files.wordpress.com/2011/01/04.jpg"><img class="alignright size-medium wp-image-367" title="04" alt="" src="http://geekafterfive.files.wordpress.com/2011/01/04.jpg?w=199" width="199" height="300" /></a>Hello! You've stumbled upon my "about" page. I can assume one of two things about you. You're either stalking me, which is completely flattering, but also creepy...or you are here to learn something. Maybe the term "Geek after Five" intrigues you. Maybe you want to know where I work, or what I look like, or how I made that cool "Link" graphic from Zelda. I intend to answer all of that on this page. Of course, if you want to know something else, I'd love to chat! Hit me up on twitter: <a href="https://twitter.com/#!/jakerobinson" target="_blank">@jakerobinson</a>.
<h2>Jake Robinson in a Nutshell</h2>
I could do a really funny Austin Powers impression about being in a nutshell, but I will spare you. That does bring up a pretty good point though. I'm goofy, I love to laugh and am always optimistic.
<h3>My Profession</h3>
I'll spare you the long drawn out version of my professional story, but I'll tell you I knew I wanted to be in the technology field since I was in 6th grade. I consider myself an IT Generalist, but specialize in Virtualized Infrastructure. I now work at Bluelock, an amazing  Public Cloud Provider that was founded in 2006. We've been VMware based since day 1, and the Bluelock/VMware partnership has only gotten stronger. My official title is Systems Engineer, but my responsibilities vary and include Sales Engineer, Solutions Engineer, and public speaker. The best part of my job is Infrastructure Automation. There is no greater thrill to me than writing code that saves someone hours of time. Powershell is my weapon of choice, but I can write code in a variety of languages.
<h3><a href="http://geekafterfive.files.wordpress.com/2011/01/snag-0021.png"><img class="alignleft  wp-image-366" style="border-color:black;border-style:solid;border-width:3px;" title="SNAG-0021" alt="" src="http://geekafterfive.files.wordpress.com/2011/01/snag-0021.png" width="285" height="205" /></a>My Family</h3>
Leslie and I have been married over 8 years. My son Lucas takes after his dad in the goofy department. He loves to laugh too. Leslie knew she was marrying a geek, so she's learned quite a bit of the technobabble that I constantly output. You'll see Leslie with me at big conferences, so feel free to come hang with us!
<h3>My Faith</h3>
I have a personal relationship with Jesus Christ. All the glory belongs to Him. Ask me about it!
<h2>"Geek After Five"</h2>
<a href="http://geekafterfive.files.wordpress.com/2011/01/gaficon.png"><img class="alignright  wp-image-368" title="gaficon" alt="" src="http://geekafterfive.files.wordpress.com/2011/01/gaficon.png" width="154" height="154" /></a>Are you passionate about something? For me, it's technology. I can't get enough of it. I find joy in reading API programming specifications, and then writing code. I love taking stuff apart to see how it works, and then figuring out how to make it better. I love making things from scratch to understand the process. Understanding things is very important to me. I have to <em>know</em>. The term "Geek after Five" was coined by Pat O'Day, Bluelock's CTO. Sitting across from him in a Mexican Restaurant, he said to me "We look for the 'Geek after Five' factor in our Engineers." I knew exactly what he meant. It was the passion for learning, specifically in the field of IT. He knew I had it. It was easy to spot. You can tell in the inflection of a person's voice what they are truly passionate about.  "Geek after Five" simply means that you are not bound by the 8-5 work schedule. You are driven to learn...to <em>know</em>...to satisfy a thirst for knowledge.

Find what you are truly passionate about and be a "Geek after Five".
<h2>The Logo</h2>
8-bit art is cool. Zelda is cool. Link is certainly the best character in video game history. His 8-bit representation makes for a fun personal brand that captures my persona. I grew up with the Zelda franchise, so I have a certain attachment to it. I did the logo by hand, pixel by pixel in GIMP on a 100x100 canvas.

<a href="http://geekafterfive.files.wordpress.com/2011/01/snag-0020.png"><img class="alignnone  wp-image-365" title="SNAG-0020" alt="" src="http://geekafterfive.files.wordpress.com/2011/01/snag-0020.png" width="158" height="158" /></a><a href="http://geekafterfive.files.wordpress.com/2011/01/zelda-powercli.png"><img class="size-full wp-image-361 alignnone" title="zelda-powercli" alt="" src="http://geekafterfive.files.wordpress.com/2011/01/zelda-powercli.png" width="100" height="100" /></a><a href="http://geekafterfive.files.wordpress.com/2011/01/zelda.png"><img class="alignnone size-full wp-image-362" title="zelda" alt="" src="http://geekafterfive.files.wordpress.com/2011/01/zelda.png" width="100" height="100" /></a><a href="http://geekafterfive.files.wordpress.com/2011/01/zelda-vcloud.png"><img class="alignnone size-full wp-image-613" title="Link-vCloud" alt="" src="http://geekafterfive.files.wordpress.com/2011/01/zelda-vcloud.png" width="100" height="100" /></a>
<h2>Speaker Bio</h2>
Jake Robinson is a Solutions Architect at <a href="http://bluelock.com">Bluelock</a>, a world class vCloud Provider. At Bluelock, Jake has written much of the automation in place for the cloud infrastructure, and also helps clients automate inside their Virtual Datacenters at Bluelock using the vCloud API. Jake is a VMware vExpert, VCP, and former CISSP. Jake's specialties are in infrastructure automation, virtualization, cloud computing, and security. Jake volunteers for several Non-profit organizations including the Indianapolis Children's Museum and Safe Families for Children.

Past speaking engagements include VMWorld, Indianapolis VMUG conference and meetings, VMware vForum, vBrownbag, AITP, BIT conference, and more.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2011-01-07 20:42:41</wp:post_date>
  <wp:post_date_gmt>2011-01-07 20:42:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>525</wp:comment_id>
    <wp:comment_author><![CDATA[VCP-IaaS Study Notes: Section 4.3 &laquo; Virtual-Ice]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://vmice.wordpress.com/2012/09/16/vcp-iaas-study-notes-section-4-3/</wp:comment_author_url>
    <wp:comment_author_IP>72.232.7.95</wp:comment_author_IP>
    <wp:comment_date>2012-09-16 17:50:30</wp:comment_date>
    <wp:comment_date_gmt>2012-09-16 21:50:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] blog-post by Jake Robinson at geekafterfive.com about vApp networks is a recommended [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1347832230.6075170040130615234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1347832290</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>gaflogo.png</title>
  <link>http://geekafterfive.com/?attachment_id=12</link>
  <pubDate>Mon, 04 Apr 2011 17:20:38 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/04/gaflogo.png</guid>
  <description></description>
  <content:encoded><![CDATA[http://geekafterfive.files.wordpress.com/2011/04/gaflogo.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2011-04-04 17:20:38</wp:post_date>
  <wp:post_date_gmt>2011-04-04 17:20:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gaflogo-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/04/gaflogo.png</wp:attachment_url>
</item>
<item>
  <title>gaflogo1.png</title>
  <link>http://geekafterfive.com/?attachment_id=13</link>
  <pubDate>Mon, 04 Apr 2011 17:21:38 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/04/gaflogo1.png</guid>
  <description></description>
  <content:encoded><![CDATA[http://geekafterfive.files.wordpress.com/2011/04/gaflogo1.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>13</wp:post_id>
  <wp:post_date>2011-04-04 17:21:38</wp:post_date>
  <wp:post_date_gmt>2011-04-04 17:21:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gaflogo1-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/04/gaflogo1.png</wp:attachment_url>
</item>
<item>
  <title>dvPortgroup Inheritance</title>
  <link>http://geekafterfive.com/2011/04/04/dvportgroup-inheritance/</link>
  <pubDate>Mon, 04 Apr 2011 19:50:11 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=16</guid>
  <description></description>
  <content:encoded><![CDATA[This is a little Johnny-come-lately, but since I recently ran into this issue dealing with vCloud Director, I thought I would share my solution.

<a title="Duncan's post" href="http://www.yellow-bricks.com/2010/08/02/changing-your-dvportgroup-settings-need-your-input/" target="_blank">Duncan's post</a> from August 2010 talks about the missing default settings for portgroup inheritance in the dvSwitches. Even though it is missing in the vSphere client, the default settings still exist, and can be set in the API.

The original problem was that every new dvPortgroup does not have the correct settings for the environment, so you have to go in and manually set them AFTER the dvPortgroup is created. vCloud Director compounds the issue because users can create dvPortgroups, but don't have access to change the settings (e.g. failover, security).

My temporary solution to the problem was to create a "trolling" script to look for dvPortgroups that were set up incorrectly. The script ran as a scheduled task every 10 minutes. It worked great, but this was a big band-aid that I really didn't like.

I decided over the weekend to dig deeper into the dvSwitch object in the API, and sure enough, there was the <a title="defaultPortConfig" href="http://www.vmware.com/support/developer/vc-sdk/visdk41pubs/ApiReference/vim.DistributedVirtualSwitch.ConfigSpec.html" target="_blank">defaultPortConfig</a>!

So, using the <a href="http://www.vmware.com/support/developer/vc-sdk/visdk41pubs/ApiReference/vim.DistributedVirtualSwitch.html#reconfigure" target="_blank">ReconfigureDvs_Task</a>, I wrote the following PowerCLI script:

[sourcecode language="powershell" wraplines="false"]

#Get the dvSwitch I want to edit
$dvswitch = Get-VirtualSwitch name dvSwitch -distributed | Get-View

#create the spec, note the object type
$spec = New-Object VMware.Vim.DVSConfigSpec
$spec.configVersion = $dvswitch.Config.ConfigVersion
$spec.defaultPortConfig = New-Object VMware.Vim.VMwareDVSPortSetting
$spec.defaultPortConfig.uplinkTeamingPolicy = New-Object VMware.Vim.VmwareUplinkPortTeamingPolicy

#policy
$spec.defaultPortConfig.uplinkTeamingPolicy.policy = New-Object VMware.Vim.StringPolicy
$spec.defaultPortConfig.uplinkTeamingPolicy.policy.inherited = $false
$spec.defaultPortConfig.uplinkTeamingPolicy.policy.value = &quot;failover_explicit&quot;

#notify switches
$spec.defaultPortConfig.uplinkTeamingPolicy.notifySwitches = New-Object VMware.Vim.BoolPolicy
$spec.defaultPortConfig.uplinkTeamingPolicy.notifySwitches.inherited = $false
$spec.defaultPortConfig.uplinkTeamingPolicy.notifySwitches.value = $true

#rolling order
$spec.defaultPortConfig.uplinkTeamingPolicy.rollingOrder = New-Object VMware.Vim.BoolPolicy
$spec.defaultPortConfig.uplinkTeamingPolicy.rollingOrder.inherited = $false
$spec.defaultPortConfig.uplinkTeamingPolicy.rollingOrder.value = $false

#failure criteria
$spec.defaultPortConfig.uplinkTeamingPolicy.failureCriteria = New-Object VMware.Vim.DVSFailureCriteria
$spec.defaultPortConfig.uplinkTeamingPolicy.failureCriteria.inherited = $false
$spec.defaultPortConfig.uplinkTeamingPolicy.failureCriteria.checkBeacon = New-Object VMware.Vim.BoolPolicy
$spec.defaultPortConfig.uplinkTeamingPolicy.failureCriteria.checkBeacon.inherited = $false
$spec.defaultPortConfig.uplinkTeamingPolicy.failureCriteria.checkBeacon.value = $true

#uplink port order
$spec.defaultPortConfig.uplinkTeamingPolicy.uplinkPortOrder = New-Object VMware.Vim.VMwareUplinkPortOrderPolicy
$spec.defaultPortConfig.uplinkTeamingPolicy.uplinkPortOrder.inherited = $false
$spec.defaultPortConfig.uplinkTeamingPolicy.uplinkPortOrder.activeUplinkPort = New-Object System.String[] (2)
$spec.defaultPortConfig.uplinkTeamingPolicy.uplinkPortOrder.activeUplinkPort[0] = &quot;dvUplink1&quot;
$spec.defaultPortConfig.uplinkTeamingPolicy.uplinkPortOrder.activeUplinkPort[1] = &quot;dvUplink3&quot;
$spec.defaultPortConfig.uplinkTeamingPolicy.uplinkPortOrder.standbyUplinkPort = New-Object System.String[] (2)
$spec.defaultPortConfig.uplinkTeamingPolicy.uplinkPortOrder.standbyUplinkPort[0] = &quot;dvUplink2&quot;
$spec.defaultPortConfig.uplinkTeamingPolicy.uplinkPortOrder.standbyUplinkPort[1] = &quot;dvUplink4&quot;

#push the reconfig
$dvswitch.ReconfigureDVS_Task($spec)
[/sourcecode]

(Note: Your failover settings may be very different. This script is just an example. See the <a href="http://www.vmware.com/support/developer/vc-sdk/visdk41pubs/ApiReference/vim.dvs.VmwareDistributedVirtualSwitch.VmwarePortConfigPolicy.html" target="_blank">VMwareDVSPortSetting</a> object type for more information...)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>16</wp:post_id>
  <wp:post_date>2011-04-04 19:50:11</wp:post_date>
  <wp:post_date_gmt>2011-04-04 19:50:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>dvportgroup-inheritance</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="dvportgroups"><![CDATA[dvPortgroups]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[dvPortgroup Inheritance: http://wp.me/p1hst8-g]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>23</wp:comment_id>
    <wp:comment_author><![CDATA[biaachmonkie]]></wp:comment_author>
    <wp:comment_author_email>biaachmonkie@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>75.80.20.106</wp:comment_author_IP>
    <wp:comment_date>2011-11-11 11:08:21</wp:comment_date>
    <wp:comment_date_gmt>2011-11-11 16:08:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This is on vCD 1.5 running on vCenter 5, haven't tested previous versions.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>22</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1321027703</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1321027704.435";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>22</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2011-11-11 10:58:37</wp:comment_date>
    <wp:comment_date_gmt>2011-11-11 15:58:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What version of vCloud Director are you running?

Cheers,

Jake]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>21</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1321027118</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1321027118.6534";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>21</wp:comment_id>
    <wp:comment_author><![CDATA[biaachmonkie]]></wp:comment_author>
    <wp:comment_author_email>biaachmonkie@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>66.51.202.133</wp:comment_author_IP>
    <wp:comment_date>2011-11-11 02:19:49</wp:comment_date>
    <wp:comment_date_gmt>2011-11-11 07:19:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm having an issue getting the uplinkPortOrderto work, setting the default  policy this way worked. But networks I create in vcloud don't have the default uplinkPortOrder.

I have 2 uplinks, dvUplink1 &amp; dvUplink2.

PS &gt;$dvSwitch = Get-VirtualSwitch -Name dvSwitch -distributed | Get-View
PS &gt; $dvSwitch.Config.DefaultPortConfig.UplinkTeamingPolicy.UplinkPortOrder

ActiveUplinkPort  : {dvUplink1, dvUplink2}
StandbyUplinkPort :
Inherited         : False
DynamicType       :
DynamicProperty   :

But the new networks I create in vcloud still have dvUplink1 as the only Active one and dvUplink2 as Standby. I'm using the policy of "loadbalance_ip" so I need to have them both active.

Any suggestions?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1320995989.8205";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1321026986</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1321026986.8307";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>24</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2011-11-11 11:39:28</wp:comment_date>
    <wp:comment_date_gmt>2011-11-11 16:39:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[So, I double checked, and I still have a script running to fix that every time a new portgroup is created. Let me know if you want me to post it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>21</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1321029568</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1321029568.6594";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>25</wp:comment_id>
    <wp:comment_author><![CDATA[biaachmonkie]]></wp:comment_author>
    <wp:comment_author_email>biaachmonkie@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>75.80.20.106</wp:comment_author_IP>
    <wp:comment_date>2011-11-11 11:43:53</wp:comment_date>
    <wp:comment_date_gmt>2011-11-11 16:43:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Sure that would be great, thanks.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>24</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1321029833</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1321029833.4474";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>773</wp:comment_id>
    <wp:comment_author><![CDATA[Setting Default VDSwitch security for vCloud with PowerCLI | Geek after Five]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com/2013/03/14/setting-default-vdswitch-security-for-vcloud-with-powercli/</wp:comment_author_url>
    <wp:comment_author_IP>72.232.7.15</wp:comment_author_IP>
    <wp:comment_date>2013-03-14 15:30:38</wp:comment_date>
    <wp:comment_date_gmt>2013-03-14 19:30:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] http://geekafterfive.com/2011/04/04/dvportgroup-inheritance/ [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363289438.974811077117919921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1363289461</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>vmw_logo_vmware-expert_250x100</title>
  <link>http://geekafterfive.com/?attachment_id=38</link>
  <pubDate>Thu, 07 Jul 2011 15:02:43 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/07/vmw_logo_vmware-expert_250x100.gif</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>38</wp:post_id>
  <wp:post_date>2011-07-07 15:02:43</wp:post_date>
  <wp:post_date_gmt>2011-07-07 15:02:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vmw_logo_vmware-expert_250x100</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/07/vmw_logo_vmware-expert_250x100.gif</wp:attachment_url>
</item>
<item>
  <title>vmw_logo_vmware-expert_250x100</title>
  <link>http://geekafterfive.com/?attachment_id=40</link>
  <pubDate>Thu, 07 Jul 2011 15:37:09 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/07/vmw_logo_vmware-expert_250x100.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>40</wp:post_id>
  <wp:post_date>2011-07-07 15:37:09</wp:post_date>
  <wp:post_date_gmt>2011-07-07 15:37:09</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vmw_logo_vmware-expert_250x100-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/07/vmw_logo_vmware-expert_250x100.png</wp:attachment_url>
</item>
<item>
  <title>Drawing Network Diagrams like Hany Michael</title>
  <link>http://geekafterfive.com/2011/07/15/drawing-network-diagrams-like-hany-michael/</link>
  <pubDate>Fri, 15 Jul 2011 19:14:30 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=43</guid>
  <description></description>
  <content:encoded><![CDATA[It's been said that imitation is the most sincere form of flattery, and it's time <a href="https://twitter.com/#!/hany_michael" target="_blank">Hany Michael</a> got his. :D <a href="http://www.hypervizor.com/diagrams/" target="_blank">His diagrams</a> are beautiful, easy to understand, packed with info, and wildly popular in the VMware community. <a title="vCloud Director Cell Architecture" href="http://kb.vmware.com/kb/1030954" target="_blank">VMware thinks so too.</a> (of course, they employ him...)

Of course I am constantly trying to evolve my diagrams to have all the makings of a real, publishable document, but they always turn out to be "Engineery" looking. I continually develop my skills to be both pleasant for Marketing to slap on their material, but also educational/informative for the Technical audience. <a href="http://www.ratemynetworkdiagram.com/index2.php" target="_blank">ratemynetworkdiagram.com</a> is also a fun place to get some style ideas as well. (and sometimes<a href="http://www.ratemynetworkdiagram.com/?i=1022" target="_blank"> a good laugh</a>)

So here is a list of generalizations I have extracted from Hany's diagrams, along with some of my own tips. May it help you on your quest to put out great documentation!

<strong>Hany Rule #1: Gray is the new black.</strong>

Black is only used in two places in Hany's diagrams:
<ol>
	<li>Text outside of containers.</li>
	<li>Connection paths in the form of dashed lines.</li>
</ol>
<div>Black can also be used as a background color for objects, but use in moderation.  Gray is used for all other tasks against the background, mostly because it allows everything inside it to pop visually. The level of gray may depend on what color you are using as your fill color, so you will have to play around with what looks best. This especially applies to gray filled objects and backgrounds. You don't want your border the same color as your fill or background.</div>
<strong>Hany Rule #2: Objects and containers have rounded corners and have a border.<a href="http://geekafterfive.files.wordpress.com/2011/07/roundcorners.png"><img class="alignright size-full wp-image-57" style="border-color:black;border-style:solid;border-width:3px;" title="roundCorners" src="http://geekafterfive.files.wordpress.com/2011/07/roundcorners.png" alt="" width="154" height="122" /></a></strong>

Sharp corners are for labels and tables (text lists). Objects and containers have a gray border and round corners. Objects within other colored objects should use a lighter border, closer to white.
<div><span style="color:#0000ee;"><span style="text-decoration:underline;">
</span></span><strong></strong></div>
<a href="http://geekafterfive.files.wordpress.com/2011/07/swoopy.png"><img class="size-full wp-image-52 alignleft" style="border-color:initial;border-style:initial;" title="swoopy" src="http://geekafterfive.files.wordpress.com/2011/07/swoopy.png" alt="" width="136" height="79" /></a>
<div><strong>Hany Rule #3: Right-angle lines are ugly.</strong></div>
<div>

<a href="http://geekafterfive.files.wordpress.com/2011/07/swoopy.png">
</a>Hany doesn't go with the old right angle connectors. He's mastered the freeform line tool. I suggest you master it as well. Swoopy lines are much more pleasing to the eye. Use different colors, but try to keep them on the lighter spectrum, thin, and dashed...and swoopy. :D

<strong>Hany Rule #4: Use Containers.</strong>

<a href="http://geekafterfive.files.wordpress.com/2011/07/container.png"><img class="alignright size-full wp-image-56" style="border-color:initial;border-style:initial;" title="container" src="http://geekafterfive.files.wordpress.com/2011/07/container.png" alt="" width="176" height="124" /></a>

</div>
<div>Containers make a great representation for something that only exists in a logical sense. vApps are a great example. A vApp is a logical container for multiple VMs working together to provide a single application. It only makes sense to call out their relationship. Containers are generally not filled with a color.</div>
<div>

<strong>Hany Rule #5: Use a background image.</strong>

This is probably the biggest visual enhancement of them all. Who'd have thought that putting some sort of soft gray abstract image in the background would improve a diagram? The bold colors on top of a soft gray make for an eye-pleasing experience.

<img class="alignleft size-full wp-image-55" title="redobject" src="http://geekafterfive.files.wordpress.com/2011/07/redobject.png" alt="" width="154" height="84" /><strong>Hany Rule #6: White text on bold colors.</strong>

Use bold colors for your objects, and stick to white text. If the color is too light to use white text, you should probably pick another color. :D Obviously white text on a clear container background wouldn't work, so add some kind of header to your containers.

<strong>Hany Rule #7: Make your own stencil.</strong>

<a href="http://geekafterfive.files.wordpress.com/2011/07/cloud.png"><img class="size-full wp-image-51 alignright" style="border-color:initial;border-style:initial;" title="cloud" src="http://geekafterfive.files.wordpress.com/2011/07/cloud.png" alt="" width="136" height="88" /></a>

I, for the life of me, could not find a VM related stencil that I liked. And since I do more VM logical network diagrams than physical network diagrams, I needed something else. So, what to do? Make your own! Making your own stencil is as easy as grouping different shapes together and a drag-drop to your stencil area. Example...I couldn't find a cloud stencil that I liked, so I took a bunch of circles, grouped them, and voila. Cloud stencil. As a bonus for reading my post, I'll let you download mine. :D

<img class="size-full wp-image-53 alignleft" style="border-color:black;border-style:solid;border-width:3px;" title="sendtoback" src="http://geekafterfive.files.wordpress.com/2011/07/sendtoback.png" alt="" width="190" height="246" />

<strong>Jake's trick: Send to back, bring to front</strong>

Don't worry about connection lines perfectly lining up with an object. Just send the connection line to the back, or bring the connected object to the front! Perfect every time!

<strong>Jake's</strong><strong>trick: Keyboard shortcuts</strong>

<a href="http://geekafterfive.files.wordpress.com/2011/07/ctrld.png"><img class="size-full wp-image-54 alignright" style="border-color:initial;border-style:initial;" title="ctrld" src="http://geekafterfive.files.wordpress.com/2011/07/ctrld.png" alt="" width="146" height="143" /></a>

</div>
<div>

My absolute favorite is Ctrl-D, which duplicates whatever you have selected. Even if you don't need an exact duplication, but like the size of a text box, for instance, I just duplicate the text object, and change the inside text. That way, I don't have to fiddle around with sizing and text alignment within the box! You can also select multiple objects and Ctrl-D. Saves tons of time.

<strong>Jake's trick: 2D or Isometric. Pick one.</strong>

Don't put Isometric objects in a 2D diagram, and don't use 2D lines and objects in a Isometric diagram. The problem with that of course, is that all of the hardware vendors and even VMware use isometric objects in their stencils. All the more reason to create your own 2D stencil...

<a href="http://www.ratemynetworkdiagram.com/?i=14086" target="_blank">Here</a> is an example of a good isometric diagram.

So in summary, Thank you Hany for setting the standard by which we should all abide by!
<p style="text-align:center;"><a href="http://geekafterfive.files.wordpress.com/2011/07/samplediagram1.png"><img class="aligncenter size-full wp-image-62" style="border-color:black;border-style:solid;border-width:3px;" title="samplediagram" src="http://geekafterfive.files.wordpress.com/2011/07/samplediagram1.png" alt="" width="441" height="324" /></a></p>
Oh yeah, and since you made it to the end, <a href="http://dl.dropbox.com/u/225399/2dVMStencil.vss" target="_blank">here</a> is a stencil for you!

</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>43</wp:post_id>
  <wp:post_date>2011-07-15 19:14:30</wp:post_date>
  <wp:post_date_gmt>2011-07-15 19:14:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>drawing-network-diagrams-like-hany-michael</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="visio"><![CDATA[visio]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Drawing amazing virtual network diagrams: http://wp.me/p1hst8-H #vmware]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>2</wp:comment_id>
    <wp:comment_author><![CDATA[My Diagram Secrets Exposed! | HYPERVIZOR]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://www.hypervizor.com/2011/07/my-diagram-secrets-exposed/</wp:comment_author_url>
    <wp:comment_author_IP>66.147.244.221</wp:comment_author_IP>
    <wp:comment_date>2011-07-15 20:25:33</wp:comment_date>
    <wp:comment_date_gmt>2011-07-15 20:25:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Out of the blue, and while I was doing some geeky stuff with WAMP, ColdFusion and the vCloud PHP APIs, I&#8217;ve received a ping back from another blog with a title called: &#8220;Drawing Network Diagrams like Hany Michael&#8221; [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310761533.9829";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1310835330</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310835330.8863";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>3</wp:comment_id>
    <wp:comment_author><![CDATA[Hasnul]]></wp:comment_author>
    <wp:comment_author_email>hasnulf@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>61.6.55.164</wp:comment_author_IP>
    <wp:comment_date>2011-07-16 07:06:50</wp:comment_date>
    <wp:comment_date_gmt>2011-07-16 07:06:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice article.. Just wondering, what tool to use to draw the isometric designs?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310800010.8746";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1310835393</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310835393.7386";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>4</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2011-07-16 16:56:29</wp:comment_date>
    <wp:comment_date_gmt>2011-07-16 16:56:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[All done in Visio. There are some great isometric stencils with isometric connectors if you google around. I'll post a link or two.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>3</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1310835391</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1310835392.0602";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>5</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2011-07-16 17:35:20</wp:comment_date>
    <wp:comment_date_gmt>2011-07-16 17:35:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Here ya go! http://www.visguy.com/2007/10/29/oblique-connectors-for-your-3d-diagrams/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>3</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1310837722</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1310837723.522";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>6</wp:comment_id>
    <wp:comment_author><![CDATA[Matt Mullins]]></wp:comment_author>
    <wp:comment_author_email>matt@mmullins.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>71.57.20.91</wp:comment_author_IP>
    <wp:comment_date>2011-07-19 22:54:08</wp:comment_date>
    <wp:comment_date_gmt>2011-07-19 22:54:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks Jake, I have been looking for a decent cloud to use.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:13:"1311116048.87";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1311777915</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1311777916.0395";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>260</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-06-25 17:26:28</wp:comment_date>
    <wp:comment_date_gmt>2012-06-25 21:26:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Excellent tip! :D I am thinking about doing a followup to this post, and may add this one to it!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>259</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340659589</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340659589.8407";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>259</wp:comment_id>
    <wp:comment_author><![CDATA[Pang Chen]]></wp:comment_author>
    <wp:comment_author_email>pchen@vmware.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>72.52.96.33</wp:comment_author_IP>
    <wp:comment_date>2012-06-25 17:24:02</wp:comment_date>
    <wp:comment_date_gmt>2012-06-25 21:24:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Another tip is to use a small color palette and more importantly, use colors consistently. This helps add clarity by minimizing subconscious noise.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340659442.2145";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340659507</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340659507.5376";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>114</wp:comment_id>
    <wp:comment_author><![CDATA[Mark Nudelman]]></wp:comment_author>
    <wp:comment_author_email>mark@nudelman.com</wp:comment_author_email>
    <wp:comment_author_url>http://marknudelman.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>65.113.40.1</wp:comment_author_IP>
    <wp:comment_date>2012-03-02 20:09:31</wp:comment_date>
    <wp:comment_date_gmt>2012-03-03 01:09:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://marknudelman.com/2012/03/02/151/" rel="nofollow">The Windows &amp; VMware Guru</a>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>21659665</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330883921</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330736971.6466";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"marknudelman";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>cloud</title>
  <link>http://geekafterfive.com/2011/07/15/drawing-network-diagrams-like-hany-michael/cloud/</link>
  <pubDate>Fri, 15 Jul 2011 17:47:48 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/07/cloud.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>51</wp:post_id>
  <wp:post_date>2011-07-15 17:47:48</wp:post_date>
  <wp:post_date_gmt>2011-07-15 17:47:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cloud</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>43</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/07/cloud.png</wp:attachment_url>
</item>
<item>
  <title>swoopy</title>
  <link>http://geekafterfive.com/2011/07/15/drawing-network-diagrams-like-hany-michael/swoopy/</link>
  <pubDate>Fri, 15 Jul 2011 17:55:57 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/07/swoopy.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>52</wp:post_id>
  <wp:post_date>2011-07-15 17:55:57</wp:post_date>
  <wp:post_date_gmt>2011-07-15 17:55:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>swoopy</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>43</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/07/swoopy.png</wp:attachment_url>
</item>
<item>
  <title>sendtoback</title>
  <link>http://geekafterfive.com/2011/07/15/drawing-network-diagrams-like-hany-michael/sendtoback/</link>
  <pubDate>Fri, 15 Jul 2011 18:03:47 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/07/sendtoback.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>53</wp:post_id>
  <wp:post_date>2011-07-15 18:03:47</wp:post_date>
  <wp:post_date_gmt>2011-07-15 18:03:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sendtoback</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>43</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/07/sendtoback.png</wp:attachment_url>
</item>
<item>
  <title>ctrld</title>
  <link>http://geekafterfive.com/2011/07/15/drawing-network-diagrams-like-hany-michael/ctrld/</link>
  <pubDate>Fri, 15 Jul 2011 18:06:42 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/07/ctrld.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>54</wp:post_id>
  <wp:post_date>2011-07-15 18:06:42</wp:post_date>
  <wp:post_date_gmt>2011-07-15 18:06:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ctrld</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>43</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/07/ctrld.png</wp:attachment_url>
</item>
<item>
  <title>redobject</title>
  <link>http://geekafterfive.com/2011/07/15/drawing-network-diagrams-like-hany-michael/redobject/</link>
  <pubDate>Fri, 15 Jul 2011 18:11:44 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/07/redobject.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>55</wp:post_id>
  <wp:post_date>2011-07-15 18:11:44</wp:post_date>
  <wp:post_date_gmt>2011-07-15 18:11:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>redobject</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>43</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/07/redobject.png</wp:attachment_url>
</item>
<item>
  <title>container</title>
  <link>http://geekafterfive.com/2011/07/15/drawing-network-diagrams-like-hany-michael/container/</link>
  <pubDate>Fri, 15 Jul 2011 18:46:10 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/07/container.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>56</wp:post_id>
  <wp:post_date>2011-07-15 18:46:10</wp:post_date>
  <wp:post_date_gmt>2011-07-15 18:46:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>container</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>43</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/07/container.png</wp:attachment_url>
</item>
<item>
  <title>roundCorners</title>
  <link>http://geekafterfive.com/2011/07/15/drawing-network-diagrams-like-hany-michael/roundcorners/</link>
  <pubDate>Fri, 15 Jul 2011 18:48:52 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/07/roundcorners.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>57</wp:post_id>
  <wp:post_date>2011-07-15 18:48:52</wp:post_date>
  <wp:post_date_gmt>2011-07-15 18:48:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>roundcorners</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>43</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/07/roundcorners.png</wp:attachment_url>
</item>
<item>
  <title>samplediagram</title>
  <link>http://geekafterfive.com/2011/07/15/drawing-network-diagrams-like-hany-michael/samplediagram/</link>
  <pubDate>Fri, 15 Jul 2011 19:11:43 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/07/samplediagram.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>61</wp:post_id>
  <wp:post_date>2011-07-15 19:11:43</wp:post_date>
  <wp:post_date_gmt>2011-07-15 19:11:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>samplediagram</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>43</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/07/samplediagram.png</wp:attachment_url>
</item>
<item>
  <title>samplediagram</title>
  <link>http://geekafterfive.com/2011/07/15/drawing-network-diagrams-like-hany-michael/samplediagram-2/</link>
  <pubDate>Fri, 15 Jul 2011 19:12:48 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/07/samplediagram1.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>62</wp:post_id>
  <wp:post_date>2011-07-15 19:12:48</wp:post_date>
  <wp:post_date_gmt>2011-07-15 19:12:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>samplediagram-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>43</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/07/samplediagram1.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0018</title>
  <link>http://geekafterfive.com/2011/09/06/vmware-vcloud-powercli-snapin/snag-0018/</link>
  <pubDate>Tue, 06 Sep 2011 15:45:48 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/09/snag-0018.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>74</wp:post_id>
  <wp:post_date>2011-09-06 15:45:48</wp:post_date>
  <wp:post_date_gmt>2011-09-06 15:45:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0018</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>71</wp:post_parent>
  <wp:menu_order>1</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/09/snag-0018.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0009</title>
  <link>http://geekafterfive.com/2011/09/06/vmware-vcloud-powercli-snapin/snag-0009/</link>
  <pubDate>Tue, 06 Sep 2011 16:03:24 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/09/snag-0009.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>76</wp:post_id>
  <wp:post_date>2011-09-06 16:03:24</wp:post_date>
  <wp:post_date_gmt>2011-09-06 16:03:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0009</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>71</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/09/snag-0009.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0003</title>
  <link>http://geekafterfive.com/2011/09/06/vmware-vcloud-powercli-snapin/snag-0003/</link>
  <pubDate>Tue, 06 Sep 2011 16:30:48 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/09/snag-0003.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>77</wp:post_id>
  <wp:post_date>2011-09-06 16:30:48</wp:post_date>
  <wp:post_date_gmt>2011-09-06 16:30:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0003</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>71</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/09/snag-0003.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0003</title>
  <link>http://geekafterfive.com/2011/09/06/vmware-vcloud-powercli-snapin/snag-0003-2/</link>
  <pubDate>Tue, 06 Sep 2011 16:31:28 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/09/snag-00031.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>78</wp:post_id>
  <wp:post_date>2011-09-06 16:31:28</wp:post_date>
  <wp:post_date_gmt>2011-09-06 16:31:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0003-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>71</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/09/snag-00031.png</wp:attachment_url>
</item>
<item>
  <title>epic fail</title>
  <link>http://geekafterfive.com/2011/10/07/powers-combined-powercli-and-ovftool/10-7-2011-3-28-58-pm/</link>
  <pubDate>Fri, 07 Oct 2011 19:47:42 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/10/10-7-2011-3-28-58-pm.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>119</wp:post_id>
  <wp:post_date>2011-10-07 19:47:42</wp:post_date>
  <wp:post_date_gmt>2011-10-07 19:47:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>10-7-2011-3-28-58-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>110</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/10/10-7-2011-3-28-58-pm.png</wp:attachment_url>
</item>
<item>
  <title>FTW!</title>
  <link>http://geekafterfive.com/2011/10/07/powers-combined-powercli-and-ovftool/10-7-2011-3-32-29-pm/</link>
  <pubDate>Fri, 07 Oct 2011 19:53:21 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/10/10-7-2011-3-32-29-pm.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>121</wp:post_id>
  <wp:post_date>2011-10-07 19:53:21</wp:post_date>
  <wp:post_date_gmt>2011-10-07 19:53:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>10-7-2011-3-32-29-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>110</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/10/10-7-2011-3-32-29-pm.png</wp:attachment_url>
</item>
<item>
  <title>10-7-2011 3-32-50 PM</title>
  <link>http://geekafterfive.com/2011/10/07/powers-combined-powercli-and-ovftool/10-7-2011-3-32-50-pm/</link>
  <pubDate>Fri, 07 Oct 2011 19:54:11 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/10/10-7-2011-3-32-50-pm.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>122</wp:post_id>
  <wp:post_date>2011-10-07 19:54:11</wp:post_date>
  <wp:post_date_gmt>2011-10-07 19:54:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>10-7-2011-3-32-50-pm</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>110</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/10/10-7-2011-3-32-50-pm.png</wp:attachment_url>
</item>
<item>
  <title>The Planeteers</title>
  <link>http://geekafterfive.com/2011/10/07/powers-combined-powercli-and-ovftool/theplaneteers/</link>
  <pubDate>Wed, 26 Oct 2011 14:29:24 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/10/theplaneteers.jpg</guid>
  <description></description>
  <content:encoded><![CDATA[http://en.wikipedia.org/wiki/Captain_Planet_and_the_Planeteers]]></content:encoded>
  <excerpt:encoded><![CDATA["By your powers combined!!!"]]></excerpt:encoded>
  <wp:post_id>127</wp:post_id>
  <wp:post_date>2011-10-26 10:29:24</wp:post_date>
  <wp:post_date_gmt>2011-10-26 14:29:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>theplaneteers</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>110</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/10/theplaneteers.jpg</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
    <wp:meta_value><![CDATA["By your powers combined!!!"]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c55418f037055374896227f23fe93941</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Backing up individual vShield Edge Firewall Configs</title>
  <link>http://geekafterfive.com/?p=144</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=144</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>144</wp:post_id>
  <wp:post_date>2011-11-29 22:19:54</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name></wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Working with VMware REST APIs Part 1: Tools</title>
  <link>http://geekafterfive.com/?p=162</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=162</guid>
  <description></description>
  <content:encoded><![CDATA[Rather than start off with a how-to on reading the VMware API programming guides (blah), I've decided to start with something a lot more fun: Tools!

Of course, before we get to the tools, I want to make sure you know what REST is, and why it is so flipping awesome.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>162</wp:post_id>
  <wp:post_date>2011-12-03 17:42:16</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name></wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>image3</title>
  <link>http://geekafterfive.com/2012/01/09/powercli-in-the-cloud/image3/</link>
  <pubDate>Fri, 06 Jan 2012 20:48:35 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/01/image3.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>172</wp:post_id>
  <wp:post_date>2012-01-06 15:48:35</wp:post_date>
  <wp:post_date_gmt>2012-01-06 20:48:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>image3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>167</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/01/image3.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0000</title>
  <link>http://geekafterfive.com/2012/01/09/powercli-in-the-cloud/snag-0000/</link>
  <pubDate>Fri, 06 Jan 2012 21:52:17 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/01/snag-0000.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>192</wp:post_id>
  <wp:post_date>2012-01-06 16:52:17</wp:post_date>
  <wp:post_date_gmt>2012-01-06 21:52:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0000</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>167</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/01/snag-0000.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0000</title>
  <link>http://geekafterfive.com/2012/01/09/powercli-in-the-cloud/snag-0000-2/</link>
  <pubDate>Fri, 06 Jan 2012 21:53:23 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/01/snag-00001.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>194</wp:post_id>
  <wp:post_date>2012-01-06 16:53:23</wp:post_date>
  <wp:post_date_gmt>2012-01-06 21:53:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0000-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>167</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/01/snag-00001.png</wp:attachment_url>
</item>
<item>
  <title>powercli55</title>
  <link>http://geekafterfive.com/2012/01/09/powercli-in-the-cloud/powercli55/</link>
  <pubDate>Sat, 07 Jan 2012 01:50:15 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/01/powercli55.jpg</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>200</wp:post_id>
  <wp:post_date>2012-01-06 20:50:15</wp:post_date>
  <wp:post_date_gmt>2012-01-07 01:50:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>powercli55</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>167</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/01/powercli55.jpg</wp:attachment_url>
</item>
<item>
  <title>powercli501</title>
  <link>http://geekafterfive.com/2012/01/09/powercli-in-the-cloud/powercli501/</link>
  <pubDate>Tue, 10 Jan 2012 03:07:00 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/01/powercli501.jpg</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>207</wp:post_id>
  <wp:post_date>2012-01-09 22:07:00</wp:post_date>
  <wp:post_date_gmt>2012-01-10 03:07:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>powercli501</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>167</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/01/powercli501.jpg</wp:attachment_url>
</item>
<item>
  <title>gaflogozelda.png</title>
  <link>http://geekafterfive.com/?attachment_id=212</link>
  <pubDate>Tue, 10 Jan 2012 03:33:36 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/01/gaflogozelda.png</guid>
  <description></description>
  <content:encoded><![CDATA[http://geekafterfive.files.wordpress.com/2012/01/gaflogozelda.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>212</wp:post_id>
  <wp:post_date>2012-01-09 22:33:36</wp:post_date>
  <wp:post_date_gmt>2012-01-10 03:33:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gaflogozelda-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/01/gaflogozelda.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
    <wp:meta_value><![CDATA[pub/elegant-grunge]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>gaflogozelda1.png</title>
  <link>http://geekafterfive.com/?attachment_id=213</link>
  <pubDate>Tue, 10 Jan 2012 04:07:36 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/01/gaflogozelda1.png</guid>
  <description></description>
  <content:encoded><![CDATA[http://geekafterfive.files.wordpress.com/2012/01/gaflogozelda1.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>213</wp:post_id>
  <wp:post_date>2012-01-09 23:07:36</wp:post_date>
  <wp:post_date_gmt>2012-01-10 04:07:36</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gaflogozelda1-png</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/01/gaflogozelda1.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_context</wp:meta_key>
    <wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_is_custom_header</wp:meta_key>
    <wp:meta_value><![CDATA[pub/elegant-grunge]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>SNAG-0011</title>
  <link>http://geekafterfive.com/2012/02/02/flexible-adapters-and-the-importance-of-vmware-tools/snag-0011/</link>
  <pubDate>Thu, 02 Feb 2012 03:49:51 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0011.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>319</wp:post_id>
  <wp:post_date>2012-02-01 22:49:51</wp:post_date>
  <wp:post_date_gmt>2012-02-02 03:49:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0011</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>258</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0011.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0012</title>
  <link>http://geekafterfive.com/2012/02/02/flexible-adapters-and-the-importance-of-vmware-tools/snag-0012/</link>
  <pubDate>Thu, 02 Feb 2012 03:51:55 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0012.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>320</wp:post_id>
  <wp:post_date>2012-02-01 22:51:55</wp:post_date>
  <wp:post_date_gmt>2012-02-02 03:51:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0012</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>258</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0012.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0047</title>
  <link>http://geekafterfive.com/2012/02/06/poll-bluelock-booth-giveaways/snag-0047/</link>
  <pubDate>Mon, 06 Feb 2012 22:07:34 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0047.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>342</wp:post_id>
  <wp:post_date>2012-02-06 17:07:34</wp:post_date>
  <wp:post_date_gmt>2012-02-06 22:07:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0047</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>341</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0047.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0040</title>
  <link>http://geekafterfive.com/2012/02/06/poll-bluelock-booth-giveaways/snag-0040/</link>
  <pubDate>Mon, 06 Feb 2012 22:07:43 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0040.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>343</wp:post_id>
  <wp:post_date>2012-02-06 17:07:43</wp:post_date>
  <wp:post_date_gmt>2012-02-06 22:07:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0040</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>341</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0040.png</wp:attachment_url>
</item>
<item>
  <title>zelda-powercli</title>
  <link>http://geekafterfive.com/about/zelda-powercli/</link>
  <pubDate>Sat, 11 Feb 2012 06:08:53 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/01/zelda-powercli.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>361</wp:post_id>
  <wp:post_date>2012-02-11 01:08:53</wp:post_date>
  <wp:post_date_gmt>2012-02-11 06:08:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>zelda-powercli</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/01/zelda-powercli.png</wp:attachment_url>
</item>
<item>
  <title>zelda</title>
  <link>http://geekafterfive.com/about/zelda/</link>
  <pubDate>Sat, 11 Feb 2012 06:08:54 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/01/zelda.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>362</wp:post_id>
  <wp:post_date>2012-02-11 01:08:54</wp:post_date>
  <wp:post_date_gmt>2012-02-11 06:08:54</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>zelda</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/01/zelda.png</wp:attachment_url>
</item>
<item>
  <title>zelda-black</title>
  <link>http://geekafterfive.com/about/zelda-black/</link>
  <pubDate>Sat, 11 Feb 2012 06:08:55 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/01/zelda-black.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>363</wp:post_id>
  <wp:post_date>2012-02-11 01:08:55</wp:post_date>
  <wp:post_date_gmt>2012-02-11 06:08:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>zelda-black</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/01/zelda-black.png</wp:attachment_url>
</item>
<item>
  <title>linkSOPA</title>
  <link>http://geekafterfive.com/about/linksopa/</link>
  <pubDate>Sat, 11 Feb 2012 06:08:55 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/01/linksopa.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>364</wp:post_id>
  <wp:post_date>2012-02-11 01:08:55</wp:post_date>
  <wp:post_date_gmt>2012-02-11 06:08:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>linksopa</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/01/linksopa.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0020</title>
  <link>http://geekafterfive.com/about/snag-0020/</link>
  <pubDate>Sat, 11 Feb 2012 06:12:30 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/01/snag-0020.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>365</wp:post_id>
  <wp:post_date>2012-02-11 01:12:30</wp:post_date>
  <wp:post_date_gmt>2012-02-11 06:12:30</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0020</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/01/snag-0020.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0021</title>
  <link>http://geekafterfive.com/about/snag-0021/</link>
  <pubDate>Sat, 11 Feb 2012 06:16:24 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/01/snag-0021.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>366</wp:post_id>
  <wp:post_date>2012-02-11 01:16:24</wp:post_date>
  <wp:post_date_gmt>2012-02-11 06:16:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0021</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/01/snag-0021.png</wp:attachment_url>
</item>
<item>
  <title>04</title>
  <link>http://geekafterfive.com/about/attachment/04/</link>
  <pubDate>Sat, 11 Feb 2012 06:19:33 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/01/04.jpg</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>367</wp:post_id>
  <wp:post_date>2012-02-11 01:19:33</wp:post_date>
  <wp:post_date_gmt>2012-02-11 06:19:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>04</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/01/04.jpg</wp:attachment_url>
</item>
<item>
  <title>gaficon</title>
  <link>http://geekafterfive.com/about/gaficon/</link>
  <pubDate>Sat, 11 Feb 2012 06:25:39 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/01/gaficon.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>368</wp:post_id>
  <wp:post_date>2012-02-11 01:25:39</wp:post_date>
  <wp:post_date_gmt>2012-02-11 06:25:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>gaficon</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/01/gaficon.png</wp:attachment_url>
</item>
<item>
  <title>punchout1</title>
  <link>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/punchout1/</link>
  <pubDate>Fri, 24 Feb 2012 02:01:19 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/punchout1.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>373</wp:post_id>
  <wp:post_date>2012-02-23 21:01:19</wp:post_date>
  <wp:post_date_gmt>2012-02-24 02:01:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>punchout1</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>370</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/punchout1.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0029</title>
  <link>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/snag-0029/</link>
  <pubDate>Fri, 24 Feb 2012 05:51:14 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0029.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Before...Connected to vAppNetwork2 with an IP on the .2 subnet.]]></excerpt:encoded>
  <wp:post_id>399</wp:post_id>
  <wp:post_date>2012-02-24 00:51:14</wp:post_date>
  <wp:post_date_gmt>2012-02-24 05:51:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0029</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>370</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0029.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0030</title>
  <link>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/snag-0030/</link>
  <pubDate>Fri, 24 Feb 2012 05:51:15 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0030.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[After...vAppNetwork3, and an IP on the .3 subnet!]]></excerpt:encoded>
  <wp:post_id>400</wp:post_id>
  <wp:post_date>2012-02-24 00:51:15</wp:post_date>
  <wp:post_date_gmt>2012-02-24 05:51:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0030</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>370</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0030.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0028</title>
  <link>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/snag-0028/</link>
  <pubDate>Fri, 24 Feb 2012 05:54:28 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0028.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Newly expanded drive!!! YES!]]></excerpt:encoded>
  <wp:post_id>401</wp:post_id>
  <wp:post_date>2012-02-24 00:54:28</wp:post_date>
  <wp:post_date_gmt>2012-02-24 05:54:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0028</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>370</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0028.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0031</title>
  <link>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/snag-0031/</link>
  <pubDate>Fri, 24 Feb 2012 05:54:28 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0031.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>402</wp:post_id>
  <wp:post_date>2012-02-24 00:54:28</wp:post_date>
  <wp:post_date_gmt>2012-02-24 05:54:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0031</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>370</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0031.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
    <wp:meta_value><![CDATA[All greyed out, and it's even powered off. :(]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>SNAG-0025</title>
  <link>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/snag-0025/</link>
  <pubDate>Fri, 24 Feb 2012 05:56:42 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0025.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Old and busted....]]></excerpt:encoded>
  <wp:post_id>403</wp:post_id>
  <wp:post_date>2012-02-24 00:56:42</wp:post_date>
  <wp:post_date_gmt>2012-02-24 05:56:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0025</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>370</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0025.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0026</title>
  <link>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/snag-0026/</link>
  <pubDate>Fri, 24 Feb 2012 05:56:43 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0026.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[New Hotness...]]></excerpt:encoded>
  <wp:post_id>404</wp:post_id>
  <wp:post_date>2012-02-24 00:56:43</wp:post_date>
  <wp:post_date_gmt>2012-02-24 05:56:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0026</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>370</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0026.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0022</title>
  <link>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/snag-0022/</link>
  <pubDate>Fri, 24 Feb 2012 05:59:53 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0022.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>405</wp:post_id>
  <wp:post_date>2012-02-24 00:59:53</wp:post_date>
  <wp:post_date_gmt>2012-02-24 05:59:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0022</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>370</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0022.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0023</title>
  <link>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/snag-0023/</link>
  <pubDate>Fri, 24 Feb 2012 05:59:55 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0023.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[cloneVApp method return.]]></excerpt:encoded>
  <wp:post_id>406</wp:post_id>
  <wp:post_date>2012-02-24 00:59:55</wp:post_date>
  <wp:post_date_gmt>2012-02-24 05:59:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0023</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>370</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0023.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0024</title>
  <link>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/snag-0024/</link>
  <pubDate>Fri, 24 Feb 2012 05:59:56 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/02/snag-0024.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Dolly, My cloned Sheep! Er, um... vApp!]]></excerpt:encoded>
  <wp:post_id>407</wp:post_id>
  <wp:post_date>2012-02-24 00:59:56</wp:post_date>
  <wp:post_date_gmt>2012-02-24 05:59:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0024</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>370</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/02/snag-0024.png</wp:attachment_url>
</item>
<item>
  <title>ryu</title>
  <link>http://geekafterfive.com/2012/03/13/how-to-be-a-powercli-ninja/ryu/</link>
  <pubDate>Fri, 09 Mar 2012 05:45:10 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/03/ryu.png</guid>
  <description></description>
  <content:encoded><![CDATA[http://static.spore.com/static/image/500/781/145/500781145080_lrg.png]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>492</wp:post_id>
  <wp:post_date>2012-03-09 00:45:10</wp:post_date>
  <wp:post_date_gmt>2012-03-09 05:45:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ryu</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>453</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/03/ryu.png</wp:attachment_url>
</item>
<item>
  <title>vCloud</title>
  <link>http://geekafterfive.com/vcloud/</link>
  <pubDate>Tue, 17 Apr 2012 03:15:46 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?page_id=515</guid>
  <description></description>
  <content:encoded><![CDATA[<h2><span style="color:#3366ff;">vCloud PowerCLI Script and One-Liner Reference</span></h2>
Updated regularly! Check back often!
<h3><span style="text-decoration:underline;">Get vCloud Org Hierarchy Tree</span></h3>
This one-liner prints the hierarchy of a vCloud Organization all the way down to the VM level (Org&gt;VDC&gt;VApp&gt;VM)
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#0000ff;">Get-Org</span><span style="color:#a9a9a9;">|</span><span style="color:#0000ff;">%</span>{<span style="color:#ff4500;">$_</span><span style="color:#a9a9a9;">.</span>name;<span style="color:#ff4500;">$_</span><span style="color:#a9a9a9;">|</span><span style="color:#0000ff;">Get-OrgVdc</span><span style="color:#a9a9a9;">|</span><span style="color:#0000ff;">%</span>{<span style="color:#8b0000;">"`t"</span><span style="color:#a9a9a9;">+</span><span style="color:#ff4500;">$_</span><span style="color:#a9a9a9;">.</span>name;<span style="color:#ff4500;">$_</span><span style="color:#a9a9a9;">|</span><span style="color:#0000ff;">Get-CIVApp</span><span style="color:#a9a9a9;">|</span><span style="color:#0000ff;">%</span>{<span style="color:#8b0000;">"`t`t"</span><span style="color:#a9a9a9;">+</span><span style="color:#ff4500;">$_</span><span style="color:#a9a9a9;">.</span>name;<span style="color:#ff4500;">$_</span><span style="color:#a9a9a9;">|</span><span style="color:#0000ff;">Get-CIVM</span><span style="color:#a9a9a9;">|</span><span style="color:#0000ff;">%</span>{<span style="color:#8b0000;">"`t`t`t"</span><span style="color:#a9a9a9;">+</span><span style="color:#ff4500;">$_</span><span style="color:#a9a9a9;">.</span>name}}}}</p>

</div>
&nbsp;

&nbsp;

&nbsp;

.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>515</wp:post_id>
  <wp:post_date>2012-04-16 23:15:46</wp:post_date>
  <wp:post_date_gmt>2012-04-17 03:15:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vcloud</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_wp_page_template</wp:meta_key>
    <wp:meta_value><![CDATA[default]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Isolation network</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0077/</link>
  <pubDate>Tue, 17 Apr 2012 04:47:10 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0077.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>525</wp:post_id>
  <wp:post_date>2012-04-17 00:47:10</wp:post_date>
  <wp:post_date_gmt>2012-04-17 04:47:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0077</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0077.png</wp:attachment_url>
</item>
<item>
  <title>Bridged</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0079/</link>
  <pubDate>Tue, 17 Apr 2012 04:57:42 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0079.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>526</wp:post_id>
  <wp:post_date>2012-04-17 00:57:42</wp:post_date>
  <wp:post_date_gmt>2012-04-17 04:57:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0079</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0079.png</wp:attachment_url>
</item>
<item>
  <title>natRouted</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0080/</link>
  <pubDate>Tue, 17 Apr 2012 05:08:43 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0080.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>527</wp:post_id>
  <wp:post_date>2012-04-17 01:08:43</wp:post_date>
  <wp:post_date_gmt>2012-04-17 05:08:43</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0080</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0080.png</wp:attachment_url>
</item>
<item>
  <title>fenced mode</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0081/</link>
  <pubDate>Tue, 17 Apr 2012 05:12:19 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0081.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>528</wp:post_id>
  <wp:post_date>2012-04-17 01:12:19</wp:post_date>
  <wp:post_date_gmt>2012-04-17 05:12:19</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0081</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0081.png</wp:attachment_url>
</item>
<item>
  <title>fenced network details</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0082/</link>
  <pubDate>Tue, 17 Apr 2012 05:15:15 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0082.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>529</wp:post_id>
  <wp:post_date>2012-04-17 01:15:15</wp:post_date>
  <wp:post_date_gmt>2012-04-17 05:15:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0082</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0082.png</wp:attachment_url>
</item>
<item>
  <title>natrouted network details</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0083/</link>
  <pubDate>Tue, 17 Apr 2012 05:16:42 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0083.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[NatRouted network details]]></excerpt:encoded>
  <wp:post_id>530</wp:post_id>
  <wp:post_date>2012-04-17 01:16:42</wp:post_date>
  <wp:post_date_gmt>2012-04-17 05:16:42</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0083</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0083.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0084</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0084/</link>
  <pubDate>Tue, 17 Apr 2012 05:20:35 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0084.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>531</wp:post_id>
  <wp:post_date>2012-04-17 01:20:35</wp:post_date>
  <wp:post_date_gmt>2012-04-17 05:20:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0084</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0084.png</wp:attachment_url>
</item>
<item>
  <title>Isolation network details</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0085/</link>
  <pubDate>Tue, 17 Apr 2012 05:24:00 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0085.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Isolation network details]]></excerpt:encoded>
  <wp:post_id>532</wp:post_id>
  <wp:post_date>2012-04-17 01:24:00</wp:post_date>
  <wp:post_date_gmt>2012-04-17 05:24:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0085</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0085.png</wp:attachment_url>
</item>
<item>
  <title>fence vApp Checkbox</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0087/</link>
  <pubDate>Tue, 17 Apr 2012 05:26:14 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0087.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Fence vApp Checkbox]]></excerpt:encoded>
  <wp:post_id>533</wp:post_id>
  <wp:post_date>2012-04-17 01:26:14</wp:post_date>
  <wp:post_date_gmt>2012-04-17 05:26:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0087</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0087.png</wp:attachment_url>
</item>
<item>
  <title>fence woops</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0089/</link>
  <pubDate>Wed, 18 Apr 2012 03:31:27 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0089.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Anyone else see an issue here? I'll give you a hint: 102]]></excerpt:encoded>
  <wp:post_id>541</wp:post_id>
  <wp:post_date>2012-04-17 23:31:27</wp:post_date>
  <wp:post_date_gmt>2012-04-18 03:31:27</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0089</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0089.png</wp:attachment_url>
</item>
<item>
  <title>VMW_09Q3_LGO_VMwareCertifiedProfessional_K</title>
  <link>http://geekafterfive.com/?attachment_id=557</link>
  <pubDate>Wed, 18 Apr 2012 05:29:41 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/new-vcp-logo.jpg</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>557</wp:post_id>
  <wp:post_date>2012-04-18 01:29:41</wp:post_date>
  <wp:post_date_gmt>2012-04-18 05:29:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vmw_09q3_lgo_vmwarecertifiedprofessional_k</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/new-vcp-logo.jpg</wp:attachment_url>
</item>
<item>
  <title>SNAG-0091</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0091/</link>
  <pubDate>Thu, 19 Apr 2012 03:42:29 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0091.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[natRouted network features]]></excerpt:encoded>
  <wp:post_id>560</wp:post_id>
  <wp:post_date>2012-04-18 23:42:29</wp:post_date>
  <wp:post_date_gmt>2012-04-19 03:42:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0091</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0091.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0093</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0093/</link>
  <pubDate>Tue, 24 Apr 2012 05:18:48 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0093.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Port Forwarding Rules]]></excerpt:encoded>
  <wp:post_id>569</wp:post_id>
  <wp:post_date>2012-04-24 01:18:48</wp:post_date>
  <wp:post_date_gmt>2012-04-24 05:18:48</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0093</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0093.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0094</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/snag-0094/</link>
  <pubDate>Tue, 24 Apr 2012 05:22:17 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/04/snag-0094.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Port forwarding rule details]]></excerpt:encoded>
  <wp:post_id>570</wp:post_id>
  <wp:post_date>2012-04-24 01:22:17</wp:post_date>
  <wp:post_date_gmt>2012-04-24 05:22:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0094</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>450</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/04/snag-0094.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0104</title>
  <link>http://geekafterfive.com/2012/05/18/time-reporting-with-outlook-and-powershell/snag-0104/</link>
  <pubDate>Fri, 18 May 2012 18:53:21 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/05/snag-0104.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>589</wp:post_id>
  <wp:post_date>2012-05-18 14:53:21</wp:post_date>
  <wp:post_date_gmt>2012-05-18 18:53:21</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0104</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>587</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/05/snag-0104.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0103</title>
  <link>http://geekafterfive.com/2012/05/18/time-reporting-with-outlook-and-powershell/snag-0103/</link>
  <pubDate>Fri, 18 May 2012 18:53:22 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/05/snag-0103.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>590</wp:post_id>
  <wp:post_date>2012-05-18 14:53:22</wp:post_date>
  <wp:post_date_gmt>2012-05-18 18:53:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0103</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>587</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/05/snag-0103.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0101</title>
  <link>http://geekafterfive.com/2012/05/18/time-reporting-with-outlook-and-powershell/snag-0101/</link>
  <pubDate>Fri, 18 May 2012 18:53:23 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/05/snag-0101.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>591</wp:post_id>
  <wp:post_date>2012-05-18 14:53:23</wp:post_date>
  <wp:post_date_gmt>2012-05-18 18:53:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0101</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>587</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/05/snag-0101.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0099</title>
  <link>http://geekafterfive.com/2012/05/18/time-reporting-with-outlook-and-powershell/snag-0099/</link>
  <pubDate>Fri, 18 May 2012 18:53:24 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/05/snag-0099.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>592</wp:post_id>
  <wp:post_date>2012-05-18 14:53:24</wp:post_date>
  <wp:post_date_gmt>2012-05-18 18:53:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0099</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>587</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/05/snag-0099.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0098</title>
  <link>http://geekafterfive.com/2012/05/18/time-reporting-with-outlook-and-powershell/snag-0098/</link>
  <pubDate>Fri, 18 May 2012 18:53:31 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/05/snag-0098.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>593</wp:post_id>
  <wp:post_date>2012-05-18 14:53:31</wp:post_date>
  <wp:post_date_gmt>2012-05-18 18:53:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0098</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>587</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/05/snag-0098.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0105</title>
  <link>http://geekafterfive.com/2012/05/18/time-reporting-with-outlook-and-powershell/snag-0105/</link>
  <pubDate>Fri, 18 May 2012 18:53:32 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/05/snag-0105.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>594</wp:post_id>
  <wp:post_date>2012-05-18 14:53:32</wp:post_date>
  <wp:post_date_gmt>2012-05-18 18:53:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0105</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>587</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/05/snag-0105.png</wp:attachment_url>
</item>
<item>
  <title>Sample HTML report</title>
  <link>http://geekafterfive.com/2012/06/07/powershell-outlook-time-reporting-by-category/scriptscreen/</link>
  <pubDate>Thu, 07 Jun 2012 13:42:38 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/06/scriptscreen.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[Sample HTML report]]></excerpt:encoded>
  <wp:post_id>606</wp:post_id>
  <wp:post_date>2012-06-07 09:42:38</wp:post_date>
  <wp:post_date_gmt>2012-06-07 13:42:38</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>scriptscreen</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>605</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/06/scriptscreen.png</wp:attachment_url>
</item>
<item>
  <title>Link-vCloud</title>
  <link>http://geekafterfive.com/about/zelda-vcloud/</link>
  <pubDate>Tue, 12 Jun 2012 17:29:51 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2011/01/zelda-vcloud.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>613</wp:post_id>
  <wp:post_date>2012-06-12 13:29:51</wp:post_date>
  <wp:post_date_gmt>2012-06-12 17:29:51</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>zelda-vcloud</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>2</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2011/01/zelda-vcloud.png</wp:attachment_url>
</item>
<item>
  <title>Notify Users</title>
  <link>http://geekafterfive.com/2012/06/13/emailing-vcloud-organization-users/snag-0110/</link>
  <pubDate>Wed, 13 Jun 2012 04:19:45 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/06/snag-0110.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>617</wp:post_id>
  <wp:post_date>2012-06-13 00:19:45</wp:post_date>
  <wp:post_date_gmt>2012-06-13 04:19:45</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0110</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>615</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/06/snag-0110.png</wp:attachment_url>
</item>
<item>
  <title>Sending a message</title>
  <link>http://geekafterfive.com/2012/06/13/emailing-vcloud-organization-users/snag-0109/</link>
  <pubDate>Wed, 13 Jun 2012 04:19:46 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/06/snag-0109.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>618</wp:post_id>
  <wp:post_date>2012-06-13 00:19:46</wp:post_date>
  <wp:post_date_gmt>2012-06-13 04:19:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0109</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>615</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/06/snag-0109.png</wp:attachment_url>
</item>
<item>
  <title>vCloud vApp Sharing</title>
  <link>http://geekafterfive.com/2012/06/26/sharing-vapps-in-vcloud-with-powercli/snag-0148/</link>
  <pubDate>Tue, 26 Jun 2012 19:37:17 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/06/snag-0148.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>654</wp:post_id>
  <wp:post_date>2012-06-26 15:37:17</wp:post_date>
  <wp:post_date_gmt>2012-06-26 19:37:17</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0148</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>624</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/06/snag-0148.png</wp:attachment_url>
</item>
<item>
  <title>New-CIHarddisk</title>
  <link>http://geekafterfive.com/2012/06/29/add-vcloud-harddisks-with-powercli/snag-0113/</link>
  <pubDate>Fri, 29 Jun 2012 05:26:55 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/06/snag-0113.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>659</wp:post_id>
  <wp:post_date>2012-06-29 01:26:55</wp:post_date>
  <wp:post_date_gmt>2012-06-29 05:26:55</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0113</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>658</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/06/snag-0113.png</wp:attachment_url>
</item>
<item>
  <title>Lots of harddisks!</title>
  <link>http://geekafterfive.com/2012/06/29/add-vcloud-harddisks-with-powercli/snag-0114/</link>
  <pubDate>Fri, 29 Jun 2012 05:27:00 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/06/snag-0114.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>660</wp:post_id>
  <wp:post_date>2012-06-29 01:27:00</wp:post_date>
  <wp:post_date_gmt>2012-06-29 05:27:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0114</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>658</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/06/snag-0114.png</wp:attachment_url>
</item>
<item>
  <title>Check your six.</title>
  <link>http://geekafterfive.com/2012/07/19/hacking-the-vcloud-director-browser-support-warning/snag-0154/</link>
  <pubDate>Thu, 19 Jul 2012 19:26:46 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/07/snag-0154.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>671</wp:post_id>
  <wp:post_date>2012-07-19 15:26:46</wp:post_date>
  <wp:post_date_gmt>2012-07-19 19:26:46</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0154</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>667</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/07/snag-0154.png</wp:attachment_url>
</item>
<item>
  <title>Warning, Jake Robinson!</title>
  <link>http://geekafterfive.com/2012/07/19/hacking-the-vcloud-director-browser-support-warning/snag-0151/</link>
  <pubDate>Thu, 19 Jul 2012 19:26:47 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/07/snag-0151.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>672</wp:post_id>
  <wp:post_date>2012-07-19 15:26:47</wp:post_date>
  <wp:post_date_gmt>2012-07-19 19:26:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0151</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>667</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/07/snag-0151.png</wp:attachment_url>
</item>
<item>
  <title>Warning, Jake Robinson!</title>
  <link>http://geekafterfive.com/2012/07/19/hacking-the-vcloud-director-browser-support-warning/snag-0155/</link>
  <pubDate>Thu, 19 Jul 2012 19:31:52 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/07/snag-0155.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>674</wp:post_id>
  <wp:post_date>2012-07-19 15:31:52</wp:post_date>
  <wp:post_date_gmt>2012-07-19 19:31:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0155</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>667</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/07/snag-0155.png</wp:attachment_url>
</item>
<item>
  <title>ovftool error</title>
  <link>http://geekafterfive.com/2012/08/08/uploading-vms-to-vcloud-with-ovftool/snag-0164/</link>
  <pubDate>Wed, 08 Aug 2012 21:29:11 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/08/snag-0164.png</guid>
  <description></description>
  <content:encoded><![CDATA[ovftool error]]></content:encoded>
  <excerpt:encoded><![CDATA[ovftool error]]></excerpt:encoded>
  <wp:post_id>684</wp:post_id>
  <wp:post_date>2012-08-08 17:29:11</wp:post_date>
  <wp:post_date_gmt>2012-08-08 21:29:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0164</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>682</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/08/snag-0164.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
    <wp:meta_value><![CDATA[ovftool error]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>TrainSignal</title>
  <link>http://geekafterfive.com/2012/10/03/coming-soon-vcloud-user-training/ts_jersey/</link>
  <pubDate>Wed, 03 Oct 2012 19:31:44 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/10/ts_jersey.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>736</wp:post_id>
  <wp:post_date>2012-10-03 15:31:44</wp:post_date>
  <wp:post_date_gmt>2012-10-03 19:31:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>ts_jersey</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>701</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/10/ts_jersey.png</wp:attachment_url>
</item>
<item>
  <title>vCloud PHP SDK: Getting Started</title>
  <link>http://geekafterfive.com/?p=752</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=752</guid>
  <description></description>
  <content:encoded><![CDATA[In this post, we're going to get started with the vCloud PHP SDK.

Requirements:

PHP

<a href="http://communities.vmware.com/community/vmtn/developer/forums/vcloudsdkphp">vCloud PHP SDK 5.1</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>752</wp:post_id>
  <wp:post_date>2012-12-11 12:58:02</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name></wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
</item>
<item>
  <title>Bluelock vCloud Datacenter</title>
  <link>http://geekafterfive.com/?attachment_id=753</link>
  <pubDate>Wed, 31 Oct 2012 17:34:31 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2012/10/bluelock-augment-your-private-cloud.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>753</wp:post_id>
  <wp:post_date>2012-10-31 13:34:31</wp:post_date>
  <wp:post_date_gmt>2012-10-31 17:34:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>bluelock-augment-your-private-cloud</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2012/10/bluelock-augment-your-private-cloud.png</wp:attachment_url>
  <wp:postmeta>
    <wp:meta_key>_wp_attachment_image_alt</wp:meta_key>
    <wp:meta_value><![CDATA[Bluelock Public Cloud]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>vCloud Automation 101</title>
  <link>http://geekafterfive.com/?p=754</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=754</guid>
  <description></description>
  <content:encoded><![CDATA[Agility. You need it, cloud has it. The idea that infrastructure is there when we need it is alone a killer benefit, but there's more... We see people talking about amazing features like auto-scaling, continuous integration, and auto-deployment that are revolutionizing the way IT and software development work. It seems Utopian and so far away that we don't know where to start.

Let me help you start your journey.

The vCloud API plays a key role in building custom experiences in the cloud. Knowing the vCloud API is a feeling of freedom, and opens up endless possibilities. You want to know how AWS got to where they are? APIs. Twitter? APIs.

So how do we get started with the vCloud API? I have a great beginner lesson on the API my TrainSignal course: <a href="http://www.trainsignal.com/VMware-vCloud-Director-Organizations-Training.aspx" target="_blank">VMware vCloud Director Organizations</a>. It covers what the vCloud API is, and demonstrates how to make raw RESTful API calls. That being said, we want to start automating quickly and easily.

There are a number of SDKs and toolkits that have vCloud API support. Here's a list of the ones I know, and if you know of any more, please leave me a comment and I'll add it to the list.

<a href="http://communities.vmware.com/community/vmtn/developer/forums/vcloudsdkjava">vCloud Java SDK</a>
<a href="http://communities.vmware.com/community/vmtn/developer/forums/vcloudsdkphp">vCloud PHP SDK</a>
<a href="http://communities.vmware.com/community/vmtn/developer/forums/vcloudsdk-net">vCloud .NET SDK
</a><a href="http://www.jclouds.org/" target="_blank">jClouds (Multi-Cloud Java)</a>
<a href="http://fog.io" target="_blank">Fog (Multi-Cloud Ruby)</a>
<a href="http://libcloud.apache.org/" target="_blank">LibCloud (Multi-Cloud Python)</a>

No matter what language you prefer, the easiest way to get started automating in vCloud is with PowerCLI. VMware PowerCLI is a snap-in for Powershell, Microsoft's automation framework. Powershell's scripting language turns commands (called cmdlets) into simple a simple verb-noun format. For instance, If you want to get a list of your Virtual Machines running in your vCloud Organization, you simply type <strong>Get-CIVM</strong>. (CI stands for Cloud Infrastructure and is used to differentiate between getting VMs in other VMware products.)

Enough introduction! Lets get started by downloading <a href="http://vmware.com/downloads/download.do?downloadGroup=PCLI51R1T" target="_blank">PowerCLI for vCloud Tenants</a>. There is another PowerCLI snap-in that has vSphere and provider level cmdlets that are not needed unless you use vSphere or are a vCloud provider.

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>754</wp:post_id>
  <wp:post_date>2012-11-16 17:10:40</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vcloud-automatio-101</wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>vCloud Organization Storage Reporting with PowerCLI</title>
  <link>http://geekafterfive.com/?p=767</link>
  <pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=767</guid>
  <description></description>
  <content:encoded><![CDATA[Getting storage per Virtual Datacenter

Getting storage per VM]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>767</wp:post_id>
  <wp:post_date>2013-01-28 16:26:38</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name></wp:post_name>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>PowerCLI snapshots</title>
  <link>http://geekafterfive.com/2013/02/11/vcloud-5-1-api-support-in-powercli-5-1-r2/snag-0207/</link>
  <pubDate>Tue, 12 Feb 2013 02:51:11 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2013/02/snag-0207.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>772</wp:post_id>
  <wp:post_date>2013-02-11 21:51:11</wp:post_date>
  <wp:post_date_gmt>2013-02-12 02:51:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0207</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>771</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2013/02/snag-0207.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0208</title>
  <link>http://geekafterfive.com/2013/02/11/vcloud-5-1-api-support-in-powercli-5-1-r2/snag-0208/</link>
  <pubDate>Tue, 12 Feb 2013 02:51:13 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2013/02/snag-0208.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>773</wp:post_id>
  <wp:post_date>2013-02-11 21:51:13</wp:post_date>
  <wp:post_date_gmt>2013-02-12 02:51:13</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0208</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>771</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2013/02/snag-0208.png</wp:attachment_url>
</item>
<item>
  <title>Edge Gateway in PowerCLI</title>
  <link>http://geekafterfive.com/2013/02/11/vcloud-5-1-api-support-in-powercli-5-1-r2/snag-0210/</link>
  <pubDate>Tue, 12 Feb 2013 03:08:37 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2013/02/snag-0210.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>774</wp:post_id>
  <wp:post_date>2013-02-11 22:08:37</wp:post_date>
  <wp:post_date_gmt>2013-02-12 03:08:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0210</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>771</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2013/02/snag-0210.png</wp:attachment_url>
</item>
<item>
  <title>PowerCLI Edge Gateway Configuration</title>
  <link>http://geekafterfive.com/2013/02/11/vcloud-5-1-api-support-in-powercli-5-1-r2/snag-0212/</link>
  <pubDate>Tue, 12 Feb 2013 03:08:39 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2013/02/snag-0212.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>775</wp:post_id>
  <wp:post_date>2013-02-11 22:08:39</wp:post_date>
  <wp:post_date_gmt>2013-02-12 03:08:39</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0212</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>771</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2013/02/snag-0212.png</wp:attachment_url>
</item>
<item>
  <title>SNAG-0215</title>
  <link>http://geekafterfive.com/2013/02/11/vcloud-5-1-api-support-in-powercli-5-1-r2/snag-0215/</link>
  <pubDate>Tue, 12 Feb 2013 03:21:12 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2013/02/snag-0215.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>776</wp:post_id>
  <wp:post_date>2013-02-11 22:21:12</wp:post_date>
  <wp:post_date_gmt>2013-02-12 03:21:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0215</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>771</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2013/02/snag-0215.png</wp:attachment_url>
</item>
<item>
  <title>vcloud backups</title>
  <link>http://geekafterfive.com/2013/02/15/vcloud-vm-and-vapp-backups-with-powercli/snag-0230/</link>
  <pubDate>Fri, 15 Feb 2013 21:36:57 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2013/02/snag-0230.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>789</wp:post_id>
  <wp:post_date>2013-02-15 16:36:57</wp:post_date>
  <wp:post_date_gmt>2013-02-15 21:36:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0230</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>784</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2013/02/snag-0230.png</wp:attachment_url>
</item>
<item>
  <title>VMreport</title>
  <link>http://geekafterfive.com/2013/03/21/simple-vm-reporting-in-vcloud-with-powercli/snag-0380/</link>
  <pubDate>Thu, 21 Mar 2013 18:42:31 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.files.wordpress.com/2013/03/snag-0380.png</guid>
  <description></description>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>813</wp:post_id>
  <wp:post_date>2013-03-21 14:42:31</wp:post_date>
  <wp:post_date_gmt>2013-03-21 18:42:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>snag-0380</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>812</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>http://geekafterfive.files.wordpress.com/2013/03/snag-0380.png</wp:attachment_url>
</item>
<item>
  <title>Coming Soon: VMware vCloud PowerCLI snapin!</title>
  <link>http://geekafterfive.com/2011/09/06/vmware-vcloud-powercli-snapin/</link>
  <pubDate>Tue, 06 Sep 2011 16:36:32 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=71</guid>
  <description></description>
  <content:encoded><![CDATA[Did you notice something interesting on the new <a href="http://communities.vmware.com/servlet/JiveServlet/download/1821950-70918/VMware%20Management%20with%20PowerCLI%205.0.pdf" target="_blank">PowerCLI Poster</a>? No? Let me give you a hint...

[caption id="attachment_74" align="aligncenter" width="490" caption="A vCloud Snapin!"]<a href="http://geekafterfive.files.wordpress.com/2011/09/snag-0018.png"><img class="size-full wp-image-74 " title="A vCloud Snapin!" src="http://geekafterfive.files.wordpress.com/2011/09/snag-0018.png" alt="A vCloud Snapin!" width="490" height="283" /></a>[/caption]

&nbsp;

Woah, hang on a tick... A vCloud Snapin? Are there cmdlets on the poster? YES!

&nbsp;

[caption id="attachment_76" align="aligncenter" width="490" caption="vCloud CMDlets!"]<a href="http://geekafterfive.files.wordpress.com/2011/09/snag-0009.png"><img class="size-full wp-image-76" title="vCloud CMDlets!" src="http://geekafterfive.files.wordpress.com/2011/09/snag-0009.png" alt="vCloud CMDlets!" width="490" height="275" /></a>[/caption]
<p style="text-align:center;"></p>
<p style="text-align:left;">Sweet! But before you go looking for them, I will let you know this is only a teaser. These WILL be the cmdlets when the vCloud Snapin arrives, but that won't be for another couple months. The snapin is nearing a limited beta phase, after which they will release the snapin with the above set of cmdlets.</p>
<p style="text-align:center;"></p>


[caption id="attachment_77" align="aligncenter" width="490" caption="No vCloud Snapin yet. :("]<a href="http://geekafterfive.files.wordpress.com/2011/09/snag-0003.png"><img class="size-full wp-image-77" title="No vCloud Snapin yet. :(" src="http://geekafterfive.files.wordpress.com/2011/09/snag-0003.png" alt="No vCloud Snapin yet. :(" width="490" height="191" /></a>[/caption]
<p style="text-align:center;"></p>
<p style="text-align:center;"></p>
So, How does this affect YOU? Here's a list:

&nbsp;
<ol>
	<li>The direction of VMware is obviously vCloud. Learn the new terminology now!</li>
	<li>Even if you don't currently run vCloud Director in-house at this time, chances are you will embrace the hybrid cloud and select a <a href="http://vcloud.vmware.com/vcloud-ecosystem/" target="_blank">public vCloud provider</a>. (Hopefully <a href="http://www.bluelock.com/" target="_blank">Bluelock</a>. ;))</li>
	<li>I will be deprecating my UNOFFICIAL <a href="https://github.com/jakerobinson/vCloud-Powershell" target="_blank">vCloud Powershell functions</a> to make way for the OFFICIAL vCloud snapin.</li>
	<li>For those of you that DO run vCloud Director or have a public vCloud provider, this is going to allow you to do some amazing things!!!!!</li>
</ol>
&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>71</wp:post_id>
  <wp:post_date>2011-09-06 16:36:32</wp:post_date>
  <wp:post_date_gmt>2011-09-06 16:36:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vmware-vcloud-powercli-snapin</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[coming-soon-vmware-vcloud-powercli-snapin]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[coming-soon-vmware-vcloud-snapin]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wp_old_slug</wp:meta_key>
    <wp:meta_value><![CDATA[httpgeekafterfive-com20110906coming-soon-vm%e2%80%a6-vcloud-snapin]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>42</wp:comment_id>
    <wp:comment_author><![CDATA[PowerCLI in the Cloud &laquo; Geek after Five]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com/2012/01/09/powercli-in-the-cloud/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.104.120</wp:comment_author_IP>
    <wp:comment_date>2012-01-09 22:10:17</wp:comment_date>
    <wp:comment_date_gmt>2012-01-10 03:10:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] you attended the PowerCLI sessions at VMWorld, you may remember the mention of a vCloud Snapin coming soon. This will be the first Powershell snapin allowing administration of your hybrid cloud [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1326166380</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326166381.6907";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1326165018.2028";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>15</wp:comment_id>
    <wp:comment_author><![CDATA[vCloud API/GUI Throwdown! &laquo; Geek after Five]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com/2011/11/01/vcloud-apigui-throwdown/</wp:comment_author_url>
    <wp:comment_author_IP>76.74.248.248</wp:comment_author_IP>
    <wp:comment_date>2011-11-01 15:30:56</wp:comment_date>
    <wp:comment_date_gmt>2011-11-01 19:30:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] It&#8217;s obviously much easier to consume the GUI than the API, but the upcoming PowerCLI snapin should even the playing field. More to [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1320177953</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1320177953.5563";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1320175856.8803";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>My Powershell Christmas Wishlist</title>
  <link>http://geekafterfive.com/2011/09/06/my-powershell-christmas-wishlist/</link>
  <pubDate>Tue, 06 Sep 2011 21:26:33 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=82</guid>
  <description></description>
  <content:encoded><![CDATA[Dear <a href="https://twitter.com/#!/jsnover" target="_blank">Santa Snover</a>,

I met you briefly following a PowerCLI session at VMworld and gave you a part of my wishlist, but didn't want to take up your time at that point. Here is my FULL Christmas wishlist!
<blockquote>
<ol>
	<li>JSON support, like XML support. To Quote Jeff: "Watch this space."</li>
	<li>A fix for the XML &lt;item&gt; bug! <a href="http://connect.microsoft.com/PowerShell/SearchResults.aspx?SearchQuery=xml%2bitem" target="_blank">HERE!</a></li>
	<li>ISE in a web browser. Heck, I would even take just the console. Something like <a href="http://code.google.com/p/shellinabox/" target="_blank">THIS</a>. This would kinda give cross-platform support for those who use OSX or Linux.</li>
	<li>Intellisense in ISE for cmdlets and .NET namespaces. I love ISE because it is so lightweight. All the other IDEs I have tried are too slow. All I want to do is code.</li>
	<li>REST API support. This one is kinda iffy, as I can easily use [System.Net.Webclient], but built in XML/JSON validation would be sweet, or maybe even build a PSobject from an XML/JSON namespace.</li>
	<li>Multi-threading support that doesn't require me to load 3rd party snapins for each job. Or, more specifically, doesn't hog memory like it's going out of style.</li>
</ol>
</blockquote>
<div>That's it. Just six requests. I can't guarantee whether I am on your naughty or nice list (I did mention Linux...), but these sure would be swell additions.</div>
<br />&nbsp;<br />&nbsp;
<div>A cool Powershell polo would be nice too.</div>
<br />&nbsp;<br />&nbsp;
<div>Cheers,</div>
<div>Jake Robinson</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>82</wp:post_id>
  <wp:post_date>2011-09-06 17:26:33</wp:post_date>
  <wp:post_date_gmt>2011-09-06 21:26:33</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-powershell-christmas-wishlist</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="powershell"><![CDATA[Powershell]]></category>
  <category domain="post_tag" nicename="powershell-2"><![CDATA[powershell]]></category>
  <category domain="post_tag" nicename="windows-powershell"><![CDATA[Windows Powershell]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Cleaning your vCloud Director Thumbnails (current.png)</title>
  <link>http://geekafterfive.com/2011/09/21/cleaning-your-vcloud-director-thumbnails/</link>
  <pubDate>Wed, 21 Sep 2011 21:36:40 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=97</guid>
  <description></description>
  <content:encoded><![CDATA[Thumbnail images. You know 'em, you love 'em. vCloud Director uses thumbnails to give you a preview of the screen without opening up the remote console. Kinda handy, except that well...they are just a black box most of the time anyway. vCloud Director stores these thumbnail images as current.png on the datastore in the VM's folder.

An interesting side effect of this feature comes whenever you migrate/<a title="Virtu-Al PowerCLI sVmotion" href="http://www.virtu-al.net/2011/09/14/quick-and-simple-storage-vmotion-scripts/" target="_blank">svMotion</a> a machine managed by vCloud Director. It leaves the folder along with the thumbnail (<strong><span style="color:#ff0000;">current.png</span></strong>). So, if you are shuffling VMs around on your datastores, stuff can get sloppy looking pretty quick. Why is this? ESX doesn't know (or care) about the thumbnail image.

The following PowerCLI script will go through a particular datastore, looking for orphaned current.png files. It will then delete the file and the VM folder, successfully keeping your datastores nice and neat!

NOTE: Thanks Dean for testing and the bug fix!

[sourcecode language="powershell" wraplines="false"]
$datastore = &quot;MyDatastore&quot;
$viserver = &quot;MyVIServer&quot;

# add PowerCLI snapin
Add-PSSnapin vmware.vimautomation.core -ErrorAction:SilentlyContinue

# Connect to VI Server
Connect-VIServer $viserver

# Get the datastore we want to clean up
$dsObject = Get-Datastore $datastore

# Create a new PSDrive to that datastore
New-PSDrive -Location $dsObject -name ds -PSProvider VimDatastore -root '\'

# Set location to that drive
Set-Location ds:

# From here we are going to parse through
# folders first looking for vmx files,
# if there are no vmx files,
# test for current.png and then remove the thumbnail and folder.

$dsfolders = Get-ChildItem

foreach ($dsfolder in $dsfolders)
{
    if (!(test-path &quot;$dsfolder\*.vmx&quot;))
    {
        if (test-path &quot;$dsfolder\current.png&quot;)
        {
            remove-item &quot;$dsfolder\current.png&quot;
            if ((get-childitem .\$dsfolder\* | measure-object).count -lt 1)
            {
                remove-item $dsfolder
            }
        }
    }
}
[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>97</wp:post_id>
  <wp:post_date>2011-09-21 21:36:40</wp:post_date>
  <wp:post_date_gmt>2011-09-21 21:36:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cleaning-your-vcloud-director-thumbnails</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Powers Combined: PowerCLI and OVFTool</title>
  <link>http://geekafterfive.com/2011/10/07/powers-combined-powercli-and-ovftool/</link>
  <pubDate>Fri, 07 Oct 2011 20:02:11 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=110</guid>
  <description></description>
  <content:encoded><![CDATA[[caption id="attachment_127" align="alignleft" width="249" caption="&quot;By your powers combined!!!&quot;"]<img class="size-full wp-image-127" title="The Planeteers" src="http://geekafterfive.files.wordpress.com/2011/10/theplaneteers.jpg" alt="&quot;By your powers combined!!!&quot;" width="249" height="201" />[/caption]

This post will show how to combine the automation abilities of PowerCLI with OVFTool, but first:

<strong>a bit of history...</strong>
<a title="Wikipedia link" href="http://en.wikipedia.org/wiki/Open_Virtualization_Format" target="_blank">Open Virtualization Format (OVF)</a> is designed to be a "universal" packaging system for virtual machines (and vApps, for that matter) across any virtualization platform. While adoption is still happening, it is already VERY useful for importing and exporting across your VMware environments.

VMware has an excellent command-line OVF Tool called...uh...<a href="http://www.vmware.com/support/developer/ovf/" target="_blank">OVFTool</a>. <a href="https://twitter.com/#!/afokkema" target="_blank">Arne</a> has a <a href="http://ict-freak.nl/2011/09/18/vmware-open-virtualization-format-tool/" target="_blank">great post</a> about using OVFTool in your environment.

<strong>The problem...</strong>
While OVF is a great standard, there can be issues (encoding, unsupported metadata, OVF version mismatches) when importing and exporting to/from different platforms. We're going to talk specifically about the Hybrid Cloud use case: vSphere to vCloud Director.

PowerCLI has a pretty good method for exporting vApps (Export-vApp), but not Virtual Machines. The simple and effective work-around is to simply create a new vApp, move/clone your VM to the vApp, export the vApp using the Export-vApp cmdlet. It works great for vSphere-&gt;;vSphere, but again...not for vSphere-&gt;;vCloud.

[sourcecode language="powershell"]
New-VApp test02 -Location cluster01
Move-VM delta -Destination test02
Export-VApp test02 -Destination C:\users\jake\desktop
[/sourcecode]

Uploading the OVF produced by the code above results in the following error:

<img class="aligncenter size-full wp-image-119" title="epic fail" src="http://geekafterfive.files.wordpress.com/2011/10/10-7-2011-3-28-58-pm.png" alt="" width="490" height="92" />

<strong>Easy Fix?</strong>
Use OVFtool. It uploads perfectly to vCloud AND I can directly export the VM without the need for a vApp!

"But wait a tick..." you say. "That's a command-line tool, not a PowerCLI cmdlet! I'll have to have to pass login credentials to OVFtool somehow." Exactly. We're going to use our PowerCLI session and a somewhat secret and cool feature in OVFTool to automate the export of our VM.

<strong>So here's the code:</strong>

[sourcecode language="powershell"]
function Export-VM
{
    param
    (
        [parameter(Mandatory=$true,ValueFromPipeline=$true)] $vm,
        [parameter(Mandatory=$true)][String] $destination
    )

    $ovftoolpaths = (&amp;quot;C:\Program Files (x86)\VMware\VMware OVF Tool\ovftool.exe&amp;quot;,&amp;quot;C:\Program Files\VMware\VMware OVF Tool\ovftool.exe&amp;quot;)
    $ovftool = ''

    foreach ($ovftoolpath in $ovftoolpaths)
    {
        if(test-path $ovftoolpath)
        {
            $ovftool = $ovftoolpath
        }
    }
    if (!$ovftool)
    {
        write-host -ForegroundColor red &amp;quot;ERROR: OVFtool not found in it's standard path.&amp;quot;
        write-host -ForegroundColor red &amp;quot;Edit the path variable or download ovftool here: http://www.vmware.com/support/developer/ovf/&amp;quot;
    }
    else
    {
        $moref = $vm.extensiondata.moref.value
        $session = Get-View -Id SessionManager
        $ticket = $session.AcquireCloneTicket()
        &amp;amp; $ovftool &amp;quot;--I:sourceSessionTicket=$($ticket)&amp;quot; &amp;quot;vi://$($defaultviserver.name)?moref=vim.VirtualMachine:$($moref)&amp;quot; &amp;quot;$($destination)$($vm.name).ovf&amp;quot;
    }
}
[/sourcecode]

<strong>Lines 26-29 are where the magic happens.</strong>
Line 26: Get our Moref value for the VM.
Line 27: Get our PowerCLI session data
Line 28: Acquire a "clone ticket" for our session
Line 29: Run OVFTool with our session ticket, moref value, and the destination parameter.

Four lines of code is all it takes, just like Export-vApp. :D

And the best part is uploading to vCloud works:

<img class="aligncenter size-full wp-image-121" title="FTW!" src="http://geekafterfive.files.wordpress.com/2011/10/10-7-2011-3-32-29-pm.png" alt="" width="490" height="73" />

<strong>So, in summary:</strong>

<img class="aligncenter size-full wp-image-122" title="10-7-2011 3-32-50 PM" src="http://geekafterfive.files.wordpress.com/2011/10/10-7-2011-3-32-50-pm.png" alt="" width="490" height="188" />

You can combine the forces of PowerCLI and OVFTool to automate exporting of VMs, perfectly encoded for vCloud uploads.

Stay tuned for part two, where we will use the upcoming vCloud PowerCLI snapin to fully automate VM migration to the public cloud.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>110</wp:post_id>
  <wp:post_date>2011-10-07 15:02:11</wp:post_date>
  <wp:post_date_gmt>2011-10-07 20:02:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>powers-combined-powercli-and-ovftool</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="open-virtualization-format"><![CDATA[Open Virtualization Format]]></category>
  <category domain="post_tag" nicename="ovftool"><![CDATA[ovftool]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="sourcesessionticket"><![CDATA[sourcesessionticket]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Exporting VMs with PowerCLI and OVFtool:]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>380</wp:comment_id>
    <wp:comment_author><![CDATA[Uploading VMs to vCloud with OVFtool &laquo; Geek after Five]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com/2012/08/08/uploading-vms-to-vcloud-with-ovftool/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.69.93</wp:comment_author_IP>
    <wp:comment_date>2012-08-08 17:48:54</wp:comment_date>
    <wp:comment_date_gmt>2012-08-08 21:48:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] more OVFtool fun, check out my post on using OVF tool with PowerCLI with your vSphere session! Share this:TwitterMoreFacebookDiggRedditStumbleUponLinkedInEmailPrintLike this:LikeBe the first to [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344463698.941214084625244140625;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344463698</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344462534.631967067718505859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>358</wp:comment_id>
    <wp:comment_author><![CDATA[Mark]]></wp:comment_author>
    <wp:comment_author_email>vinay.verma@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>121.245.106.197</wp:comment_author_IP>
    <wp:comment_date>2012-07-31 15:46:38</wp:comment_date>
    <wp:comment_date_gmt>2012-07-31 19:46:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Jake,

The line 27 give me the following error:

Get-View : 01-08-2012 01:08:32    Get-View        View with Id  'SessionManager
-SessionManager' was not found on the server(s).

I am new to PowerCLI any ideas.

Thanks,
Mark]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343763998.5857460498809814453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343764061</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>361</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-07-31 23:49:09</wp:comment_date>
    <wp:comment_date_gmt>2012-08-01 03:49:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[No worries, Mark. Did you connect first with this? [sourcecode language="powershell"]Connect-VIServer MyServerName[/sourcecode]

If so, how many vCenter servers are you connected to?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>358</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343792950</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343792950.47221088409423828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>368</wp:comment_id>
    <wp:comment_author><![CDATA[Chris Chapman]]></wp:comment_author>
    <wp:comment_author_email>c.d.chapman@reading.ac.uk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>134.225.215.36</wp:comment_author_IP>
    <wp:comment_date>2012-08-02 10:01:45</wp:comment_date>
    <wp:comment_date_gmt>2012-08-02 14:01:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great Script! I had to add;

$vm = Get-VM $vm

before the line;

$moref = $vm.extensiondata.moref.value

or I got the error "Error: vmodl.fault.ManagedObjectNotFound"]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343916105.969647884368896484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343916221</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343916221.40812206268310546875;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>369</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-08-02 10:11:09</wp:comment_date>
    <wp:comment_date_gmt>2012-08-02 14:11:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Chris, you don't need that if you pipe a VM object to the Export-VM function. I suppose I should put an example in the post. :D

Like this:

[sourcecode language="powershell"] Get-VM MyVM | Export-VM -destination C:\users\me\Desktop\ [/sourcecode]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>368</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343916671</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343916671.866900920867919921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>370</wp:comment_id>
    <wp:comment_author><![CDATA[bobbydamercer]]></wp:comment_author>
    <wp:comment_author_email>jaraidah@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url>http://bobbydamercer.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>176.44.118.30</wp:comment_author_IP>
    <wp:comment_date>2012-08-02 18:52:57</wp:comment_date>
    <wp:comment_date_gmt>2012-08-02 22:52:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi

Could you tell me what exactly is this ' Moref value '??
like a Unique ID for the VM??

TIA]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>30605272</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343947978.2679040431976318359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"bobbydamercer";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343948027</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>371</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-08-02 18:55:20</wp:comment_date>
    <wp:comment_date_gmt>2012-08-02 22:55:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You are correct. The 'moref' or Managed Object Reference is a unique identifier for the virtual machine.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>370</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1343948123</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1343948123.6394240856170654296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>570</wp:comment_id>
    <wp:comment_author><![CDATA[Daniel Engel]]></wp:comment_author>
    <wp:comment_author_email>daniel.engel@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://about.me/daniel.engel</wp:comment_author_url>
    <wp:comment_author_IP>199.72.20.10</wp:comment_author_IP>
    <wp:comment_date>2012-11-07 15:17:19</wp:comment_date>
    <wp:comment_date_gmt>2012-11-07 20:17:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great article, gave me a good jump start. I'm using ESXi5.1 and things didn't quite work as shown above. I had to do a few modifications:

$moref = $vm.ExtensionData.MoRef.Value
$session=get-view -Id $global:DefaultVIServer.ExtensionData.Client.ServiceContent.SessionManager
$ticket = $session.AcquireCloneTicket() | Out-String
&amp; $ovftool "--I:sourceSessionTicket=$($ticket)" "--noSSLVerify" "vi://$($global:DefaultVIServer.name)?moref=vim.VirtualMachine:$($moref)" "$($destination)$($vm.name).ovf"

Hope it helps others as well :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1352321494</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1352321494.9170920848846435546875;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1352319439.5589339733123779296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"zerorg";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>706</wp:comment_id>
    <wp:comment_author><![CDATA[Alan]]></wp:comment_author>
    <wp:comment_author_email>anadem@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/anadem</wp:comment_author_url>
    <wp:comment_author_IP>50.0.67.249</wp:comment_author_IP>
    <wp:comment_date>2013-01-21 13:13:58</wp:comment_date>
    <wp:comment_date_gmt>2013-01-21 18:13:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks so much - VERY helpful, especially to a newb like me! 
For our ESXi 5.0 system this merge of your code with Daniel's works:

$vm = Get-VM $VMNAME 
$moref = $vm.ExtensionData.MoRef.Value
$session=get-view -Id $global:DefaultVIServer.ExtensionData.Client.ServiceContent.SessionManager
$ticket = $session.AcquireCloneTicket()
&amp; $ovftool "--I:sourceSessionTicket=$($ticket)" "vi://$($defaultviserver.name)?moref=vim.VirtualMachine:$($moref)" "$($destination)$($vm.name).ovf"]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358792040.388907909393310546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"anadem";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358795927</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358795927.6148951053619384765625;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>vCloud API/GUI Throwdown!</title>
  <link>http://geekafterfive.com/2011/11/01/vcloud-apigui-throwdown/</link>
  <pubDate>Tue, 01 Nov 2011 19:30:49 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=130</guid>
  <description></description>
  <content:encoded><![CDATA[<img class="alignnone" title="By Wayne Short (Edited version of File:Boxing080905.jpg) [Public domain], via Wikimedia Commons" src="http://upload.wikimedia.org/wikipedia/commons/4/4f/Boxing080905_photoshop.jpg" alt="" width="582" height="360" />
Laaaaaaadies and Gentlemen! Tonight's fight is between two heavyweights in vCloud Director, The GUI and the API!

Alright boys, nothing below the belt! Fight! Ding Ding Ding!

<strong>Round 1: Hot Cloning</strong>
<span style="color:#ff0000;"><strong>GUI:</strong> Sorry, no hot cloning here. All grayed out, sorry.</span>
<span style="color:#008000;"><strong>API:</strong> Heck yeah, I can hot-clone entire vApps! Bring it on!</span> <a href="http://www.vcoteam.info/learn-vco/vcloud-director-vapp-hot-clone.html" target="_blank">vCO example</a>
<code>Copy or Move a vApp link in vCloud API: POST API‐URL/vdc/id/action/cloneVApp</code>

<strong>Round 2: Change VM networks</strong>
<span style="color:#ff0000;"><strong>GUI:</strong> Oh, I got this one. Here's how. Start by powering off...</span>
<span style="color:#008000;"><strong>API:</strong> HA. Easy. I can even Add NICs while machines are running.</span>
<code>Modify vApp Network Configuration in vCloud API: PUT API‐URL/vApp/vapp‐id/networkConfigSection</code>

<strong>Round 3: Change disks</strong>
<span style="color:#ff0000;"><strong>GUI:</strong> I'm getting beat up pretty bad here...</span>
<span style="color:#008000;"><strong>API:</strong> Bahahaa. Expand disks and hot add disks on the fly? Yes. I. Can.</span>
<code>Modify Virtual Disk Items of the Virtual Machine in vCloud API: PUT API‐URL/vApp/vm‐id/virtualHardwareSection/disks/</code>

<strong>Bonus round: Snapshots</strong>
<span style="color:#ff0000;"><strong>GUI:</strong> Ha. You're funny.</span>
<span style="color:#ff9900;"><strong>API:</strong> Well, I uh...Can't. BUT, you can extend the vCloud API, which gives you the ability to write it in. I'd like to see you do that with the GUI!</span>

The moral of the story is: <strong>Don't assume just because the GUI can't do it, that it's impossible!</strong>

Also, It's obviously much easier to consume the GUI than the API, but the upcoming <a title="Coming Soon: VMware vCloud PowerCLI snapin!" href="http://geekafterfive.com/2011/09/06/vmware-vcloud-powercli-snapin/" target="_blank">PowerCLI snapin</a> should even the playing field. More to come!

<strong><span style="color:#ff0000;">Update: <a title="vCloud API/GUI Throwdown: Part 2" href="http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/">Part 2</a> of the vCloud/GUI Throwdown! Plenty of PowerCLI 5.0.1 examples!</span></strong>

vCloud API page: <a href="http://communities.vmware.com/community/vmtn/developer/forums/vcloudapi" target="_blank">http://communities.vmware.com/community/vmtn/developer/forums/vcloudapi</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>130</wp:post_id>
  <wp:post_date>2011-11-01 15:30:49</wp:post_date>
  <wp:post_date_gmt>2011-11-01 19:30:49</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vcloud-apigui-throwdown</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>91</wp:comment_id>
    <wp:comment_author><![CDATA[vCloud API/GUI Throwdown: Part 2 &laquo; Geek after Five]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.96.177</wp:comment_author_IP>
    <wp:comment_date>2012-02-24 09:00:35</wp:comment_date>
    <wp:comment_date_gmt>2012-02-24 14:00:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] the first part of  vCloud API/GUI Throwdown, we watched in awe as the API completely pummeled the GUI. I gave you some hints in part 1 to do [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330094020</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1330092035.331";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1330094020.435";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Getting Started with the Unofficial vCloud Powershell Functions</title>
  <link>http://geekafterfive.com/2011/11/24/getting-started-with-the-unofficial-vcloud-powershell-functions/</link>
  <pubDate>Fri, 25 Nov 2011 04:53:41 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=146</guid>
  <description></description>
  <content:encoded><![CDATA[By Popular Demand! A quick how-to on my vCloud Powershell functions!

http://www.youtube.com/watch?v=6wfLBWS0krc]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>146</wp:post_id>
  <wp:post_date>2011-11-24 23:53:41</wp:post_date>
  <wp:post_date_gmt>2011-11-25 04:53:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>getting-started-with-the-unofficial-vcloud-powershell-functions</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="how-to"><![CDATA[how-to]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="category" nicename="powershell"><![CDATA[Powershell]]></category>
  <category domain="post_tag" nicename="powershell-2"><![CDATA[powershell]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>PowerCLI in the Cloud</title>
  <link>http://geekafterfive.com/2012/01/09/powercli-in-the-cloud/</link>
  <pubDate>Tue, 10 Jan 2012 03:10:04 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=167</guid>
  <description></description>
  <content:encoded><![CDATA[<a href="http://geekafterfive.files.wordpress.com/2012/01/powercli501.jpg"><img class="aligncenter size-full wp-image-207" title="powercli501" src="http://geekafterfive.files.wordpress.com/2012/01/powercli501.jpg" alt="" width="490" height="397" /></a>If you attended the PowerCLI sessions at VMWorld, you may remember the mention of a <a title="Coming Soon: VMware vCloud PowerCLI snapin!" href="http://geekafterfive.com/2011/09/06/vmware-vcloud-powercli-snapin/">vCloud Snapin</a> coming soon. This will be the first Powershell snapin allowing administration of your hybrid cloud environment. Exciting, huh?

Well, prepare to get even more excited, because...
<h3> <strong><a title="PowerCLI Home page" href="http://communities.vmware.com/community/vmtn/server/vsphere/automationtools/powercli" target="_blank">PowerCLI 5.01 is now available</a>, with a shiny new snapin for vCloud Director 1.5!</strong></h3>
Check it out:

[sourcecode language="text" highlight="4,10"]
PS &gt; Get-PowerCLIVersion
PowerCLI Version
----------------
 VMware vSphere PowerCLI 5.01
---------------
Snapin Versions
---------------
 VMware AutoDeploy PowerCLI Component 5.0
 VMware ImageBuilder PowerCLI Component 5.0
 VMware vCloud Director PowerCLI Component 1.5
 VMware License PowerCLI Component 5.0
 VMware vSphere PowerCLI Component 5.0
[/sourcecode]

&nbsp;

[sourcecode highlight="7"]
PS &gt; Get-PSSnapin vmware.vimautomation.cloud

Name : vmware.vimautomation.cloud
PSVersion : 2.0
Description : This Windows Powershell snap-in contains This Windows Powershell for managing Cloud..

[/sourcecode]

Let's take a look at the cloud cmdlets we get in this release!

[sourcecode language="powershell" highlight="5,6,7,8,9,10,11,12,13,15,16,17,18"]

get-command -Module vmware.vimautomation.cloud | select name

Name
----
Connect-CIServer
Disconnect-CIServer
Get-Catalog
Get-CIRole
Get-CIUser
Get-CIVApp
Get-CIVAppTemplate
Get-CIView
Get-CIVM
Get-ExternalNetwork
Get-Media
Get-Org
Get-OrgNetwork
Get-OrgVdc
Get-ProviderVdc
Import-CIVApp
Import-CIVAppTemplate

[/sourcecode]

There are cmdlets for both the vCloud provider admin, AND the vCloud Org admin included in this release, so whether you run vCloud Director internally, or use a public Cloud provider like <a href="http://bluelock.com" target="_blank">Bluelock</a>, this snapin is for you! For your convenience, I've highlighted the cmdlets in the list above that are available to both Org and Provider admins.

So, let's give them a try in a hybrid environment, where I am connected to my local vSphere and a public vCloud Provider.

To connect as an Org admin, I'll need my username, password, and Org.

[sourcecode language="powershell"]Connect-CIServer -org MyOrg -User Jake -Password cloud[/sourcecode]

I've connected to both my internal vSphere environment, and my public cloud provider. So doing a

[code]Get-VM[/code]

and then a Get-CIVM will list my VMs in both environments.
<pre><a href="http://geekafterfive.files.wordpress.com/2012/01/snag-00001.png"><img class="alignleft size-full wp-image-194" title="SNAG-0000" src="http://geekafterfive.files.wordpress.com/2012/01/snag-00001.png" alt="" width="490" height="145" /></a></pre>
You'll also may notice from the list that there are no Set-* or New-* cmdlets. Never fear though, because in the next post we'll take a look at making some changes to our vCloud VMs with Get-CIView and the vCloud .NET SDK.

Why are you still reading this? <a title="PowerCLI 5.01 download" href="http://downloads.vmware.com/downloads/download.do?downloadGroup=PCLI501" target="_blank">Go download it</a>!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>167</wp:post_id>
  <wp:post_date>2012-01-09 22:10:04</wp:post_date>
  <wp:post_date_gmt>2012-01-10 03:10:04</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>powercli-in-the-cloud</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="bluelock"><![CDATA[Bluelock]]></category>
  <category domain="post_tag" nicename="cloud-computing"><![CDATA[Cloud computing]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="category" nicename="powershell"><![CDATA[Powershell]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="windows-powershell"><![CDATA[Windows Powershell]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"156573540278218755";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:64:"http://geekafterfive.files.wordpress.com/2012/01/powercli501.jpg";s:6:"images";a:2:{s:64:"http://geekafterfive.files.wordpress.com/2012/01/powercli501.jpg";a:6:{s:8:"file_url";s:64:"http://geekafterfive.files.wordpress.com/2012/01/powercli501.jpg";s:5:"width";s:3:"893";s:6:"height";s:3:"725";s:4:"type";s:5:"image";s:4:"area";s:6:"647425";s:9:"file_path";s:0:"";}s:63:"http://geekafterfive.files.wordpress.com/2012/01/snag-00001.png";a:6:{s:8:"file_url";s:63:"http://geekafterfive.files.wordpress.com/2012/01/snag-00001.png";s:5:"width";s:3:"960";s:6:"height";s:3:"285";s:4:"type";s:5:"image";s:4:"area";s:6:"273600";s:9:"file_path";s:0:"";}}s:6:"videos";a:0:{}s:11:"image_count";s:1:"2";s:6:"author";s:7:"9088041";s:7:"blog_id";s:8:"18937350";s:9:"mod_stamp";s:19:"2012-01-10 04:15:15";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>115</wp:comment_id>
    <wp:comment_author><![CDATA[Mark Nudelman]]></wp:comment_author>
    <wp:comment_author_email>mark@nudelman.com</wp:comment_author_email>
    <wp:comment_author_url>http://marknudelman.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>65.113.40.1</wp:comment_author_IP>
    <wp:comment_date>2012-03-02 20:14:50</wp:comment_date>
    <wp:comment_date_gmt>2012-03-03 01:14:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://marknudelman.com/2012/03/02/155/" rel="nofollow">The Windows &amp; VMware Guru</a>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>21659665</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330883932</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330737291.5698";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"marknudelman";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>77</wp:comment_id>
    <wp:comment_author><![CDATA[Shawn]]></wp:comment_author>
    <wp:comment_author_email>m.shawn.porter@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>167.107.191.217</wp:comment_author_IP>
    <wp:comment_date>2012-02-16 17:19:52</wp:comment_date>
    <wp:comment_date_gmt>2012-02-16 22:19:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Is it possible to create a new org via the cmdlet?  Trying to automate new org onboarding, and would prefer to use powercli w/ vmware snap-in vs writing our own app or creating our own snap-in...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329430793.2732";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329439201</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329439201.7407";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>78</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-02-16 19:39:52</wp:comment_date>
    <wp:comment_date_gmt>2012-02-17 00:39:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Shawn, it is possible. I'll see if I can post something to give you some direction, otherwise watch the PowerCLI blog for some examples! ;) http://blogs.vmware.com/vipowershell/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>77</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329439199</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1329439199.753";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Flexible adapters and the importance of VMware tools</title>
  <link>http://geekafterfive.com/2012/02/01/flexible-adapters-and-the-importance-of-vmware-tools-2/</link>
  <pubDate>Thu, 02 Feb 2012 03:11:28 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=218</guid>
  <description></description>
  <content:encoded><![CDATA[<p>I was asked recently to write a script to get a count of virtual machines with Flexible adapters that did not have VMware tools installed. While having a Flexible type network adapter is fine and not having VMware tools installed is sorta fine, but together they force your NICs to 10Mb. TEN MEGABIT, PEOPLE! It's like we're back in 1999!</p><p>It's been a while since I brushed up on my VMNIC</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>218</wp:post_id>
  <wp:post_date>2012-02-01 22:11:28</wp:post_date>
  <wp:post_date_gmt>2012-02-02 03:11:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>flexible-adapters-and-the-importance-of-vmware-tools-2</wp:post_name>
  <wp:status>trash</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Flexible Adapters and the importance of VMware Tools</title>
  <link>http://geekafterfive.com/2012/02/02/flexible-adapters-and-the-importance-of-vmware-tools/</link>
  <pubDate>Thu, 02 Feb 2012 13:00:35 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=258</guid>
  <description></description>
  <content:encoded><![CDATA[<div class="mceTemp"><dl class="wp-caption alignright zemanta-img"><dt class="wp-caption-dt"><a href="http://commons.wikipedia.org/wiki/File:Grapevinesnail_01.jpg"><img class="zemanta-img-inserted zemanta-img-configured   " title="Helix pomatia English: Picture of a grapevine ..." src="http://upload.wikimedia.org/wikipedia/commons/thumb/6/69/Grapevinesnail_01.jpg/300px-Grapevinesnail_01.jpg" alt="Helix pomatia English: Picture of a grapevine ..." width="240" height="142" /></a></dt></dl></div>
I was asked recently to write a script to get a count of virtual machines with Flexible adapters that did not have VMware tools installed. The number was surprising to me. 10% of all VMs were Flexible with no VMware Tools. While having a Flexible type network adapter is fine and not having VMware tools installed is sorta fine, but together they force your NICs to 10Mb. TEN MEGABIT, PEOPLE! It's like we're <a href="http://en.wikipedia.org/wiki/Fast_Ethernet" target="_blank">back in 1995</a>!

I decided to turn to the <a href="http://kb.vmware.com/kb/1001805" target="_blank">KB Article</a> on VM Network Adapters for verification. I mean, who even thinks about that anymore? Just set it to VMXNET3 and be done with it, right? Our VMXNET3 adapters are 10Gb. That's TEN GIGABIT! 1000x more bandwidth! Sure enough, from the KB:
<blockquote>"<strong>With VMware Tools installed</strong>, the VMXNET driver changes the Vlance adapter to the higher performance VMXNET adapter."</blockquote>
So, now the question is WHY. Why would someone not change their network adapter to E1000 (which is supported on everything you'd want to run), or at least install VMware tools to take advantage of VMXNET?
<h2>vCloud Director</h2>
<p style="text-align:left;">vCD 1.0 gives you no option to change your adapters. In order to do so, you will have to call your provider (internal, or public cloud provider) and have their admin power off the machine, remove the flexible adapter, and change it to either E1000 or VMXNET3. Of course there is nothing from stopping you from installing VMware tools on the guest machine, but we'll get to that in a second.</p>
<p style="text-align:left;">Blaming vCD 1.0 of course is a terrible excuse. "Well, upgrade to 1.5!" you say. "vCD 1.5 gives you the control of adapter types!" Yes, yes it does, but you still have to be careful. The adapter type is still flexible by default, and the adapter types are not displayed without checking the box to show them. Take the following screenshot... I have just added a NIC, and am about to click the OK button.</p>
<p style="text-align:left;"><a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0011.png"><img class="aligncenter  wp-image-319" title="SNAG-0011" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0011.png" alt="" width="764" height="218" /></a></p>
See that little check box up there? I was about to create a new NIC with a flexible adapter. Lets click it...
<p style="text-align:center;"><a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0012.png"><img class="aligncenter  wp-image-320" title="SNAG-0012" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0012.png" alt="" width="764" height="218" /></a></p>
<p style="text-align:left;">Ahh, that's better. Yep, Flexible. Good thing I checked, huh? :D</p>

<h2 style="text-align:left;">VMware Tools Support</h2>
<p style="text-align:left;">It's probably eating you up inside that the easy fix is just to install VMware Tools. Who cares if it's flexible, as long as you install VMware tools? Well, I hate to say it, but not all Operating systems support VMware tools, or in part VMXNET.</p>
<p style="text-align:left;">I'll call Checkpoint Software out on this one as an example. Checkpoint Security Gateways run on an OS called <a href="http://www.checkpoint.com/products/secureplatform/index.html" target="_blank">SecurePlatform</a>, or <a class="zem_slink" title="Check Point VPN-1" href="http://en.wikipedia.org/wiki/Check_Point_VPN-1" rel="wikipedia">SPLAT</a> for short. This highly secure distro of Linux did not have the VMware virtual machine in mind when it was first created. While I haven't tried *too* hard to get VMware tools to build on it, I will say that Checkpoint doesn't support it anyway. It suffices it to say that it works fine with the E1000 adapter. (As long as you can remember to change it. ;))</p>

<h2 style="text-align:left;">Why now?</h2>
<p style="text-align:left;">The first theory is that more and more we are creating our VMs from scratch in vCloud Director. By doing so, our network adapter will automatically become flexible. In addition to that, a theory is once the machine is created, it is moved to the catalog and used to clone out a number of other machines, all with Flexible adapters.</p>
<p style="text-align:left;">Forget to install VMware Tools on our template, and it becomes a pain in the neck to deploy from the catalog, boot it, install tools, "re-templatize" it by fixing any guest customization setup we had, power it down and then copy it back to the catalog.</p>
<p style="text-align:left;">Last theory, again about VMware tools...I have to hand it to VMware Workstation. They bug you to death about installing VMware Tools installation with the slide up/down bar. That thing is annoying, <strong>but effective</strong>. I guarantee VMware tools is installed on all my workstation VMs. Where is that annoy-bar in vCloud Director? Not everyone using vCloud Director is going to be an expert and know the importance of VMware tools.</p>

<h2 style="text-align:left;">Script!</h2>
<p style="text-align:left;">What's a geekafterfive.com blog post without some insane PowerCLI script? This script nicely outputs a list of VMs for you with flexible adapters that are missing VMware Tools. I'd be interested to know the percentages everyone else is seeing on both vSphere implementations and vCloud implementations. If it's a little crazy looking, it is because I preferred fast runtime over readability.</p>

[sourcecode language="powershell"]

# Get all VM objects
$vms = get-view -viewtype virtualmachine

# Set up an empty array
$table = @()

# For Every Vm...
Foreach ($vm in $vms)
{
    # If Tools aren't installed and there is a PCNet32 adapter in the hardware list...
    if ($vm.guest.toolsstatus -eq &quot;toolsNotInstalled&quot; -and (($vm.config.hardware.device | %{$_ -is [VMware.Vim.VirtualPCNet32]}) -contains $true))
    {
        # Then output it to an object and add it to the array
        $table += New-Object PSObject -Property @{&quot;Name&quot;=$vm.name; &quot;ToolsStatus&quot;=$vm.guest.toolsstatus; &quot;NicType&quot;=&quot;Flexible&quot;}
    }
}

# Output the table. You can Export to a CSV or whatever here.
$table

[/sourcecode]
<h2 style="text-align:left;">Epilogue</h2>
So, Dear Reader, If you have read all the way through this epic post, or just scrolled down past all the tl;dr stuff , let me summarize what you need to know:
<ul>
	<li>Flexible adapters on your VMs in combination with a lack of VMware Tools is BAD.</li>
	<li>Install VMware tools</li>
	<li>Change your adapter type to E1000</li>
	<li>Or do both, and you have the option for VMXNET3. ;)</li>
</ul>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>258</wp:post_id>
  <wp:post_date>2012-02-02 08:00:35</wp:post_date>
  <wp:post_date_gmt>2012-02-02 13:00:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>flexible-adapters-and-the-importance-of-vmware-tools</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="flexible"><![CDATA[flexible]]></category>
  <category domain="post_tag" nicename="pcnet32"><![CDATA[pcnet32]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-director"><![CDATA[vCloud Director]]></category>
  <category domain="post_tag" nicename="virtual-machine"><![CDATA[Virtual machine]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware-tools"><![CDATA[VMware Tools]]></category>
  <category domain="post_tag" nicename="vmxnet"><![CDATA[vmxnet]]></category>
  <category domain="post_tag" nicename="vmxnet3"><![CDATA[vmxnet3]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Flexible Adapters and the importance of #VMware Tools #vCloud #PowerCLI]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"165061391097663489";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>52</wp:comment_id>
    <wp:comment_author><![CDATA[Peter]]></wp:comment_author>
    <wp:comment_author_email>peter@dachangs.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>76.121.194.96</wp:comment_author_IP>
    <wp:comment_date>2012-02-05 02:16:24</wp:comment_date>
    <wp:comment_date_gmt>2012-02-05 07:16:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Installing VMware tools is always the way to go if it is a supported option. Better performance due to better drivers, ability to balloon memory, work with VSS, and much more. That said even though the vlance adapter shows up as 10 Mbps due to the driver the network speed will actually be the speed of the underlying network.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328426184.9245";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328465565</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328465566.3473";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>54</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-02-05 13:16:48</wp:comment_date>
    <wp:comment_date_gmt>2012-02-05 18:16:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[<blockquote>That said even though the vlance adapter shows up as 10 Mbps due to the driver the network speed will actually be the speed of the underlying network.</blockquote>

That has not been our experience. Without tools installed, the flexible adapter is limited to 10Mbps.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>52</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328465810</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328465810.3225";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>87</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>74.203.148.253</wp:comment_author_IP>
    <wp:comment_date>2012-02-21 11:05:49</wp:comment_date>
    <wp:comment_date_gmt>2012-02-21 16:05:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks Andy. :D]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>73</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329840354</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1329840355.195";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>180</wp:comment_id>
    <wp:comment_author><![CDATA[joel.k.berton@boeing.com]]></wp:comment_author>
    <wp:comment_author_email>joel.k.berton@boeing.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>130.76.32.213</wp:comment_author_IP>
    <wp:comment_date>2012-05-03 17:41:57</wp:comment_date>
    <wp:comment_date_gmt>2012-05-03 21:41:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Jake, good job!

How about a script to add a network to a vapp? I did not see that function anywhere.

Could it be:

$networkConfigSection.networkconfig = networkConfigSection.networkconfig += $newnetworkname

?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336081317.1151";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336083568</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>182</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>198.228.227.106</wp:comment_author_IP>
    <wp:comment_date>2012-05-03 21:21:29</wp:comment_date>
    <wp:comment_date_gmt>2012-05-04 01:21:29</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[$newnetworkname needs to be a networkConfig object, but the rest is correct!

Btw, you put this comment on the flex adapter post, but it sounds like you meant to put it on the vApp network deep dive post?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>180</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1336094492.648";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336094491</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>69</wp:comment_id>
    <wp:comment_author><![CDATA[Gina Bollenback]]></wp:comment_author>
    <wp:comment_author_email>bollenbackg@vmware.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.blogs.vmware.com/alliances</wp:comment_author_url>
    <wp:comment_author_IP>65.113.40.1</wp:comment_author_IP>
    <wp:comment_date>2012-02-10 12:21:02</wp:comment_date>
    <wp:comment_date_gmt>2012-02-10 17:21:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi. Just want to let you know that your post made it to the VMware Global Alliances Blog weekly roundup post: http://bit.ly/yiqOi3]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328894463.0183";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328899747</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328899748.2335";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>70</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-02-10 13:50:48</wp:comment_date>
    <wp:comment_date_gmt>2012-02-10 18:50:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks Gina!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>69</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328899852</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328899853.5095";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>73</wp:comment_id>
    <wp:comment_author><![CDATA[Andrew]]></wp:comment_author>
    <wp:comment_author_email>andy@indylinux.org</wp:comment_author_email>
    <wp:comment_author_url>http://andysbrew.blogspot.com</wp:comment_author_url>
    <wp:comment_author_IP>12.157.186.66</wp:comment_author_IP>
    <wp:comment_date>2012-02-13 11:43:32</wp:comment_date>
    <wp:comment_date_gmt>2012-02-13 16:43:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great article]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1329839099.619";s:7:"message";s:48:"jacobmrobinson reported this comment as not spam";s:5:"event";s:10:"report-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>true</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329151412.7941";s:7:"message";s:35:"Akismet caught this comment as spam";s:5:"event";s:10:"check-spam";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_user</wp:meta_key>
      <wp:meta_value>jacobmrobinson</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329839166</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329839166.7533";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>My Interview with David Davis, Chicago vForum 2011</title>
  <link>http://geekafterfive.com/2012/02/03/my-interview-with-david-davis-chicago-vforum-2011/</link>
  <pubDate>Fri, 03 Feb 2012 13:00:14 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=334</guid>
  <description></description>
  <content:encoded><![CDATA[This is a few months old, but I just thought I'd share it here. David, as well as the entire <a href="http://www.trainsignal.com/default.aspx" target="_blank">TrainSignal</a> team, are absolute professionals. Great online training and all around fun people! Check out other fun interviews on <a href="http://www.vmwarevideos.com/" target="_blank">vmwarevideos.com</a>

http://www.youtube.com/watch?v=Vf-qHDfDQf8]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>334</wp:post_id>
  <wp:post_date>2012-02-03 08:00:14</wp:post_date>
  <wp:post_date_gmt>2012-02-03 13:00:14</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>my-interview-with-david-davis-chicago-vforum-2011</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="bluelock"><![CDATA[Bluelock]]></category>
  <category domain="category" nicename="interview"><![CDATA[Interview]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-connector"><![CDATA[vcloud connector]]></category>
  <category domain="post_tag" nicename="vforum"><![CDATA[vforum]]></category>
  <category domain="category" nicename="video"><![CDATA[Video]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[My Interview with David Davis, Chicago vForum 2011]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:7:"9088041";s:7:"blog_id";s:8:"18937350";s:9:"mod_stamp";s:19:"2012-02-02 05:48:40";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"165422902970302464";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Poll: Bluelock booth giveaways...</title>
  <link>http://geekafterfive.com/2012/02/06/poll-bluelock-booth-giveaways/</link>
  <pubDate>Mon, 06 Feb 2012 22:16:34 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=341</guid>
  <description></description>
  <content:encoded><![CDATA[The following poll is simply for fun, and my curiosity. It has no scientific value or promise of said booth giveaway. I'm not even in the marketing dept. :D
<p style="text-align:center;"><a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0040.png"><img class="aligncenter size-full wp-image-343" style="border-color:black;border-style:solid;border-width:1px;" title="SNAG-0040" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0040.png" alt="" width="490" height="169" /></a></p>
<p style="text-align:center;"><a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0047.png"><img class="aligncenter size-full wp-image-342" style="border-color:black;border-style:solid;border-width:1px;" title="SNAG-0047" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0047.png" alt="" width="490" height="58" /></a></p>
<p style="text-align:center;">[polldaddy poll=5916776]</p>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>341</wp:post_id>
  <wp:post_date>2012-02-06 17:16:34</wp:post_date>
  <wp:post_date_gmt>2012-02-06 22:16:34</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>poll-bluelock-booth-giveaways</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="bluelock"><![CDATA[Bluelock]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="vmworld"><![CDATA[vmworld]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"166646503430045697";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>56</wp:comment_id>
    <wp:comment_author><![CDATA[Duncan Epping (@DuncanYB)]]></wp:comment_author>
    <wp:comment_author_email>DuncanYB@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/DuncanYB</wp:comment_author_url>
    <wp:comment_author_IP>95.96.206.10</wp:comment_author_IP>
    <wp:comment_date>2012-02-07 02:59:03</wp:comment_date>
    <wp:comment_date_gmt>2012-02-07 07:59:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Lego for sure, I love the video!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328601544.1284";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a1.twimg.com/profile_images/1529514613/DSC00434a_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>62220263</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328735597</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328735597.9765";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>57</wp:comment_id>
    <wp:comment_author><![CDATA[Alan Renouf]]></wp:comment_author>
    <wp:comment_author_email>alan.renouf@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://virtu-al.net</wp:comment_author_url>
    <wp:comment_author_IP>94.13.7.72</wp:comment_author_IP>
    <wp:comment_date>2012-02-07 11:22:43</wp:comment_date>
    <wp:comment_date_gmt>2012-02-07 16:22:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Awesome, I know what i voted for :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328735594</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1328735594.676";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328631764.1049";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>vCheck6 Utility Commands</title>
  <link>http://geekafterfive.com/2012/02/08/vcheck6-utility-commands/</link>
  <pubDate>Wed, 08 Feb 2012 21:25:16 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=354</guid>
  <description></description>
  <content:encoded><![CDATA[A quick video on the plugin utility commands found in vCheck 6! For more info, be sure to visit the <a href="http://www.virtu-al.net/2012/02/08/vcheck-6-0-released/" target="_blank">vCheck 6 release page</a>, and visit the <a href="http://www.virtu-al.net/featured-scripts/vcheck/vcheck-plugins/" target="_blank">vCheck Plugins page</a> to browse the available plugins. Don't forget to <a href="https://twitter.com/#!/alanrenouf" target="_blank">thank Alan</a> for all of his hard work on vCheck!

http://www.youtube.com/watch?v=S_xKCVXAq2E

&nbsp;

If you are not the video watching type, here are some helpful tips:

<strong>1. In order to access the vCheck Utility Commands. You must 'dot-source' the file:</strong>

[sourcecode language="powershell"]. .\vCheckUtils.ps1[/sourcecode]

That's dot[space]dot, for those reading this on a mobile device. ;)

<strong>2. The list of commands will display. The basic functionality is as follows:</strong>

[sourcecode language="powershell"]

Get-vCheckCommand # Get commands found in vCheckUtils.ps1
Get-vCheckPlugin # Retrieve list of plugins
Add-vCheckPlugin # Add plugin from Virtu-Al.net
Remove-vCheckPlugin  # Remove an installed plugin
[/sourcecode]

<strong>3. Some common uses:</strong>

List Plugins not installed(available from Virtu-al.net repository):

[sourcecode language="powershell"]Get-VCheckPlugin -notinstalled[/sourcecode]

Get a plugin by name:

[sourcecode language="powershell"]Get-VCheckPlugin -name &quot;Plugin Name&quot;[/sourcecode]

Get a plugin by name and install it from the Virtu-Al.net repository:

[sourcecode language="powershell"]Get-VCheckPlugin -name &quot;Plugin Name | Add-VCheckPlugin[/sourcecode]

Get a plugin by name and UNINSTALL it:

[sourcecode language="powershell"]Get-VCheckPlugin -name &quot;Plugin Name | Add-VCheckPlugin[/sourcecode]

Get all plugins that are NOT installed, and install them (warning, lots of plugins!):

[sourcecode language="powershell"]Get-VCheckPlugin -notinstalled | Add-VCheckPlugin[/sourcecode]

Need more help?

[sourcecode language="powershell"]Get-Help Get-VCheckPlugin[/sourcecode]

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>354</wp:post_id>
  <wp:post_date>2012-02-08 16:25:16</wp:post_date>
  <wp:post_date_gmt>2012-02-08 21:25:16</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vcheck6-utility-commands</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="alan-renouf"><![CDATA[alan renouf]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="vcheck"><![CDATA[vcheck]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Updated with Tips! vCheck6 Utility Commands #PowerCLI #vCheck]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"167358397581246464";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>60</wp:comment_id>
    <wp:comment_author><![CDATA[vCheck 6.0 est disponible]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://www.vmdude.fr/scripts/vcheck-6-0-est-disponible/</wp:comment_author_url>
    <wp:comment_author_IP>213.251.189.208</wp:comment_author_IP>
    <wp:comment_date>2012-02-08 17:05:47</wp:comment_date>
    <wp:comment_date_gmt>2012-02-08 22:05:47</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Alan a aussi intégrer des cmdlet (pour l&#8217;instant juste des scripts sourcés mais un petit module PowerShell pourrait peut être voir le jour ^^) pour gérer les plugin (ie récupérer automatiquement les plugin à jour et/ou les nouveaux plugin), @jakerobinson a fait un billet dessus d&#8217;ailleurs, vous devriez aller voir la vidéo pour plus d&#8217;informations : vCheck6 Utility Commands [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328738747.9616";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328823168</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328823168.6129";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>83</wp:comment_id>
    <wp:comment_author><![CDATA[Ron]]></wp:comment_author>
    <wp:comment_author_email>ron.perron@forces.gc.ca</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>131.137.243.66</wp:comment_author_IP>
    <wp:comment_date>2012-02-20 17:44:14</wp:comment_date>
    <wp:comment_date_gmt>2012-02-20 22:44:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Not getting the Security Warning prompt to run this once, etc..???]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:13:"1329777855.01";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329796337</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329796337.8045";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>61</wp:comment_id>
    <wp:comment_author><![CDATA[vCheck 6.0 released]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://www.vmdude.fr/en/scripts-en/vcheck-6-0-released/</wp:comment_author_url>
    <wp:comment_author_IP>213.251.189.208</wp:comment_author_IP>
    <wp:comment_date>2012-02-08 17:17:19</wp:comment_date>
    <wp:comment_date_gmt>2012-02-08 22:17:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Alan also developp some cmdlet (for now it&#8217;s just sourced scripts but there&#8217;ll may be a PowerShell module someday ^^) in order to manage plugin (ie download automatically updated plugin and/or new ones), @jakerobinson already posted about this functionnality, you can look at the video in order to get more information: vCheck6 Utility Commands [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328739439.5262";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328823165</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328823166.4871";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>64</wp:comment_id>
    <wp:comment_author><![CDATA[Adam Coverdale]]></wp:comment_author>
    <wp:comment_author_email>ac@welhat.gov.uk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>212.44.15.78</wp:comment_author_IP>
    <wp:comment_date>2012-02-09 11:02:13</wp:comment_date>
    <wp:comment_date_gmt>2012-02-09 16:02:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi,

Thanks for the info, however when i try to run any of the commands I get "is not recognised as the name of a cmdlet" etc, etc, any help would be greatly  appreciated.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328803333.8577";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328823163</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328823163.9157";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>66</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>74.203.148.253</wp:comment_author_IP>
    <wp:comment_date>2012-02-09 16:34:37</wp:comment_date>
    <wp:comment_date_gmt>2012-02-09 21:34:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Adam,

You will need to `dot-source` the file by running:

<code>. .\vcheckUtils.ps1</code>

or

<code>. C:\whatever\vCheck\vcheckUtils.ps1</code>]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>64</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328823279</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328823280.3189";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>67</wp:comment_id>
    <wp:comment_author><![CDATA[Adam Coverdale]]></wp:comment_author>
    <wp:comment_author_email>ac@welhat.gov.uk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>212.44.15.78</wp:comment_author_IP>
    <wp:comment_date>2012-02-10 05:07:04</wp:comment_date>
    <wp:comment_date_gmt>2012-02-10 10:07:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Jake,

I've done that but still get the same problem.  I'm new to powershell so I presume its something pretty simple that I'm doing wrong.

This is what i get:

PS C:\VCheck&gt; ls


    Directory: C:\VCheck


Mode                LastWriteTime     Length Name
----                -------------     ------ ----
d----        09/02/2012     10:30            Headers
d----        09/02/2012     10:30            Plugins
-a---        03/02/2012     10:52        890 Changelog.txt
-a---        30/01/2012     11:36        115 EndScript.ps1
-a---        09/02/2012     10:34       6972 GlobalVariables.ps1
-a---        05/02/2012     14:59      16847 Header.jpg
-a---        05/02/2012     16:20      11243 vCheck.ps1
-a---        07/02/2012     23:42      17718 vCheckUtils.ps1


PS C:\VCheck&gt; .\vCheckUtils.ps1

CommandType     Name                                                Definition
-----------     ----                                                ----------
Function        Add-VCheckPlugin                                    ...
Function        Get-vCheckCommand                                   ...
Function        Get-VCheckPlugin                                    ...
Function        Remove-VCheckPlugin                                 ...


PS C:\VCheck&gt; Get-VCheckPlugin
The term 'Get-VCheckPlugin' is not recognized as the name of a cmdlet, function, script file, or operable program. Chec
k the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:17
+ Get-VCheckPlugin &lt;&lt;&lt;

Any help would be really appreciated (again) :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328868425</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328868426.6735";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>68</wp:comment_id>
    <wp:comment_author><![CDATA[Adam Coverdale]]></wp:comment_author>
    <wp:comment_author_email>ac@welhat.gov.uk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>212.44.15.78</wp:comment_author_IP>
    <wp:comment_date>2012-02-10 05:18:39</wp:comment_date>
    <wp:comment_date_gmt>2012-02-10 10:18:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Scratch that, was being a complete dimwit, I didn't put a . infront of the .\

Apologies for wasting your time.

Ta,

Adam]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>67</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328869121</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328869122.2001";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>71</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-02-10 16:48:28</wp:comment_date>
    <wp:comment_date_gmt>2012-02-10 21:48:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[:D No worries, mate. Glad you have it sorted!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>68</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1328910508</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1328910508.6897";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>105</wp:comment_id>
    <wp:comment_author><![CDATA[Oun]]></wp:comment_author>
    <wp:comment_author_email>oun945@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>193.176.225.6</wp:comment_author_IP>
    <wp:comment_date>2012-02-29 03:00:27</wp:comment_date>
    <wp:comment_date_gmt>2012-02-29 08:00:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi jake,

How do I modify this script if I'm behind a proxy server?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330502428.6623";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330554264</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330554264.4343";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330554275.3212";s:7:"message";s:55:"jacobmrobinson changed the comment status to unapproved";s:5:"event";s:17:"status-unapproved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:13:"1330615365.74";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>107</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>108.196.169.6</wp:comment_author_IP>
    <wp:comment_date>2012-02-29 17:24:23</wp:comment_date>
    <wp:comment_date_gmt>2012-02-29 22:24:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great question. You can add proxy support with code from the following link: http://mohundro.com/blog/2007/06/28/a-simple-function-to-get-a-webclient-with-proxy-in-powershell/

Let me know if you need help implementing!

Cheers,

Jake]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>105</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330554264</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330554264.3287";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>117</wp:comment_id>
    <wp:comment_author><![CDATA[Danni Finne]]></wp:comment_author>
    <wp:comment_author_email>danni@finne.dk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>193.89.129.69</wp:comment_author_IP>
    <wp:comment_date>2012-03-05 08:29:56</wp:comment_date>
    <wp:comment_date_gmt>2012-03-05 13:29:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Getting through authenticating proxy: 

Add the indented extra code to vCheckUtils.ps1 around line 91.

$webClient = new-object system.net.webclient

	$Credentials = new-object System.Net.NetworkCredential("ProxyAuthUser", "ProxyAuthPassword", "YourDomain.local")
	$proxy = New-Object System.Net.WebProxy("YourProxyServer.local", "ProxyPort")
	$proxy.Credentials = $Credentials
	$webClient.Proxy = $proxy
				
$response = $webClient.openread("http://www.virtu-al.net/vcheck/plugins/plugins.xml")]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330976919</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330976919.7261";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330954196.9581";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>85</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-02-20 22:52:13</wp:comment_date>
    <wp:comment_date_gmt>2012-02-21 03:52:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You'll only get the security warning if your Execution Policy is set to restricted, or if you are running as Administrator, like I was. :D]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>83</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1329796335</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1329796335.9608";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>vCloud API/GUI Throwdown: Part 2</title>
  <link>http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/</link>
  <pubDate>Fri, 24 Feb 2012 14:00:11 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=370</guid>
  <description></description>
  <content:encoded><![CDATA[<a href="http://geekafterfive.files.wordpress.com/2012/02/punchout1.png"><img class=" wp-image-373 alignleft" title="punchout1" src="http://geekafterfive.files.wordpress.com/2012/02/punchout1.png" alt="" width="282" height="246" /></a>

In the first part of  <a title="vCloud API/GUI Throwdown!" href="http://geekafterfive.com/2011/11/01/vcloud-apigui-throwdown/">vCloud API/GUI Throwdown</a>, we watched in awe as the API completely pummeled the GUI. I gave you some hints in part 1 to do this on your own with the API, but this time around we're going to use PowerCLI 5.0.1 and the new vCloud Snap-in!

<span style="color:#ff0000;">Requirements:</span>
<ul>
	<li><span style="color:#ff0000;">vCloud Director 1.5 (Hit me up in the blog comments if you need Powershell code for 1.0.x)</span></li>
	<li><span style="color:#ff0000;">PowerCLI 5.0.1</span></li>
</ul>
<h3>Hot Cloning vApps</h3>
This will make an <strong>EXACT</strong> copy of the vApp, MAC addresses and all. If you don't want that, you'll need to make some modifications. Hit the comments for specific requests.

[sourcecode language="powershell" wraplines="false"]

Add-PSSnapin vmware.vimautomation.cloud
Connect-CIServer vcloud.example.com -org MyOrg -User MyUser -Password MyPassword

$sourceName = &amp;quot;SourceVApp&amp;quot;
$cloneName = &amp;quot;NewVAppName&amp;quot;
$vdcName = &amp;quot;MyOrgVdcName&amp;quot;

$sourceVapp = Get-CIVApp $sourceName
$vdc = Get-OrgVdc $vdcName
$cloneParams = new-object VMware.VimAutomation.Cloud.Views.CloneVAppParams
$instParams = new-object VMware.VimAutomation.Cloud.Views.InstantiationParams

$instParams.section = $sourceVapp.ExtensionData.Section[0,1,3]
$cloneParams.InstantiationParams = $instParams
$cloneParams.Source = $sourceVapp.Href
$cloneParams.Name = $cloneName

$vdc.ExtensionData.CloneVApp($cloneParams)

[/sourcecode]

<strong>Lines 1-2:</strong> Add Snap-in and connect.
<strong>Lines 4-6:</strong> Source, Destination, and vDC names.
<strong>Lines 8-9:</strong> Get vApp and vDC objects
<strong>Line 10:</strong> Create a CloneVAppParams Object. This is all the info vCloud needs to clone the vApp.
<strong>Line 11:</strong> Create a InstantiationParams Object. This is a container object for the OVF data.
<strong>Line 13:</strong> Add OVF Data to InstantiationParams Object. Notice I picked specific sections of the OVF [0,1,3]. Section 2 is NetworkConnectionSection. We just need Section 3: NetworkConfigSection. Attempting to clone Section 2 will cause it to fail. I'll deep dive later. :D <span style="color:#ff6600;">EDIT: If you are not utilizing vApp Networks, you should only copy sections [0,1]. I will follow up with another blog post dedicated to cloning and customizing vApps.</span>
<strong>Line 14-16:</strong> Put our InstantiationParams and other info into our CloneVAppParams object.
<strong>Line 18:</strong> Clone!

The below image was my source vApp....

[caption id="attachment_405" align="alignnone" width="490" caption="My source vApp."]<a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0022.png"><img class="size-full wp-image-405 " title="SNAG-0022" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0022.png" alt="" width="490" height="211" /></a>[/caption]

[caption id="attachment_406" align="alignnone" width="490" caption="cloneVApp method return."]<a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0023.png"><img class="size-full wp-image-406" title="SNAG-0023" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0023.png" alt="" width="490" height="147" /></a>[/caption]

[caption id="attachment_407" align="alignnone" width="490" caption="Dolly, My cloned Sheep! Er, um... vApp!"]<a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0024.png"><img class="size-full wp-image-407" title="SNAG-0024" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0024.png" alt="" width="490" height="244" /></a>[/caption]
<h3></h3>
<h3>Hot Modify connected VM network</h3>
This will change the network, and assigned IP in vCloud Director if you are using a Static IP Pool address. This does NOT change the guest address. You'll have to change it manually in the OS or force re-customization.

[sourcecode language="powershell" wraplines="false"]

$newNetworkName = &amp;quot;MyNewNetwork&amp;quot;

$vm = Get-CIVM MyCIVM

($vm.ExtensionData.Section | where {$_ -is [VMware.VimAutomation.Cloud.Views.NetworkConnectionSection]}).NetworkConnection[0].network = $newNetworkName
($vm.ExtensionData.Section | where {$_ -is [VMware.VimAutomation.Cloud.Views.NetworkConnectionSection]}).updateServerData()

[/sourcecode]

<strong>Line 1:</strong> The name of the network you want your VM connected to.
<strong>Line 3:</strong> Get the VM.
<strong>Line 5:</strong>  This is a long line. It basically says Get the Network Connection OVF section and assign the first NIC to the new network.
<strong>Line 7:</strong> UpdateServerData() This sends the updated changes to vCloud Director. Cool, eh?

[caption id="attachment_399" align="alignnone" width="490" caption="Before...Connected to vAppNetwork2 with an IP on the .2 subnet."]<a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0029.png"><img class="size-full wp-image-399" title="SNAG-0029" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0029.png" alt="" width="490" height="149" /></a>[/caption]

[caption id="attachment_400" align="alignnone" width="490" caption="After...vAppNetwork3, and an IP on the .3 subnet!"]<a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0030.png"><img class="size-full wp-image-400" title="SNAG-0030" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0030.png" alt="" width="490" height="146" /></a>[/caption]

<span style="color:#008000;">(Jake tip: You can use UpdateViewData() to refresh the VM with any data that may have changed. No need to re-'Get' the VM!)</span>
<h3>Hot Modify Disk Size</h3>
This one is also a bit ugly. I'll try to clean it up later, but it works. ;)

Also, I shouldn't need to tell you that <span style="color:#ff0000;"><strong>THIS IS DANGEROUS</strong></span>. For giggles, I tried to set it to a lower size. The command threw an exception, but vCloud still displays it at the lower size. I'll update after I check if vSphere actually allowed this (I'd be surprised). If not, it'll be a bug report to VMware. Either way, make sure you are GROWING the disk. Mind the zeros.

[sourcecode language="powershell" wraplines="false"]

$vm = Get-CIVM MyCIVM
$newsize = “10240”

(($vm.ExtensionData.Section | where {$_ -is [VMware.VimAutomation.Cloud.Views.OvfVirtualHardwareSection]}).item | where {$_.ResourceType.value -eq 17})[0].hostresource[0].AnyAttr[0].&amp;quot;#text&amp;quot; = $newsize
($vm.ExtensionData.Section | where {$_ -is [VMware.VimAutomation.Cloud.Views.OvfVirtualHardwareSection]}).updateserverdata()

[/sourcecode]

<strong>Line 1:</strong> Get the VM
<strong>Line 2:</strong> New size in megabytes.
<strong>Line 4:</strong> In plain English...Get the disks from the OVF hardware section, set the <strong>first</strong> disk's new size to the new value.
<strong>Line 5:</strong> Update server data.

[caption id="attachment_402" align="alignnone" width="490" caption="All greyed out, and it's even powered off. :("]<a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0031.png"><img class="size-full wp-image-402" title="SNAG-0031" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0031.png" alt="" width="490" height="374" /></a>[/caption]

[caption id="attachment_401" align="alignnone" width="472" caption="Newly expanded drive!!! YES!"]<a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0028.png"><img class="size-full wp-image-401" title="SNAG-0028" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0028.png" alt="" width="472" height="438" /></a>[/caption]
<h3>Bonus! Hot Modify Org Name!</h3>
The fine chaps over at <a href="http://www.vcoteam.info" target="_blank">vcoteam.info</a> mentioned adding the ability to <a href="http://www.vcoteam.info/learn-vco/code-snippets-change-the-name-of-a-vcloud-director-organization.html" target="_blank">hot change an Org name</a> to the list, which you can't do in the GUI. Watch this. <strong>Three lines of code</strong>...Ready? You'll need to be a system admin for this one.

[sourcecode language="powershell" wraplines="false"]

$org = Get-Org OrgName
$org.ExtensionData.name = &amp;quot;NewName&amp;quot;
$org.ExtensionData.UpdateServerData()

[/sourcecode]

<strong>Line 1:</strong> That
<strong>Line 2:</strong> was
<strong>Line 3:</strong> easy.

Of course, if you want the display name changed, you'll have to modify <span style="color:#3366ff;">$org.ExtensionData.FullName</span> as well ;)

[caption id="attachment_403" align="alignnone" width="352" caption="Old and busted...."]<a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0025.png"><img class="size-full wp-image-403" title="SNAG-0025" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0025.png" alt="" width="352" height="125" /></a>[/caption]

[caption id="attachment_404" align="alignnone" width="360" caption="New Hotness..."]<a href="http://geekafterfive.files.wordpress.com/2012/02/snag-0026.png"><img class="size-full wp-image-404" title="SNAG-0026" src="http://geekafterfive.files.wordpress.com/2012/02/snag-0026.png" alt="" width="360" height="117" /></a>[/caption]

Have a specific vCloud API request? <strong>Let's hear it in the comments!</strong>

Cheers!

-Jake]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>370</wp:post_id>
  <wp:post_date>2012-02-24 09:00:11</wp:post_date>
  <wp:post_date_gmt>2012-02-24 14:00:11</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vcloud-apigui-throwdown-part-2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cloning"><![CDATA[Cloning]]></category>
  <category domain="post_tag" nicename="hot-clone"><![CDATA[Hot Clone]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="vapp"><![CDATA[vApp]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-api"><![CDATA[vCloud API]]></category>
  <category domain="post_tag" nicename="virtual-machine"><![CDATA[Virtual machine]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: vCloud API/GUI Throwdown: Part 2  #vCloud #PowerCLI]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"173044630785499136";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>262</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-06-26 09:58:48</wp:comment_date>
    <wp:comment_date_gmt>2012-06-26 13:58:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Karsten, Try a $vApp.extensiondata.Undeploy() to also power off the vApp. I'll see if I can whip up some code for sharing vApps. :D]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>261</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340719128</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340719128.7022";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>261</wp:comment_id>
    <wp:comment_author><![CDATA[Karsten Bundgaard]]></wp:comment_author>
    <wp:comment_author_email>kabun@arrowecs.dk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>62.243.193.1</wp:comment_author_IP>
    <wp:comment_date>2012-06-26 02:45:27</wp:comment_date>
    <wp:comment_date_gmt>2012-06-26 06:45:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[when i execute $vApp.extensiondata.PowerOff()  It only powerof my vm`s in my vapp, and when i execute $vApp.extensiondata.Delete() it fails whit vApp is running, another issue  i got is, i need to share my vApps with specific users, is that possible with powershell ??]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>258</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340693128</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340693128.5478";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>298</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-07-12 12:29:06</wp:comment_date>
    <wp:comment_date_gmt>2012-07-12 16:29:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You can change the '0' to a '1' after the OvfVirtualHardwareSection bit to change the drive index. I have done so below:
[sourcecode language="powershell"]
(($vm.ExtensionData.Section | where {$_ -is [VMware.VimAutomation.Cloud.Views.OvfVirtualHardwareSection]}).item | where {$_.ResourceType.value -eq 17})[1].hostresource[0].AnyAttr[0].&quot;#text&quot; = $newsize
[/sourcecode]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>297</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342110550</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342110550.5614";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>267</wp:comment_id>
    <wp:comment_author><![CDATA[Karsten Bundgaard]]></wp:comment_author>
    <wp:comment_author_email>kabun@arrowecs.dk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>62.243.193.1</wp:comment_author_IP>
    <wp:comment_date>2012-06-27 04:50:23</wp:comment_date>
    <wp:comment_date_gmt>2012-06-27 08:50:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi jake !
You are a brilliant geek :-), you just saved me for a lot of time building and removing vApps in our Lab inviroment 
I solved the issue with delete a vApp, undeploy did`t removed the vApp but it did shutdown the vse, so this is hov my script looks like now 
get-org $orgVdcName | get-CIVapp $Name1 | Undeploy-CIVapp | Remove-CIVapp

when i use your vApp sharing it works fine, when the user is not presented in more than one organisation, otherwise i get a "no server authority ".

Thanks a lot for your Brilliant work helping me in this case.

-Karsten]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>264</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340787026</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340787026.8752";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>93</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-02-24 16:20:21</wp:comment_date>
    <wp:comment_date_gmt>2012-02-24 21:20:21</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Agreed. Hot adding and expanding disks is one of those basic tasks that makes vSphere awesome. To not have it in vCloud is a big step backwards!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>92</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330118429</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330118429.9815";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>275</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-06-29 01:49:12</wp:comment_date>
    <wp:comment_date_gmt>2012-06-29 05:49:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This should be up tomorrow: http://geekafterfive.com/2012/06/29/add-vcloud-harddisks-with-powercli/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>187</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340948953</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340948953.3265";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>101</wp:comment_id>
    <wp:comment_author><![CDATA[vCloud API/GUI Throwdown! &laquo; Geek after Five]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com/2011/11/01/vcloud-apigui-throwdown/</wp:comment_author_url>
    <wp:comment_author_IP>69.170.134.212</wp:comment_author_IP>
    <wp:comment_date>2012-02-27 16:09:46</wp:comment_date>
    <wp:comment_date_gmt>2012-02-27 21:09:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Part 2 of the vCloud/GUI Throwdown! Plenty of PowerCLI 5.0.1 [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330376987.3765";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330390360</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>102</wp:comment_id>
    <wp:comment_author><![CDATA[Cwjking]]></wp:comment_author>
    <wp:comment_author_email>ckinggod@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://virtualnoob.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>208.18.90.115</wp:comment_author_IP>
    <wp:comment_date>2012-02-28 08:53:05</wp:comment_date>
    <wp:comment_date_gmt>2012-02-28 13:53:05</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[So does the vCloud in PowerCLI 5.0 work with vCloud 1.0.0? I will look into it later but just a quick question.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>16545745</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330437186.6812";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"ckinggod";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330481941</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>189</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-05-11 16:59:19</wp:comment_date>
    <wp:comment_date_gmt>2012-05-11 20:59:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yep, I'll throw together a post on it!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>187</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:13:"1336769959.27";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336769959</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>187</wp:comment_id>
    <wp:comment_author><![CDATA[VCDjunky]]></wp:comment_author>
    <wp:comment_author_email>redsunlight@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>141.123.223.100</wp:comment_author_IP>
    <wp:comment_date>2012-05-10 21:30:38</wp:comment_date>
    <wp:comment_date_gmt>2012-05-11 01:30:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Jake,
Anyways to hot add second/third drives on a running vm ? 
thx in advance]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336699839.5664";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1336703540.7533";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1336703540</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>92</wp:comment_id>
    <wp:comment_author><![CDATA[Frank Brix Pedersen]]></wp:comment_author>
    <wp:comment_author_email>frank@wtf.dk</wp:comment_author_email>
    <wp:comment_author_url>http://www.vfrank.org</wp:comment_author_url>
    <wp:comment_author_IP>194.144.245.5</wp:comment_author_IP>
    <wp:comment_date>2012-02-24 15:22:30</wp:comment_date>
    <wp:comment_date_gmt>2012-02-24 20:22:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for sharing information about how to hot-extend disks. It is a big GUI loss that it is not in there.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330114951.6997";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330118431</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330118431.8413";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>264</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-06-26 15:07:52</wp:comment_date>
    <wp:comment_date_gmt>2012-06-26 19:07:52</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Sorry, Undeploy() does require a parameter: void Undeploy(string undeployPowerAction)...

So try: $vapp.extensiondata.Undeploy("powerOff")]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>263</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340737675</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340737676.0273";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>263</wp:comment_id>
    <wp:comment_author><![CDATA[Karsten Bundgaard]]></wp:comment_author>
    <wp:comment_author_email>kabun@arrowecs.dk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>87.104.31.101</wp:comment_author_IP>
    <wp:comment_date>2012-06-26 15:03:49</wp:comment_date>
    <wp:comment_date_gmt>2012-06-26 19:03:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[$vApp.extensiondata.Undeply() gives me back this message " Cannot find an overload for "Undeploy" and the argument count: "0" " both with a running vApp and a powered off. it can really  save me a lot of time if you can help me with these issues, :-D,]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340737432</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1340737433.095";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>104</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-02-28 21:18:48</wp:comment_date>
    <wp:comment_date_gmt>2012-02-29 02:18:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Chadwick,

It does not. For vCloud Director 1.0 you'll need my vCloud Powershell Function library.

Cheers,

Jake]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>102</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330481929</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1330481929.0972";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>265</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-06-26 15:51:42</wp:comment_date>
    <wp:comment_date_gmt>2012-06-26 19:51:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Also, here's some vApp sharing code I just whipped up for you: http://geekafterfive.com/2012/06/26/sharing-vapps-in-vcloud-with-powercli/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>263</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340740305</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1340740305.562";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>385</wp:comment_id>
    <wp:comment_author><![CDATA[Adrian]]></wp:comment_author>
    <wp:comment_author_email>ady189@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>86.176.226.28</wp:comment_author_IP>
    <wp:comment_date>2012-08-09 06:49:11</wp:comment_date>
    <wp:comment_date_gmt>2012-08-09 10:49:11</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This only works if the VM has one disk? and entering the [1] before hostresource works for additional disks, but you can't specify [0] for the first disk?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344509351.713881969451904296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344521450</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344521450.72311305999755859375;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>256</wp:comment_id>
    <wp:comment_author><![CDATA[Karsten Bundgaard]]></wp:comment_author>
    <wp:comment_author_email>kabun@arrowecs.dk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>62.243.193.1</wp:comment_author_IP>
    <wp:comment_date>2012-06-25 12:40:07</wp:comment_date>
    <wp:comment_date_gmt>2012-06-25 16:40:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[No i want to delete both the vApp and vSE but i can only powerdown my vApp and therefor not able to delete the vApp because vSE is still running.  so what i want is to delete a running vApp with a powershell script.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>255</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340642410</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340642410.9529";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>253</wp:comment_id>
    <wp:comment_author><![CDATA[Karsten Bundgaard]]></wp:comment_author>
    <wp:comment_author_email>kabun@arrowecs.dk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>87.104.31.101</wp:comment_author_IP>
    <wp:comment_date>2012-06-24 07:32:28</wp:comment_date>
    <wp:comment_date_gmt>2012-06-24 11:32:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi jake,
is there a way to find a vse that is related to a vapp and power it off, i have a script that stops my vapp but not the vse-vApp,  i can not remove my vapp using my script before my  vse-vApp is powered off]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340547289</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340537549.6885";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>255</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-06-24 17:56:37</wp:comment_date>
    <wp:comment_date_gmt>2012-06-24 21:56:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[To clarify, you want to remove a vSE from a vApp without powering off the vApp?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>253</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1340574998.995";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340574998</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>297</wp:comment_id>
    <wp:comment_author><![CDATA[Brendan]]></wp:comment_author>
    <wp:comment_author_email>brendan@technicl.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>150.101.250.81</wp:comment_author_IP>
    <wp:comment_date>2012-07-11 21:08:38</wp:comment_date>
    <wp:comment_date_gmt>2012-07-12 01:08:38</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi, awesome post, very helpful!

How would I specify a second, or third disk?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342063699</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342055318.1629";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>258</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-06-25 13:40:14</wp:comment_date>
    <wp:comment_date_gmt>2012-06-25 17:40:14</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Karsten, you will need to power off the vApp in order to delete the vApp and vSE.

To do so, you can run the following:

<code>$vApp = Get-CIVapp "MyVApp"
$vApp.extensiondata.PowerOff()
$vApp.extensiondata.Delete()</code>]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>256</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340646015</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340646015.4059";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>269</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-06-27 08:28:19</wp:comment_date>
    <wp:comment_date_gmt>2012-06-27 12:28:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ah, if you are running as a system admin, You should probably use the -org parameter for Get-CIUser and Get-CIVApp... So Get-CIUser -org "myOrg" -name "Jake"]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>267</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340800100</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340800100.4955";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>270</wp:comment_id>
    <wp:comment_author><![CDATA[Karsten Bundgaard]]></wp:comment_author>
    <wp:comment_author_email>kabun@arrowecs.dk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>62.243.193.1</wp:comment_author_IP>
    <wp:comment_date>2012-06-27 08:46:37</wp:comment_date>
    <wp:comment_date_gmt>2012-06-27 12:46:37</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[yep, that did the trick,just added -org in my function so everything works fine now. :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>269</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340801197</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1340801197.698";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>271</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-06-27 08:48:40</wp:comment_date>
    <wp:comment_date_gmt>2012-06-27 12:48:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Excellent! :) Glad I could help!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>270</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340801321</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340801321.3969";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>276</wp:comment_id>
    <wp:comment_author><![CDATA[Add vCloud Harddisks with PowerCLI &laquo; Geek after Five]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com/2012/06/29/add-vcloud-harddisks-with-powercli/</wp:comment_author_url>
    <wp:comment_author_IP>74.200.247.237</wp:comment_author_IP>
    <wp:comment_date>2012-06-29 08:01:09</wp:comment_date>
    <wp:comment_date_gmt>2012-06-29 12:01:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] vCloud API/GUI Throwdown part 2, I showed you how to modify VM disk sizes in vCloud Director while the VM is still powered on. [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340971270.1506";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340973163</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>722</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2013-02-20 11:46:25</wp:comment_date>
    <wp:comment_date_gmt>2013-02-20 16:46:25</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Peter,

You can do this through the 5.1 API, and it's under <a href="http://pubs.vmware.com/vcd-51/index.jsp?topic=%2Fcom.vmware.vcloud.api.reference.doc_51%2Fdoc%2Ftypes%2FVmCapabilitiesType.html" target="_blank" rel="nofollow">VMCapabilities</a>

Example Powershell:
[sourcecode language="powershell"]
$vm = get-civm &quot;MyVM&quot;
$vm.extensiondata.VMCapabilities.CpuHotAddEnabled = &quot;True&quot;
$vm.extensiondata.VMCapabilities.MemoryHotAddEnabled = &quot;True&quot;
$vm.extensiondata.VMCapabilities.UpdateServerData()
[/sourcecode]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>720</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1361378785.6843149662017822265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1361378785</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>387</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-08-09 10:13:10</wp:comment_date>
    <wp:comment_date_gmt>2012-08-09 14:13:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Adrian, Yes, you should be able to specify [0] for the first disk, which is what I used in the code in the blog post. Are you having issues with it?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>385</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344521593</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344521594.1304419040679931640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>388</wp:comment_id>
    <wp:comment_author><![CDATA[Adrian]]></wp:comment_author>
    <wp:comment_author_email>ady189@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>86.176.226.28</wp:comment_author_IP>
    <wp:comment_date>2012-08-09 10:23:36</wp:comment_date>
    <wp:comment_date_gmt>2012-08-09 14:23:36</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes been struggling with it... Exception calling "UpdateServerData" with "0" argument(s): "Invalid hard disk parameters specified. The following parameters are invalid or conflict with other configured devices in the virtual machine:    Adaptor Type: SCSIPARAVIRTUAL, Bus Number: 0, Unit Number: 0"

At C:\Users\administrator\Desktop\resize.ps1:6 char:123
+ ($vm.ExtensionData.Section | where {$_ -is [VMware.VimAutomation.Cloud.Views.OvfVirtualHardwareSection]}).updateserverdata &lt;&lt;&lt;&lt; ()
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : DotNetMethodException


Any ideas?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>387</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344522217</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344522217.9558980464935302734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>389</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-08-09 10:26:44</wp:comment_date>
    <wp:comment_date_gmt>2012-08-09 14:26:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ooooh, that's interesting... I have not tested against the paravirtual adapters. Let me test that and get you some code.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>388</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344522405</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344522405.2399051189422607421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>703</wp:comment_id>
    <wp:comment_author><![CDATA[Richard]]></wp:comment_author>
    <wp:comment_author_email>richard.harber@dobsontechnologies.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>64.19.96.164</wp:comment_author_IP>
    <wp:comment_date>2013-01-15 15:31:58</wp:comment_date>
    <wp:comment_date_gmt>2013-01-15 20:31:58</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I tried your code to modify hard drive size in vCloud Director and am getting the following error... Not sure where to go...

Exception calling "UpdateServerData" with "0" argument(s): "Argument ''uriTempl
ate' must not be null' cannot be null.
Parameter name: 'uriTemplate' must not be null"
At C:\users\rharber\desktop\modifydrive.ps1:7 char:123
+ ($vm.ExtensionData.Section | where {$_ -is [VMware.VimAutomation.Cloud.Views.
OvfVirtualHardwareSection]}).updateserverdata &lt;&lt;&lt;&lt; ()
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : DotNetMethodException]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358281918.8723409175872802734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358392600</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358392600.2622740268707275390625;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>704</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2013-01-16 22:18:02</wp:comment_date>
    <wp:comment_date_gmt>2013-01-17 03:18:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Is it a template or a linked clone you are trying to modify? What version of vCloud Director?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>703</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358392682</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358392682.747250080108642578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>705</wp:comment_id>
    <wp:comment_author><![CDATA[Richard]]></wp:comment_author>
    <wp:comment_author_email>richard.harber@dobsontechnologies.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>74.200.244.36</wp:comment_author_IP>
    <wp:comment_date>2013-01-17 09:15:02</wp:comment_date>
    <wp:comment_date_gmt>2013-01-17 14:15:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[My bad on this one... I was trying it in my lab which is ver 5.1... We run 1.5.1 in production... I ran the script on a VM in production and it worked flawlessly... Thanks for the awesome work..]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>704</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1358432103</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1358432104.234961986541748046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>752</wp:comment_id>
    <wp:comment_author><![CDATA[Christian]]></wp:comment_author>
    <wp:comment_author_email>ch@skyway-dc.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>109.234.108.5</wp:comment_author_IP>
    <wp:comment_date>2013-03-05 10:14:26</wp:comment_date>
    <wp:comment_date_gmt>2013-03-05 15:14:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Jake,

have you recently tried to hot-change a VM's network connection?

I am currently trying to write a script to hot-migrate a VM's network connections from networkA to networkB but after submitting the updateServerData() method the vCloud Director API (vDC 5.1) always tells me that I have to powerOff the VM first.

Any suggestions?

Best regards,
Christian]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362506677</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362496466.6967580318450927734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>754</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2013-03-06 10:25:53</wp:comment_date>
    <wp:comment_date_gmt>2013-03-06 15:25:53</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Christian, I'll give it a try on 5.1 and let you know.

Cheers,

Jake]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>752</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362583553</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362583553.698976039886474609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>720</wp:comment_id>
    <wp:comment_author><![CDATA[Peter]]></wp:comment_author>
    <wp:comment_author_email>laurentiur@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>78.96.134.135</wp:comment_author_IP>
    <wp:comment_date>2013-02-19 05:33:26</wp:comment_date>
    <wp:comment_date_gmt>2013-02-19 10:33:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[How about enabling CPU &amp; RAM hot-add through vCloud API? I see these options in the Properties page in the UI but couldn't find how to do it through the API.
Thanks,]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1361270007.1798970699310302734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1361310219</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1361310219.6492960453033447265625;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>729</wp:comment_id>
    <wp:comment_author><![CDATA[Peter]]></wp:comment_author>
    <wp:comment_author_email>laurentiur@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>94.177.40.90</wp:comment_author_IP>
    <wp:comment_date>2013-02-21 11:20:35</wp:comment_date>
    <wp:comment_date_gmt>2013-02-21 16:20:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Jake, thanks for the answer! It's really interesting and gives me hopes. 
I omitted to say i'm using vCloud 1.5, do u happen to know if it too has support for this? I've read that in 1.5 all actions that can be done through the UI can be done through the API, so I'm guessing there should be support for this.
Thanks,
Peter]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>722</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1361463637.978950023651123046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1361463637</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>730</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>166.137.99.138</wp:comment_author_IP>
    <wp:comment_date>2013-02-21 11:22:50</wp:comment_date>
    <wp:comment_date_gmt>2013-02-21 16:22:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Unfortunately this is an exception to the rule in 1.5. This is not available in the API until 5.1. :(]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>729</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1361463771.9089829921722412109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1361463771</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>731</wp:comment_id>
    <wp:comment_author><![CDATA[Peter]]></wp:comment_author>
    <wp:comment_author_email>laurentiur@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>78.96.134.135</wp:comment_author_IP>
    <wp:comment_date>2013-02-21 12:45:33</wp:comment_date>
    <wp:comment_date_gmt>2013-02-21 17:45:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Understood. Well this is unfortunate indeed, but at least it spares me some searching. Thanks for the info,
Peter]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1361468733</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1361468733.9332981109619140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>829</wp:comment_id>
    <wp:comment_author><![CDATA[Resize &amp; Hot-Add/Extend Virtual Machine Disks using vCloud API | VMware vSphere Blog - VMware Blogs]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>https://blogs.vmware.com/vsphere/2012/05/resize-hot-addextend-virtual-machine-disks-using-vcloud-api.html</wp:comment_author_url>
    <wp:comment_author_IP>72.52.96.19</wp:comment_author_IP>
    <wp:comment_date>2013-05-05 12:27:31</wp:comment_date>
    <wp:comment_date_gmt>2013-05-05 16:27:31</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] Additional Resources: If you are interested in using the PowerCLI cmdlets for vCloud Director, you can check out this blog post by Jake Robinson who shows you an example of using the vCloud API and PowerCLI cmdlets with vCloud Director http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/ [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1367779143</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1367771251.8519051074981689453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Upload Media to vCloud with PowerCLI</title>
  <link>http://geekafterfive.com/2012/02/24/upload-media-to-vcloud-with-powercli/</link>
  <pubDate>Fri, 24 Feb 2012 22:03:15 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=416</guid>
  <description></description>
  <content:encoded><![CDATA[<a href="http://commons.wikipedia.org/wiki/File:Small_cdisk_ubt.jpeg" target="_blank"><img class="zemanta-img-inserted zemanta-img-configured alignright" title="English: a small compact disk / Memorex CD-RW ..." src="http://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Small_cdisk_ubt.jpeg/300px-Small_cdisk_ubt.jpeg" alt="English: a small compact disk / Memorex CD-RW ..." width="210" height="189" /></a>

&nbsp;

It's a double post Friday! This one won't be quite as long. ;)

&nbsp;

Have a bunch of ISOs you need to upload to your vCloud Director Catalog? This is the script for you! Once in a while I get a crazy "can you do this" from my friend and <a href="http://blog.bluelock.com/" target="_blank">Bluelock</a> product development dude, Ben Miller. The detailed reasons why are still very top secret, but I can at least share the code to upload media and add it to the catalog!!!

Enjoy!

-Jake

&nbsp;

[sourcecode language="powershell"]

$isoFolder = &quot;C:\MyISOs&quot;
$vdcName = &quot;MyVDC&quot;
$catalogName = &quot;MyCatalog&quot;

# create / delete a cloud media object
Get-ChildItem $isoFolder | %{

$media = New-Object VMware.VimAutomation.Cloud.Views.Media
$media.name = $_.name
$media.ImageType = 'iso'
$media.size = $_.length

$media.Files = New-Object VMware.VimAutomation.Cloud.Views.FilesList
$media.Files.File = @(new-object VMware.VimAutomation.Cloud.Views.File)
$media.Files.File[0] = new-object VMware.VimAutomation.Cloud.Views.File
$media.Files.file[0].type = 'iso'
$media.Files.file[0].name = $_.name

$vdc = Get-OrgVdc $vdcName
$vdc.ExtensionData.CreateMedia($media)

$filehref = (Get-Media $media.name | Get-CIView).files.file[0].link[0].href
$webclient = New-Object system.net.webclient
$webclient.Headers.Add('x-vcloud-authorization',$global:DefaultCIServers[0].sessionid)
$webclient.Uploadfile($filehref, 'PUT', $_.fullname)
}

#Add non-catalog media to catalog
$mediaList = get-media | where {!$_.catalog}
$catalog = get-catalog $catalogName

foreach ($noCatMedia in $mediaList)
{
 $resEntity = $vdc.extensiondata.resourceEntities.resourceEntity | where {$_.name -eq $noCatMedia.name}
 $catitem = New-Object VMware.VimAutomation.Cloud.Views.CatalogItem
 $catitem.Entity = $resEntity.href
 $catitem.name = $resEntity.name
 $catitem.description = $media.description
 $catalog.extensiondata.createcatalogitem($catitem)
}

[/sourcecode]

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>416</wp:post_id>
  <wp:post_date>2012-02-24 17:03:15</wp:post_date>
  <wp:post_date_gmt>2012-02-24 22:03:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>upload-media-to-vcloud-with-powercli</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="media"><![CDATA[media]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-api"><![CDATA[vCloud API]]></category>
  <category domain="post_tag" nicename="vcloud-media"><![CDATA[vcloud media]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Another New Post!!! : Upload media to #vCloud with #PowerCLI !]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"173166131815784448";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:104:"http://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Small_cdisk_ubt.jpeg/300px-Small_cdisk_ubt.jpeg";s:6:"images";a:1:{s:104:"http://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Small_cdisk_ubt.jpeg/300px-Small_cdisk_ubt.jpeg";a:6:{s:8:"file_url";s:104:"http://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Small_cdisk_ubt.jpeg/300px-Small_cdisk_ubt.jpeg";s:5:"width";s:3:"300";s:6:"height";s:3:"270";s:4:"type";s:5:"image";s:4:"area";s:5:"81000";s:9:"file_path";s:0:"";}}s:6:"videos";a:0:{}s:11:"image_count";s:1:"1";s:6:"author";s:7:"9088041";s:7:"blog_id";s:8:"18937350";s:9:"mod_stamp";s:19:"2012-02-24 22:03:15";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>285</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>12.53.240.113</wp:comment_author_IP>
    <wp:comment_date>2012-07-03 16:37:40</wp:comment_date>
    <wp:comment_date_gmt>2012-07-03 20:37:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Interesting, that sounds almost like a PowerCLI bug. Would you want some code to upload media that bypasses PowerCLI?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>284</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1341347860.5657";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1341347860</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>284</wp:comment_id>
    <wp:comment_author><![CDATA[Damien COUTURIER]]></wp:comment_author>
    <wp:comment_author_email>d.couturier@quadria.fr</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>80.11.234.74</wp:comment_author_IP>
    <wp:comment_date>2012-07-03 12:18:24</wp:comment_date>
    <wp:comment_date_gmt>2012-07-03 16:18:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[It seems to be a size problem. Can't upload file bigger than 1Go :'(]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1341332305.689";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1341332305</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>113</wp:comment_id>
    <wp:comment_author><![CDATA[Mark Nudelman]]></wp:comment_author>
    <wp:comment_author_email>mark@nudelman.com</wp:comment_author_email>
    <wp:comment_author_url>http://marknudelman.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>65.113.40.1</wp:comment_author_IP>
    <wp:comment_date>2012-03-02 20:07:19</wp:comment_date>
    <wp:comment_date_gmt>2012-03-03 01:07:19</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://marknudelman.com/2012/03/02/150/" rel="nofollow">The Windows &amp; VMware Guru</a>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>21659665</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1330883911</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1330736839.889";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:12:"marknudelman";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>288</wp:comment_id>
    <wp:comment_author><![CDATA[Damien COUTURIER]]></wp:comment_author>
    <wp:comment_author_email>d.couturier@quadria.fr</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>46.235.16.30</wp:comment_author_IP>
    <wp:comment_date>2012-07-04 13:41:57</wp:comment_date>
    <wp:comment_date_gmt>2012-07-04 17:41:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[another solution ?! Oh yes I want :$]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>285</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1341423718</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1341423718.7269";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>226</wp:comment_id>
    <wp:comment_author><![CDATA[Damien COUTURIER]]></wp:comment_author>
    <wp:comment_author_email>d.couturier@quadria.fr</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>80.11.234.74</wp:comment_author_IP>
    <wp:comment_date>2012-06-08 06:02:39</wp:comment_date>
    <wp:comment_date_gmt>2012-06-08 10:02:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great job! I was looking for a script to do exactly that! big thank you I adapted the script in my environment but I get some errors with "UploadFile" (Operation has timed out or aborted request: the resquest was Canceled) and I do not understand what causes these errors]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1339149759.5373";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1339156232</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>520</wp:comment_id>
    <wp:comment_author><![CDATA[Damien COUTURIER]]></wp:comment_author>
    <wp:comment_author_email>d.couturier@quadria.fr</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>88.160.196.173</wp:comment_author_IP>
    <wp:comment_date>2012-09-05 02:18:10</wp:comment_date>
    <wp:comment_date_gmt>2012-09-05 06:18:10</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[do you have any update for this "bug" ? I can't find another way to upload my ISOs :'(]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1346825890.682921886444091796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1346825890</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>vCloud PowerCLI SvMotion</title>
  <link>http://geekafterfive.com/2012/03/06/vcloud-powercli-svmotion/</link>
  <pubDate>Tue, 06 Mar 2012 18:40:53 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=445</guid>
  <description></description>
  <content:encoded><![CDATA[What's the correct capitalization supposed to be? sVmotion? SVMotion? SvMotion? Blah, whatever. The point is, <a href="https://twitter.com/#!/lamw" target="_blank">William Lam</a> wrote a couple <a href="http://www.virtuallyghetto.com/2012/02/performing-storage-vmotion-in-vcloud.html" target="_blank">killer</a> <a href="http://www.virtuallyghetto.com/2012/02/performing-storage-vmotion-in-vcloud_19.html" target="_blank">posts</a> on doing a storage vMotion through the vCloud API. Feeling the PowerCLI mafia needed a solution as well, I went ahead and wrote it. William's post about performing the vMotion with the REST API made writing the PowerCLI code very easy.

A few general things to note:
<ol>
	<li>This is a storage vMotion for the entire VM. If you have VMs with multiple disks on different datastores, the theoretical behavior is that it will move all disks to the same datastore.</li>
	<li>You have to be a user with SYSTEM access. Normal Org admins don't have to worry about such things as datastores. It's all abstracted. :D</li>
	<li>You can't SvMotion to vCloud-disabled datastores. (I could think of some interesting use cases for that, but it doesn't work. ;))</li>
	<li>This is a great method to empty datastores for doing fresh VMFS volumes. Jason Boche has a great VMFS 5 <a href="http://www.boche.net/blog/index.php/2011/07/21/vmfs-5-vmfs-3-whats-the-deal/" target="_blank">article here</a>. Don't forget to disable the datastore in vCloud Director before running! :D</li>
</ol>
[sourcecode language="powershell" wraplines="false"]

$vmName = &quot;MyVMName&quot;
$destDatastoreName = &quot;MyDatastoreName&quot;

$vmQuery = Search-Cloud -QueryType AdminVM -Name $vmName

if ($destDatastoreName -eq $vmQuery.datastoreName)
{
 Write-Host -ForegroundColor Red &quot;Silly Wabbit, You are trying to sVmotion to the same Datastore.&quot;
 break
}
else
{
 $vm = Get-CIVM $vmName
 $dsQuery = Search-Cloud -QueryType Datastore -Name $destDatastoreName
 $dsRef = New-Object vmware.vimautomation.cloud.views.reference
 $dsRef.Href = &quot;https://$($global:DefaultCIServers[0].name)/api/admin/extension/datastore/$($dsquery.id.split(':')[-1])&quot;
 $vm.ExtensionData.Relocate($dsRef)
}

[/sourcecode]

<strong>Lines 4-11:</strong> This is basically some validation to make sure we are not trying to migrate to the same datastore.
<strong>Line 14:</strong> Get information on the datastore we are migrating to.
<strong>Line 15:</strong> Create a reference object.
<strong>Line 16:</strong> Search-Cloud only returns an ID, so we have to construct the href ourselves. (Has to do with the query type Seach-Cloud is using. No biggie.)
<strong>Line 17:</strong> Relocate!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>445</wp:post_id>
  <wp:post_date>2012-03-06 13:40:53</wp:post_date>
  <wp:post_date_gmt>2012-03-06 18:40:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vcloud-powercli-svmotion</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="datastore"><![CDATA[datastore]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="relocate"><![CDATA[relocate]]></category>
  <category domain="post_tag" nicename="svmotion"><![CDATA[svmotion]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware-vmfs"><![CDATA[VMware VMFS]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[#vCloud #PowerCLI SvMotion]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"177101464915808256";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>171</wp:comment_id>
    <wp:comment_author><![CDATA[Aman]]></wp:comment_author>
    <wp:comment_author_email>vcdin_ind@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>184.96.131.179</wp:comment_author_IP>
    <wp:comment_date>2012-04-15 07:39:49</wp:comment_date>
    <wp:comment_date_gmt>2012-04-15 11:39:49</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Jake, would you have a script to do the same in a vSphere infra.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1334538667</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1334538667.3238";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1334489990.4824";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>172</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-04-15 21:11:07</wp:comment_date>
    <wp:comment_date_gmt>2012-04-16 01:11:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Check out this post from Alan! http://www.virtu-al.net/2009/06/11/storage-vmotion-the-powercli-way/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>171</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1334538667.2487";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1334538667</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>173</wp:comment_id>
    <wp:comment_author><![CDATA[Migrating virtual machines to &#8220;new&#8221; VMFS-5 LUNS &laquo; Virtual Noob]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://virtualnoob.wordpress.com/2012/04/24/migrating-virtual-machines-to-new-vmfs-5-luns/</wp:comment_author_url>
    <wp:comment_author_IP>76.74.248.194</wp:comment_author_IP>
    <wp:comment_date>2012-04-24 10:18:23</wp:comment_date>
    <wp:comment_date_gmt>2012-04-24 14:18:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] http://www.virtuallyghetto.com/2012/02/performing-storage-vmotion-in-vcloud_19.html http://geekafterfive.com/2012/03/06/vcloud-powercli-svmotion/ http://geekafterfive.com/tag/vcloud/ [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1335277104.0561";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1335278376.3529";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1335278376</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>474</wp:comment_id>
    <wp:comment_author><![CDATA[Kurt DeWitt]]></wp:comment_author>
    <wp:comment_author_email>kurt.dewitt@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://metaflo.com</wp:comment_author_url>
    <wp:comment_author_IP>216.17.83.164</wp:comment_author_IP>
    <wp:comment_date>2012-08-16 17:56:20</wp:comment_date>
    <wp:comment_date_gmt>2012-08-16 21:56:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Jake,  what's the output after line 4, if you put in something like;  
PowerCLI  C:\Windows\system32&gt;  write-output $vmQuery.DatastoreName

Does Powershell really think that $vmQuery is a key-value pairing or just a flat text file??]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>173</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1345154180.6110899448394775390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1345154247</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>475</wp:comment_id>
    <wp:comment_author><![CDATA[Kurt DeWitt]]></wp:comment_author>
    <wp:comment_author_email>kurt.dewitt@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://metaflo.com</wp:comment_author_url>
    <wp:comment_author_IP>216.17.83.164</wp:comment_author_IP>
    <wp:comment_date>2012-08-16 17:59:32</wp:comment_date>
    <wp:comment_date_gmt>2012-08-16 21:59:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Also, what happens if you have several VMs and several Templates, all named "MyVMName".  The Search-Cloud query will contain a  file that has information on all of those instances.  How then, does your check work in this case?  I think this script needs to be built out to be more robust in this case - yes?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>474</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1345154373</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1345154373.294188022613525390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>476</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-08-16 18:05:09</wp:comment_date>
    <wp:comment_date_gmt>2012-08-16 22:05:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Correct.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>475</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1345154710</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1345154711.1183769702911376953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>477</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-08-16 18:09:41</wp:comment_date>
    <wp:comment_date_gmt>2012-08-16 22:09:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great questions! $vmQuery would contain this:

http://www.vmware.com/support/vcd/doc/rest-api-doc-1.5-html/types/QueryResultAdminVMRecordType.html]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>474</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1345154982</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1345154983.34681606292724609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Deepdive: vCloud vApp Networks</title>
  <link>http://geekafterfive.com/2012/04/24/deepdive-vcloud-vapp-networks/</link>
  <pubDate>Tue, 24 Apr 2012 20:53:35 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=450</guid>
  <description></description>
  <content:encoded><![CDATA[There are three network "fence modes" (connection modes)  in vCloud Director: <strong>Isolated, Bridged, </strong>and<strong> Nat Routed</strong>. These apply to both Org and vApp networks, but for now we are talking in the context of vApps. We'll also talk about the vApp network features, courtesy of vShield Edge: <strong>DHCP, Firewall, Static Routing,</strong> and <strong>NAT.</strong>

A quick note about terminology. The use of terms like "fence mode" are what you will see in the API. When applicable, I will refer to the Web UI term (in parenthesis) or with a screenshot.
<h3><span style="color:#3366ff;">Isolated</span></h3>
[caption id="attachment_525" align="alignnone" width="343" caption="An Isolation vApp Network"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0077.png"><img class=" wp-image-525  " style="border-image:initial;border-width:1px;border-color:gray;border-style:solid;" title="Isolation network" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0077.png" alt="" width="343" height="169" /></a>[/caption]

[caption id="attachment_532" align="alignnone" width="446" caption="Isolation network details"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0085.png"><img class=" wp-image-532   " style="border-image:initial;border-width:1px;border-color:gray;border-style:solid;" title="Isolation network details" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0085.png" alt="" width="446" height="49" /></a>[/caption]

<strong>Definition:</strong> Isolated networks are completely separate networks. By themselves, there is no connection or communication to other networks. Because they are completely isolated, you can do normally frowned upon things like reuse the same subnet over and over in different isolated networks. ;)

<strong>Usage:</strong> Isolated networks are great for back-end communication, such as database traffic. In a web application, for instance, you could give your web servers a second interface on the isolated network that database server resides on. Another use for an isolation network is not isolation at all, but providing your own routing device. Your routing appliance could have one interface on the isolated vApp network, and then another interface on an Org level network. If you wanted features such as dynamic routing, VPN to a specific vApp, Web Application Firewall, etc,  this would be the way to go.

<strong>Features:</strong> Because of their isolation, the only available vShield Edge feature is DHCP. Theoretically speaking, if DHCP were enabled and a vShield was instantiated, static routing should be available, but it's not. Firewall and NAT are not available because they both require connections to another network via vShield Edge.
<h3><span style="color:#3366ff;">Bridged</span></h3>
[caption id="attachment_526" align="alignnone" width="392" caption="a Bridged vApp Network"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0079.png"><img class=" wp-image-526   " style="border-image:initial;border-width:1px;border-color:gray;border-style:solid;" title="Bridged" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0079.png" alt="" width="392" height="310" /></a>[/caption]

[caption id="attachment_531" align="alignnone" width="446" caption="Bridged network Details"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0084.png"><img class=" wp-image-531  " style="border-image:initial;border-width:1px;border-color:gray;border-style:solid;" title="SNAG-0084" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0084.png" alt="" width="446" height="50" /></a>[/caption]

<strong>Definition:</strong> Bridged simply means you are directly connected to an Org network. In fact, the vCloud Web UI calls the connection "Direct" and shows up as the Org Network you are directly connected to.

<strong>Usage:</strong> Bridged (direct connected) networks are commonly used for VMs that need to be accessed from anywhere within your Organization, such as DNS or directory services.

<strong>Features: </strong>None (at the vApp level). The Org level of this network may have feautures available, depending on it's type.
<h3><span style="color:#3366ff;">NatRouted</span></h3>
[caption id="attachment_527" align="alignnone" width="392" caption="A natRouted vApp Network"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0080.png"><img class=" wp-image-527  " style="border-image:initial;border-width:1px;border-color:gray;border-style:solid;" title="natRouted" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0080.png" alt="" width="392" height="293" /></a>[/caption]

[caption id="attachment_530" align="alignnone" width="446" caption="NatRouted network details"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0083.png"><img class=" wp-image-530   " style="border-image:initial;border-width:1px;border-color:gray;border-style:solid;" title="natrouted network details" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0083.png" alt="" width="446" height="46" /></a>[/caption]

<strong>Definition:</strong> Connecting a vApp network to an Org network results in a 'natRouted' mode. This automatically invokes the creation of a vShield Edge appliance to connect the two different networks. The appliance has an internal and an external interface. The internal interfaces is on the vApp network, and the external on the org network.

<strong>Usage:</strong> NatRouted networks are required for firewall, NAT, and static routing services provided by vShield Edge. Typical usage includes securely publishing applications to the organization or Internet, but there is also the concept of "fencing," Fencing a network essentially hides a VM's MAC and IP addresses from the rest of your Virtual Datacenter. As long as each VM has a NAT address to the Org network, you can have duplicate IP addresses internally in the vApp because it is "hidden" by the vShield Edge device. This won't work if you are using static routing.

<strong>Features: </strong>All of 'em! DHCP, Firewall, NAT, Static Routing
<h3><span style="color:#3366ff;">More on fenced mode...</span></h3>
[caption id="attachment_528" align="alignnone" width="377" caption="A fenced vApp"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0081.png"><img class=" wp-image-528 " style="border-image:initial;border-width:1px;border-color:gray;border-style:solid;" title="fenced mode" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0081.png" alt="" width="377" height="402" /></a>[/caption]

[caption id="attachment_529" align="alignnone" width="446" caption="Fenced vApp Network Details"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0082.png"><img class=" wp-image-529  " style="border-image:initial;border-width:1px;border-color:gray;border-style:solid;" title="fenced network details" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0082.png" alt="" width="446" height="48" /></a>[/caption]

[caption id="attachment_533" align="alignnone" width="490" caption="Fence vApp Checkbox"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0087.png"><img class="size-full wp-image-533  " style="border-image:initial;border-width:1px;border-color:gray;border-style:solid;" title="fence vApp Checkbox" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0087.png" alt="" width="490" height="198" /></a>[/caption]

There is a checkbox in the UI to "Fence vApp." This option takes a 'bridged' network, and turns it into 'natRouted.' It will show the network as "Fenced" in the UI. The VMs within this vApp still have Org Network IPs, but a vShield device is placed in between the VMs and the Org network. So essentially, you have duplicate subnets on the internal and external sides of the vShield Edge device. As a network guy, this gives me heartburn. Here's a screenshot to demonstrate a potential problem using the "fence vApp" option:

[caption id="attachment_541" align="alignnone" width="490" caption="Anyone else see an issue here? I'll give you a hint: 102"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0089.png"><img class="size-full wp-image-541   " style="border-image:initial;border-width:1px;border-color:gray;border-style:solid;" title="fence woops" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0089.png" alt="" width="490" height="459" /></a>[/caption]

Basically the "test (fenced)" VM will never be able to communicate with "test" with the same IP address of 192.168.1.102. The reverse is not true because you will be communicating to the external "test (fenced)" address of 192.168.1.105.

My opinion? If you want to mask IP and MAC addresses, just use a natRouted type. No need to complexify when there is a perfect solution available.
<h3><span style="color:#3366ff;">Managing your vApp networks with PowerCLI</span></h3>
Bust out your <a href="http://www.vmware.com/support/vcd/doc/rest-api-doc-1.5-html/index.html" target="_blank">vCloud API Schema Reference</a>, because we're going to be playing with the <a href="http://www.vmware.com/support/vcd/doc/rest-api-doc-1.5-html/types/NetworkConfigSectionType.html" target="_blank">NetworkConfigSection</a> of the vApp!

To get you going, you'll want to retrieve the NetworkConfigSection of the vApp, which can be done like so:

[sourcecode language="powershell" wraplines="false"]
$networkConfigSection = (Get-CIVapp MyVApp).extensiondata.GetNetworkConfigSection()
[/sourcecode]

Now we can start to explore. Using the schema as our guide, we can drill down to actual config.

[sourcecode language="powershell" wraplines="false"]
$networkConfigSection.NetworkConfig[0].configuration
[/sourcecode]

Note the index at the end of NetworkConfig. Even if you only have 1 network in your vApp, you still have to specify an index of the collection or pipe to a where-object {$_.networkname -eq "NetworkName"}

<em>FenceMode</em> specifies the vApp network type, which can be one of: <strong>isolated, bridged, natRouted</strong>

<em>ParentNetwork</em> specifies the Org network that the vApp network is connected to. This doesn't apply to isolated networks, can you guess why? ;)

<em>Features</em> contains the DHCP, Firewall, NAT, and Static Routing configuration

<em>IPScope</em> contains the gateway, subnet, DNS, and IP Pool.

Pretty much all of this is modifiable (refer to the schema reference). Simply assign a new value to something and then run:

[sourcecode language="powershell" wraplines="false"]
$networkConfigSection.updateServerData()
[/sourcecode]

Let's create some new networks:
<h4><span style="color:#3366ff;">Isolated</span></h4>
[sourcecode language="powershell" wraplines="false"]
$mynetwork = new-object vmware.vimautomation.cloud.views.vappnetworkconfiguration
$mynetwork.networkName = &quot;MyIsolatedNetwork&quot;

$mynetwork.configuration = new-object vmware.vimautomation.cloud.views.networkconfiguration
$mynetwork.configuration.fencemode = &quot;isolated&quot;

$mynetwork.Configuration.IpScope = new-object vmware.vimautomation.cloud.views.ipscope
$mynetwork.Configuration.IpScope.gateway = &quot;192.168.3.1&quot;
$mynetwork.Configuration.IpScope.Netmask = &quot;255.255.255.0&quot;
$mynetwork.Configuration.IpScope.Dns1 = &quot;8.8.8.8&quot;

$mynetwork.Configuration.IpScope.ipranges = new-object vmware.vimautomation.cloud.views.ipranges
$mynetwork.Configuration.IpScope.IpRanges.IpRange = new-object vmware.vimautomation.cloud.views.iprange
$mynetwork.Configuration.IpScope.IpRanges.IpRange[0].startaddress = &quot;192.168.3.100&quot;
$mynetwork.Configuration.IpScope.IpRanges.IpRange[0].endaddress = &quot;192.168.3.200&quot;

$networkConfigSection = $vapp.ExtensionData.GetNetworkConfigSection()
$networkConfigSection.networkconfig += $mynetwork
$networkConfigSection.updateserverdata()
[/sourcecode]
<h4><span style="color:#3366ff;">Bridged</span></h4>
[sourcecode language="powershell" wraplines="false"]
$orgNetworkName = &quot;MyOrgNetwork&quot;
$orgNetwork = (Get-Org).extensiondata.networks.network | where {$_.name -eq $orgNetworkName}

$mynetwork = new-object vmware.vimautomation.cloud.views.vappnetworkconfiguration
$mynetwork.NetworkName = $orgNetworkName

$mynetwork.configuration = new-object vmware.vimautomation.cloud.views.networkconfiguration
$mynetwork.configuration.fencemode = &quot;bridged&quot;

$mynetwork.Configuration.ParentNetwork = New-Object vmware.vimautomation.cloud.views.reference
$mynetwork.Configuration.ParentNetwork.Href = $orgNetwork.href

$networkConfigSection = $vapp.ExtensionData.GetNetworkConfigSection()
$networkConfigSection.networkconfig += $mynetwork
$networkConfigSection.updateserverdata()

[/sourcecode]
<h4><span style="color:#3366ff;">natRouted</span></h4>
[sourcecode language="powershell" wraplines="false"]
$orgNetworkName = &quot;MyOrgNetwork&quot;
$orgNetwork = (Get-Org).extensiondata.networks.network | where {$_.name -eq $orgNetworkName}

$mynetwork = new-object vmware.vimautomation.cloud.views.vappnetworkconfiguration
$mynetwork.networkName = &quot;MyNatRoutedNetwork&quot;

$mynetwork.configuration = new-object vmware.vimautomation.cloud.views.networkconfiguration
$mynetwork.configuration.fencemode = &quot;natRouted&quot;

$mynetwork.Configuration.ParentNetwork = New-Object vmware.vimautomation.cloud.views.reference
$mynetwork.Configuration.ParentNetwork.Href = $orgNetwork.href

$mynetwork.Configuration.IpScope = new-object vmware.vimautomation.cloud.views.ipscope
$mynetwork.Configuration.IpScope.gateway = &quot;192.168.3.1&quot;
$mynetwork.Configuration.IpScope.Netmask = &quot;255.255.255.0&quot;
$mynetwork.Configuration.IpScope.Dns1 = &quot;8.8.8.8&quot;

$mynetwork.Configuration.IpScope.ipranges = new-object vmware.vimautomation.cloud.views.ipranges
$mynetwork.Configuration.IpScope.IpRanges.IpRange = new-object vmware.vimautomation.cloud.views.iprange
$mynetwork.Configuration.IpScope.IpRanges.IpRange[0].startaddress = &quot;192.168.3.100&quot;
$mynetwork.Configuration.IpScope.IpRanges.IpRange[0].endaddress = &quot;192.168.3.200&quot;

# With no firewall
$mynetwork.Configuration.features += new-object vmware.vimautomation.cloud.views.firewallservice
$mynetwork.Configuration.features[0].isenabled = $false

$networkConfigSection = $vapp.ExtensionData.GetNetworkConfigSection()
$networkConfigSection.networkconfig += $mynetwork
$networkConfigSection.updateserverdata()
[/sourcecode]

Note on the above, I explicitly told it to create the natRouted network without a firewall. By default, it will enable the firewall, but we'll talk about in the services section.
<h4><span style="color:#3366ff;">Removing Networks </span></h4>
(Extra handy if you want to remove an Org network reference from a vApp!)

[sourcecode language="powershell" wraplines="false"]
$removeNetworkName = &quot;MyNetwork&quot;
$networkConfigSection = $vapp.ExtensionData.GetNetworkConfigSection()
$networkConfigSection.networkconfig = $networkConfigSection.networkconfig | where {$_.networkname -ne $removeNetworkName}
$networkConfigSection.updateserverdata()
[/sourcecode]
<h4><span style="color:#3366ff;">Services</span></h4>
You'll find the services in the features collection here:

[sourcecode language="powershell" wraplines="false"]

$networkConfigSection.networkConfig[0].configuration.features

[/sourcecode]

Here's what the natRouted network features look like in Powershell. I did a gettype() afterwards to show you the object types for each service.

[caption id="attachment_560" align="alignnone" width="490" caption="natRouted network features"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0091.png"><img class="size-full wp-image-560 " style="border-image:initial;border-width:1px;border-color:gray;border-style:solid;" title="SNAG-0091" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0091.png" alt="" width="490" height="225" /></a>[/caption]

The <a href="http://www.vmware.com/support/vcd/doc/rest-api-doc-1.5-html/types/FirewallServiceType.html" target="_blank">Firewall Service</a>

This is really handy if you have a spreadsheet full of rules, or want to add an entire range of IPs (which The vCloud Director UI and API do not support that at this time.) As stated above, the firewall service is added by default in a new natRouted network. By default it's set to deny all inbound.

[sourcecode language="powershell" wraplines="false"]

$fwService = New-Object vmware.vimautomation.cloud.views.firewallservice
$fwService.DefaultAction = &quot;drop&quot;
$fwService.LogDefaultAction = $false
$fwService.IsEnabled = $true

#Add two rules
$fwService.FirewallRule = New-Object vmware.vimautomation.cloud.views.firewallrule
$fwService.FirewallRule += New-Object vmware.vimautomation.cloud.views.firewallrule

#First Rule
$fwService.FirewallRule[0].isenabled = $true
$fwService.FirewallRule[0].description = &quot;Web In&quot;

$fwService.FirewallRule[0].protocols = New-Object vmware.vimautomation.cloud.views.firewallRuleTypeProtocols
$fwService.FirewallRule[0].protocols.tcp = $true

$fwService.FirewallRule[0].policy = &quot;allow&quot;
$fwService.FirewallRule[0].port = &quot;80&quot;
$fwService.FirewallRule[0].destinationIp = &quot;192.168.2.10&quot;
$fwService.FirewallRule[0].sourceport = &quot;-1&quot;
$fwService.FirewallRule[0].sourceip = &quot;Any&quot;
$fwService.FirewallRule[0].direction = &quot;in&quot;

#Second Rule
$fwService.FirewallRule[1].isenabled = $true
$fwService.FirewallRule[1].description = &quot;SSH In&quot;

$fwService.FirewallRule[1].protocols = New-Object vmware.vimautomation.cloud.views.firewallRuleTypeProtocols
$fwService.FirewallRule[1].protocols.tcp = $true

$fwService.FirewallRule[1].policy = &quot;allow&quot;
$fwService.FirewallRule[1].port = &quot;22&quot;
$fwService.FirewallRule[1].destinationIp = &quot;192.168.2.10&quot;
$fwService.FirewallRule[1].sourceport = &quot;-1&quot;
$fwService.FirewallRule[1].sourceip = &quot;Any&quot;
$fwService.FirewallRule[1].direction = &quot;in&quot;

[/sourcecode]

If you are adding the firewall service to a new network, just paste the above code into the creation code. If you are adding to an existing network, you'll need some additional code. Warning, this currently deletes the old ruleset. This was meant to add firewall service where there was none before:

[sourcecode language="powershell" wraplines="false"]

$vappName = &quot;My vApp&quot;
$vappNetworkName = &quot;My vApp Network&quot;
$networkConfigSection = (Get-CIVApp $vappName).extensiondata.GetNetworkConfigSection()
$vAppNetwork = $networkConfigSection.NetworkConfig | where {$_.networkName -eq $vappNetworkName}
$vAppNetwork.Configuration.Features = $vAppNetwork.Configuration.Features | where {!($_ -is [vmware.vimautomation.cloud.views.firewallservice])}

# Remove the NAT service if there is nothing in there (auto mapped), otherwise the update will error out. :(
if (!($vAppNetwork.Configuration.Features | where {$_ -is [vmware.vimautomation.cloud.views.natservice]}).natrule[0].description)
{
 $vAppNetwork.Configuration.Features = $vAppNetwork.Configuration.Features | where {!($_ -is [vmware.vimautomation.cloud.views.natservice])}
}

# Add our new ruleset
$vAppNetwork.Configuration.Features += $fwService
$networkConfigSection.UpdateServerData()

[/sourcecode]

The <a href="http://www.vmware.com/support/vcd/doc/rest-api-doc-1.5-html/types/DhcpServiceType.html" target="_blank">DHCP Service</a>

[sourcecode language="powershell" wraplines="false"]

$dhcpService = New-Object vmware.vimautomation.cloud.views.dhcpservice
$dhcpService.DefaultLeaseTime = &quot;3600&quot;
$dhcpService.MaxLeaseTime = &quot;7200&quot;
$dhcpService.IsEnabled = $true

$dhcpService.IpRange = New-Object vmware.vimautomation.cloud.views.iprange
$dhcpService.IpRange.StartAddress = &quot;192.168.2.2&quot;
$dhcpService.IpRange.EndAddress = &quot;192.168.2.50&quot;

[/sourcecode]

Like the firewall service, DHCP is automatically added to a new a new network, but is set to disabled. If you want to use this code to add DHCP to an existing network, you'll just need to modify the existing service, or remove the old service and add this one. You will also need to omit the NAT service section when updating an existing network or you'll encounter an error.

The <a href="http://www.vmware.com/support/vcd/doc/rest-api-doc-1.5-html/types/NatServiceType.html" target="_blank">Nat Service</a>

If the NAT service box is checked (and it is by default), then the NatService will already be enabled and the NatService object will be there.

The <em>NatType</em> allows you to pick: ipTranslation and portForwarding. You must choose one or the other. :P

There is also a <em>policy</em>, which lets you choose what traffic will NAT (all, or inbound only): allowTraffic, or allowTrafficIn

Unfortunately, the NAT service is not yet fully implemented in the .NET SDK/PowerCLI, so you'll have to go straight REST API on this one...

Before we do, it's important to know the different NAT rule types:

<em>OneToOneBasicRule</em>: This simply maps an internal IP to an External IP. This is what I typically think of as a Static, or 1:1 NAT.

<em>OneToOneVmRule</em>: This maps a specific VM Nic to an external address. This is helpful if you change your internal IP and don't want to fiddle with NAT rules at the same time.

<em>PortForwardingRule</em>: Also a simple mapping rule to map a port on the external IP to an internal IP address.

<em>VmRule</em>: Odd naming, but it's port forwarding to the VM Nic, rather than an IP address.

Ok, so let's take a peek at our NAT rules using Powershell with the help of System.Net.Webclient:

[sourcecode language="powershell" wraplines="false"]&lt;/pre&gt;
$vApp = Get-CIVApp &quot;vapp network testing&quot;
$vAppNetworkName = &quot;natRouted&quot;

$netConf = $vapp.ExtensionData.GetNetworkConfigSection()
$netConfUri = $netconf.Href
$netConfType = $netconf.Type

$webclient = New-Object system.net.webclient
$webclient.Headers.Add(&quot;x-vcloud-authorization&quot;,$netconf.Client.SessionKey)
$webclient.Headers.Add(&quot;accept&quot;,$netConfType)
[xml]$netConfXML = $webclient.DownloadString($netConfUri)
&lt;pre&gt;

[/sourcecode]

Basically, we just downloaded the XML representation of the NetworkConfigSection, bypassing the .NET SDK and communicating directly to the vCloud API. REST APIs ROCK.

We can now drill down to our Nat Rules:

[sourcecode language="powershell" wraplines="false"]

($netConfXML.NetworkConfigSection.NetworkConfig | where {$_.networkname -eq $vAppNetworkName}).configuration.features.natservice.natrule

[/sourcecode]

This will return something like:

[caption id="attachment_569" align="alignnone" width="88" caption="Port Forwarding Rules"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0093.png"><img class="size-full wp-image-569" title="SNAG-0093" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0093.png" alt="" width="88" height="73" /></a>[/caption]

You'll need to drill down one level further to view the rules. I am going to use a foreach to show all of them:

[sourcecode language="powershell" wraplines="false"]

($netConfXML.NetworkConfigSection.NetworkConfig | where {$_.networkname -eq $vAppNetworkName}).configuration.features.natservice.natrule | foreach{$_.vmrule}

[/sourcecode]

...and you'll end up with something like this:

[caption id="attachment_570" align="alignnone" width="439" caption="Port forwarding rule details"]<a href="http://geekafterfive.files.wordpress.com/2012/04/snag-0094.png"><img class="size-full wp-image-570" title="SNAG-0094" src="http://geekafterfive.files.wordpress.com/2012/04/snag-0094.png" alt="" width="439" height="206" /></a>[/caption]

So, now we can GET our NAT rules, how to we SET them? We have to get a bit more complicated and use [System.Net.Webrequest]. This is an example of creating a new NAT rule for port translation. OneToOne rules will be a bit different, so again, this is purely for example. If you need something specific and can't figure it out, I'd be glad to help.

[sourcecode language="powershell" wraplines="false"]

$NatPort = &quot;53&quot;
$natRule = ($netConfXML.NetworkConfigSection.Networkconfig | where {$_.networkname -eq $vAppNetworkName}).configuration.features.natservice.natrule[0].clonenode(1)
$natRule.VmRule.ExternalPort = $NatPort
$natRule.VmRule.InternalPort = $NatPort
($netConfXML.NetworkConfigSection.Networkconfig | where {$_.networkname -eq $vAppNetworkName}).configuration.features.natservice.appendChild($NatRule)

$request = [System.Net.WebRequest]::Create($netConfUri);
$request.Headers.Add(&quot;x-vCloud-authorization&quot;,$netconf.Client.SessionKey)
$request.Accept=&quot;application/vnd.vmware.vcloud.task+xml&quot;
$request.Method=&quot;PUT&quot;
$request.ContentType = $netConfType

$postData = $netConfXML.outerxml
#adding strings to xml puts in silly newlines.
$xmlString = $postData.replace(&quot;&#xA;&quot;,&quot;&quot;)
[byte[]]$xmlEnc = [System.Text.Encoding]::UTF8.GetBytes($xmlString)
$request.ContentLength = $xmlEnc.length
[System.IO.Stream]$requestStream = $request.GetRequestStream()
$requestStream.write($xmlEnc, 0, $xmlEnc.Length)
$requestStream.Close()
$response = $request.GetResponse()
$responseStream = $response.getResponseStream()
$streamReader = new-object System.IO.StreamReader($responseStream)
$result = $streamReader.ReadtoEnd()
$streamReader.close()
$response.close()

[/sourcecode]

&nbsp;

The <a href="http://www.vmware.com/support/vcd/doc/rest-api-doc-1.5-html/types/StaticRoutingServiceType.html" target="_blank">StaticRouting Service</a>

The Static Routing service controls routing within the vShield Edge.

[sourcecode language="powershell" wraplines="false"]

$routeService = New-Object vmware.vimautomation.cloud.views.staticroutingservice
$routeService.IsEnabled = $true

$routeService.StaticRoute = New-Object vmware.vimautomation.cloud.views.staticroute
$routeService.StaticRoute[0].name = &quot;test&quot;
$routeService.StaticRoute[0].network = &quot;192.168.1.0/24&quot;
$routeService.StaticRoute[0].nexthopip = &quot;192.168.2.1&quot;
$routeService.StaticRoute[0].interface = &quot;External&quot;

[/sourcecode]

Again, if you are adding this to an existing network, you'll need to omit the Nat Service, or you will encounter an error.

&nbsp;
<h3><span style="color:#3366ff;">Wrap up...</span></h3>
WHEW, that's all I have for now. I like answering questions, so please post in the comments or get me on twitter.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>450</wp:post_id>
  <wp:post_date>2012-04-24 16:53:35</wp:post_date>
  <wp:post_date_gmt>2012-04-24 20:53:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>deepdive-vcloud-vapp-networks</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="isolated-networks"><![CDATA[isolated networks]]></category>
  <category domain="post_tag" nicename="nat"><![CDATA[NAT]]></category>
  <category domain="post_tag" nicename="natrouted"><![CDATA[NatRouted]]></category>
  <category domain="post_tag" nicename="networking"><![CDATA[networking]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="static-routing"><![CDATA[Static Routing]]></category>
  <category domain="post_tag" nicename="vapp"><![CDATA[vApp]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-api"><![CDATA[vCloud API]]></category>
  <category domain="post_tag" nicename="vcloud-director"><![CDATA[vCloud Director]]></category>
  <category domain="post_tag" nicename="vcloud-vapp"><![CDATA[vcloud vapp]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post! (Finally): Deepdive: #vCloud vApp Networks http://wp.me/p1hst8-7g #PowerCLI]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0089.png";s:6:"images";a:13:{s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0077.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0077.png";s:5:"width";s:3:"594";s:6:"height";s:3:"293";s:4:"type";s:5:"image";s:4:"area";s:6:"174042";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0085.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0085.png";s:5:"width";s:3:"947";s:6:"height";s:3:"105";s:4:"type";s:5:"image";s:4:"area";s:5:"99435";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0079.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0079.png";s:5:"width";s:3:"601";s:6:"height";s:3:"475";s:4:"type";s:5:"image";s:4:"area";s:6:"285475";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0084.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0084.png";s:5:"width";s:3:"950";s:6:"height";s:3:"108";s:4:"type";s:5:"image";s:4:"area";s:6:"102600";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0080.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0080.png";s:5:"width";s:3:"636";s:6:"height";s:3:"476";s:4:"type";s:5:"image";s:4:"area";s:6:"302736";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0083.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0083.png";s:5:"width";s:3:"948";s:6:"height";s:2:"97";s:4:"type";s:5:"image";s:4:"area";s:5:"91956";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0081.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0081.png";s:5:"width";s:3:"471";s:6:"height";s:3:"503";s:4:"type";s:5:"image";s:4:"area";s:6:"236913";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0082.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0082.png";s:5:"width";s:3:"942";s:6:"height";s:3:"103";s:4:"type";s:5:"image";s:4:"area";s:5:"97026";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0087.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0087.png";s:5:"width";s:3:"813";s:6:"height";s:3:"329";s:4:"type";s:5:"image";s:4:"area";s:6:"267477";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0089.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0089.png";s:5:"width";s:3:"604";s:6:"height";s:3:"567";s:4:"type";s:5:"image";s:4:"area";s:6:"342468";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0091.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0091.png";s:5:"width";s:3:"839";s:6:"height";s:3:"386";s:4:"type";s:5:"image";s:4:"area";s:6:"323854";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0093.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0093.png";s:5:"width";s:2:"88";s:6:"height";s:2:"73";s:4:"type";s:5:"image";s:4:"area";s:4:"6424";s:9:"file_path";s:0:"";}s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0094.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/04/snag-0094.png";s:5:"width";s:3:"439";s:6:"height";s:3:"206";s:4:"type";s:5:"image";s:4:"area";s:5:"90434";s:9:"file_path";s:0:"";}}s:6:"videos";a:0:{}s:11:"image_count";s:2:"13";s:6:"author";s:7:"9088041";s:7:"blog_id";s:8:"18937350";s:9:"mod_stamp";s:19:"2012-04-24 20:53:35";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"194891866808922113";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>306</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-07-16 15:00:55</wp:comment_date>
    <wp:comment_date_gmt>2012-07-16 19:00:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Mike, The "SyslogServerIp2" is just a string, so you can set it like this: 
[sourcecode language="powershell"]
$OrgNetwork.ExtensionData.Configuration.SyslogServerSettings.SyslogServerIp2 = &quot;192.168.0.100&quot;

$orgnetwork.UpdateServerData()
[/sourcecode]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>300</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342465256</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342465256.9028";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>273</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-06-27 20:31:20</wp:comment_date>
    <wp:comment_date_gmt>2012-06-28 00:31:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There is a bug regarding NAT in PowerCLI. You will need to remove the NAT section of the network config in order to update it. The code to accomplish this is in the article above. Good luck!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>272</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340843480.9233";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340843480</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>272</wp:comment_id>
    <wp:comment_author><![CDATA[Seonix]]></wp:comment_author>
    <wp:comment_author_email>simonwhite87@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>122.152.148.234</wp:comment_author_IP>
    <wp:comment_date>2012-06-27 19:45:06</wp:comment_date>
    <wp:comment_date_gmt>2012-06-27 23:45:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Jake,

Very helpful article, however, wondering if you can work out what's gone wrong with my firewall script. I used parts of your script to create a script to add firewall rules to a specific vApp network. It was working fine.
Now I've modified so I can apply settings to several networks in the same vApp. It's failing, but it's now also failing with the previous working copy. The error I'm getting is:
Exception calling "UpdateServerData" with "0" Arguments: "Bad request  - Unexpected JAXB Exception  - cvc-complex-type.2.4.b: The content of element 'NatRule' is not complete. One of '{"http://www.vmware.com/vcloud/v1.5":VCloudExtension, "http://www.vmware.com/vcloud/v1.5":Description, "http://www.vmware.com/vcloud/v1.5":OneToOneBasicRule, "http://www.vmware.com/vcloud/v1.5":OneToOneVmRule, "http://www.vmware.com/vcloud/v1.5":PortForwardingRule, "http://www.vmware.com/vcloud/v1.5":VmRule}' is expected."

I can only find two records of this error on VMware forums with no suggested solution. Any ideas?

Seonix]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340843483</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340840706.4278";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>211</wp:comment_id>
    <wp:comment_author><![CDATA[Magnus]]></wp:comment_author>
    <wp:comment_author_email>magnus.andersson@qliktech.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>193.138.74.226</wp:comment_author_IP>
    <wp:comment_date>2012-05-28 04:06:09</wp:comment_date>
    <wp:comment_date_gmt>2012-05-28 08:06:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Nice article. Thanx for the detailed PowerCLI examples.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1338192369.9885";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1338215741</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>176</wp:comment_id>
    <wp:comment_author><![CDATA[Rajesh]]></wp:comment_author>
    <wp:comment_author_email>rajeshn123@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>168.159.160.58</wp:comment_author_IP>
    <wp:comment_date>2012-04-25 06:55:45</wp:comment_date>
    <wp:comment_date_gmt>2012-04-25 10:55:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks Jake. Understanding networkig in vcd is itself difficult. Now being able to configure the same via PCLI is simply mind blowing. Thanks for this great effort. Will now be able to automate much better.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1335384145.4389";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1335384145</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1335351345.513";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>313</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-07-17 16:49:16</wp:comment_date>
    <wp:comment_date_gmt>2012-07-17 20:49:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yeah, My thought was add the second IP to the global settings, sync the org networks you want, then remove from global settings. Again, that's a workaround until I can write you some raw REST API code.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>312</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342558157</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342558157.3173";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>311</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-07-17 15:35:50</wp:comment_date>
    <wp:comment_date_gmt>2012-07-17 19:35:50</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Interesting. I'll dig into it tonight...In the meantime, there is a SyncSyslogServerSettings() method that will sync your global vCloud syslog settings to the org network. You could add the second server IP there and then run this:
[sourcecode language="powershell"]
$orgNetwork.extensiondata.SyncSyslogServerSettings()
[/sourcecode]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>310</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342553751</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342553751.0714";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>312</wp:comment_id>
    <wp:comment_author><![CDATA[Mike]]></wp:comment_author>
    <wp:comment_author_email>mjordan@ewh.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>69.63.128.15</wp:comment_author_IP>
    <wp:comment_date>2012-07-17 16:46:44</wp:comment_date>
    <wp:comment_date_gmt>2012-07-17 20:46:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for the help. Pushing the global settings won't work as I want to only set a custom second destination on a select few firewalls.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>311</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342558005</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342558005.6188";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>204</wp:comment_id>
    <wp:comment_author><![CDATA[yoyoclouds]]></wp:comment_author>
    <wp:comment_author_email>yohan.wadia@patni.com</wp:comment_author_email>
    <wp:comment_author_url>http://yoyoclouds.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>203.189.177.135</wp:comment_author_IP>
    <wp:comment_date>2012-05-21 22:54:35</wp:comment_date>
    <wp:comment_date_gmt>2012-05-22 02:54:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Excellent Article.. well put through !!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>29987401</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337664361</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337655275.7756";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"yoyoclouds";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1337664361.824";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>205</wp:comment_id>
    <wp:comment_author><![CDATA[yoyoclouds]]></wp:comment_author>
    <wp:comment_author_email>yohan.wadia@patni.com</wp:comment_author_email>
    <wp:comment_author_url>http://yoyoclouds.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>203.189.177.135</wp:comment_author_IP>
    <wp:comment_date>2012-05-21 22:56:33</wp:comment_date>
    <wp:comment_date_gmt>2012-05-22 02:56:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Reblogged this on <a href="http://yoyoclouds.wordpress.com/2012/05/22/363/" rel="nofollow">yoyoclouds</a>.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>29987401</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>reblog_ping</wp:meta_key>
      <wp:meta_value>1</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337655394.1427";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"yoyoclouds";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337664461.0186";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337664460</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>308</wp:comment_id>
    <wp:comment_author><![CDATA[Mike]]></wp:comment_author>
    <wp:comment_author_email>mjordan@ewh.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>69.63.128.15</wp:comment_author_IP>
    <wp:comment_date>2012-07-17 14:24:51</wp:comment_date>
    <wp:comment_date_gmt>2012-07-17 18:24:51</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[So the set worked fine but the UpdateServerData command for $OrgNetwork fails as this does not have that method. It does exist for $OrgNetwork.ExtensionData but this fails with "Unsupported Media Type"]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>306</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342549494</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342549495.3532";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>310</wp:comment_id>
    <wp:comment_author><![CDATA[Mike]]></wp:comment_author>
    <wp:comment_author_email>mjordan@ewh.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>69.63.128.15</wp:comment_author_IP>
    <wp:comment_date>2012-07-17 15:05:08</wp:comment_date>
    <wp:comment_date_gmt>2012-07-17 19:05:08</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[PowerCLI C:\&gt; $OrgNetwork.ExtensionData.UpdateServerData()
Exception calling "UpdateServerData" with "0" argument(s): "Unsupported Media Type"
At line:1 char:43
+ $OrgNetwork.ExtensionData.UpdateServerData &lt;&lt;&lt;&lt; ()
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : DotNetMethodException]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342551912</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342551912.8868";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>309</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-07-17 14:30:20</wp:comment_date>
    <wp:comment_date_gmt>2012-07-17 18:30:20</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes Sorry, it should have been $OrgNetwork.ExtensionData.UpdateServerData()

Any other information with the error besides the unsupported media message?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>308</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342549821</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342549821.2643";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>300</wp:comment_id>
    <wp:comment_author><![CDATA[Mike]]></wp:comment_author>
    <wp:comment_author_email>mjordan@ewh.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>69.63.128.15</wp:comment_author_IP>
    <wp:comment_date>2012-07-13 17:07:42</wp:comment_date>
    <wp:comment_date_gmt>2012-07-13 21:07:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I'm new to PS so bear with me please. I need to add a second Syslog destination for a single NAT Routed network. I have a default destination for all of them set by vCD but a select few need to be able to send to a second collector. I can drill down to retrieve the value

$OrgNetwork = (Get-OrgNetwork vCDNI_XXX)
$OrgNetwork.ExtensionData.Configuration.SyslogServerSettings.SyslogServerIp2

But can/how would I set this. Much thanks ahead of time for any response.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342213956</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342213663.2293";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>526</wp:comment_id>
    <wp:comment_author><![CDATA[VCP-IaaS Study Notes: Section 4.3 &laquo; Virtual-Ice]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://vmice.wordpress.com/2012/09/16/vcp-iaas-study-notes-section-4-3/</wp:comment_author_url>
    <wp:comment_author_IP>72.232.7.95</wp:comment_author_IP>
    <wp:comment_date>2012-09-16 17:50:33</wp:comment_date>
    <wp:comment_date_gmt>2012-09-16 21:50:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] blog-post by Jake Robinson at geekafterfive.com about vApp networks is a recommended [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1347832233.9144039154052734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1347832296</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>517</wp:comment_id>
    <wp:comment_author><![CDATA[Geoff]]></wp:comment_author>
    <wp:comment_author_email>geoff.browne@thalesgroup.com.au</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>122.152.148.234</wp:comment_author_IP>
    <wp:comment_date>2012-09-02 22:27:40</wp:comment_date>
    <wp:comment_date_gmt>2012-09-03 02:27:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks for your article, I have a question about the NAT-Routed networks. Do I need to buy vShield Edge licensing to enable this feature, or does a type of vShield Edge come with vCLoud Director?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1346671582</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1346639260.4112470149993896484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>518</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>200.2.132.70</wp:comment_author_IP>
    <wp:comment_date>2012-09-03 07:25:57</wp:comment_date>
    <wp:comment_date_gmt>2012-09-03 11:25:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[vShield is required for vCloud Director. I am by no means a licensing expert, but I don't think vCD is sold without it.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>517</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1346671561.87524890899658203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1346671561</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>833</wp:comment_id>
    <wp:comment_author><![CDATA[ab]]></wp:comment_author>
    <wp:comment_author_email>balajiannamalai@hotmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>209.234.147.12</wp:comment_author_IP>
    <wp:comment_date>2013-05-16 01:44:54</wp:comment_date>
    <wp:comment_date_gmt>2013-05-16 05:44:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great article for explaining vApp Networks. I am facing a problem while adding an "isolated" network to vApp. Getting exception thrown with message "Unable to create network "mynetwork". Invalid network parameter: Subnet mask cannot be empty." Below is the code,

                                VAppNetworkConfigurationType vAppNetworkConfigurationType = new VAppNetworkConfigurationType();
                                vAppNetworkConfigurationType.networkName = "myNetwork";
                                vAppNetworkConfigurationType.Configuration = new NetworkConfigurationType();
                                vAppNetworkConfigurationType.Configuration.FenceMode = "isolated";
                                vAppNetworkConfigurationType.Configuration.IpScope = new IpScopeType();
                                vAppNetworkConfigurationType.Configuration.IpScope.Gateway = "192.168.2.1";
                                vAppNetworkConfigurationType.Configuration.IpScope.Netmask = "255.255.255.0";
                                IpRangeType ipRange = new IpRangeType();
                                ipRange.StartAddress = "192.168.2.100";
                                ipRange.EndAddress = "192.168.2.199";
                                vAppNetworkConfigurationType.Configuration.IpScope.IpRanges = new IpRangesType();
                                vAppNetworkConfigurationType.Configuration.IpScope.IpRanges.IpRange = new IpRangeType[]{ipRange};
                                NetworkConfigSectionType networkConfigSectionType = new NetworkConfigSectionType();
                                networkConfigSectionType.NetworkConfig = new VAppNetworkConfigurationType[] {vAppNetworkConfigurationType};
                                networkConfigSectionType.Info = new Msg_Type();
                                Task task_net = vApp.UpdateSection(networkConfigSectionType);
                                task_net.WaitForTask(timeout);  &lt;&lt;&lt; Exception is thrown in this line]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368703737</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368683094.48676300048828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>843</wp:comment_id>
    <wp:comment_author><![CDATA[Yves Sandfort]]></wp:comment_author>
    <wp:comment_author_email>y.sandfort@comdivision.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.comdivision.com</wp:comment_author_url>
    <wp:comment_author_IP>8.28.150.80</wp:comment_author_IP>
    <wp:comment_date>2013-06-05 17:34:03</wp:comment_date>
    <wp:comment_date_gmt>2013-06-05 21:34:03</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[On the NAT piece I get an error 406 Not Acceptable when I try to collect the XML with vCloud 5.1 any idea on why this might be?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1370493806</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1370493807.4249179363250732421875;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1370468043.9854500293731689453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>838</wp:comment_id>
    <wp:comment_author><![CDATA[James Bowling]]></wp:comment_author>
    <wp:comment_author_email>james.bowling@vsential.com</wp:comment_author_email>
    <wp:comment_author_url>http://vsential.com</wp:comment_author_url>
    <wp:comment_author_IP>66.194.86.210</wp:comment_author_IP>
    <wp:comment_date>2013-05-20 16:24:00</wp:comment_date>
    <wp:comment_date_gmt>2013-05-20 20:24:00</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Jake, I see above how this works for vApp networks but how can this be modified to create OrgNetworks?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1369081490</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369081441.316113948822021484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"vsential";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>839</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>166.147.102.82</wp:comment_author_IP>
    <wp:comment_date>2013-05-20 16:28:45</wp:comment_date>
    <wp:comment_date_gmt>2013-05-20 20:28:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Yes, It's pretty much the same, except 5.1 has "Edge Gateways." 5.1 also introduces OrgVSE networks. At any rate, I am working on an Org level version of this deepdive, so if there is something specific you need, now might be the perfect time to ask! :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>838</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1369081725</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369081726.1194870471954345703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>840</wp:comment_id>
    <wp:comment_author><![CDATA[vsential]]></wp:comment_author>
    <wp:comment_author_email>jbowling@vsential.com</wp:comment_author_email>
    <wp:comment_author_url>http://vsential.com</wp:comment_author_url>
    <wp:comment_author_IP>66.194.86.210</wp:comment_author_IP>
    <wp:comment_date>2013-05-20 16:31:06</wp:comment_date>
    <wp:comment_date_gmt>2013-05-20 20:31:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Just looking for methods to create OrgNetworks in 5.1, nothing specific other than that.  Thanks!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>839</wp:comment_parent>
    <wp:comment_user_id>20311819</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1369164469</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369164470.0923879146575927734375;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369081866.7533519268035888671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"vsential";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>844</wp:comment_id>
    <wp:comment_author><![CDATA[Yves Sandfort]]></wp:comment_author>
    <wp:comment_author_email>y.sandfort@comdivision.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.comdivision.com</wp:comment_author_url>
    <wp:comment_author_IP>64.134.31.34</wp:comment_author_IP>
    <wp:comment_date>2013-06-06 00:22:13</wp:comment_date>
    <wp:comment_date_gmt>2013-06-06 04:22:13</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I could get the read of NAT settings working by adding the ;version=5.1 to the webclient.

But when I try to write the settings I get again error 406, I tried the version setting, but that seems not to help...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>843</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1370493809.67156696319580078125;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1370493809</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1370492533.8243539333343505859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>How to be a PowerCLI Ninja</title>
  <link>http://geekafterfive.com/2012/03/13/how-to-be-a-powercli-ninja/</link>
  <pubDate>Tue, 13 Mar 2012 17:31:47 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=453</guid>
  <description></description>
  <content:encoded><![CDATA[<p style="text-align:left;"><a href="http://geekafterfive.files.wordpress.com/2012/03/ryu.png"><img class="size-full wp-image-492 aligncenter" title="ryu" src="http://geekafterfive.files.wordpress.com/2012/03/ryu.png" alt="" width="256" height="256" /></a>Dean (aka <a href="https://twitter.com/#!/Danger0u5" target="_blank">@Danger0u5</a>) mentioned on twitter that he'd like to be a Powershell/PowerCLI ninja someday. (I think he's already on his way. :)) It got me thinking about how I got started with Powershell and what my core success factors were with learning it. These tips can apply to learning almost anything, really!</p>

<h3>1. Make it a priority.</h3>
My mentor and <a href="https://twitter.com/#!/odayp" target="_blank">Bluelock CTO Pat O'Day</a> (maybe unbeknownst to him :)), caught me once saying "I wish I had the time..." Very understanding to my dilemma, he said "You will <em>never</em> have enough time. It's about priority." That simple fact might be obvious to a lot of people, but it absolutely changed my views about time vs. priority. "I don't have time" doesn't exist for me anymore. It's all about where it lands in the list. "Hey Jake, can you {Insert task here}?" "I can do that, but lets figure out the priority."

The point here? You have to decide the priority of learning this new skill. Ask yourself "How important to me is learning Powershell/PowerCLI?" I can tell you from experience it is <em>well worth it</em>, but you need to decide for yourself. After that, it will be fairly simple to fit it into your list.
<h3>2. Focus on a specific task.</h3>
I learned Powershell because I had an idea. A need. I wanted learn to Powershell to accomplish something very specific. So, I mapped out in my head the various bits of information that I would need, and then learned how to get that information with Powershell. Then it was just math and formatting. There are a lot of great books, blogs and online training regarding Powershell/PowerCLI, but if you don't have a specific need, you aren't going to retain the information.

I've been struggling learning Ruby (and Rails). I <em>really</em> want to learn Ruby (and Rails). The problem is, I don't have a specific need. I've been through <a href="http://tryruby.org" target="_blank">tryruby.org</a> and <a href="http://railsforzombies.org/" target="_blank">Rails for Zombies</a>, which are both GREAT free tools to learn Ruby (and Rails), but the moment I leave the page, it's gone. There are a few reasons I want to learn Ruby, but again, nothing that is specific enough, or high enough priority.

For those struggling to learn Powershell/PowerCLI, don't be discouraged. Focus on a very specific need. For those struggling to find a specific need, talk to people around your office. Groans and sighs are good places to start. Listen for phrases like "It's going to take me 12 hours to put this data in." Another good place to look for inspiration is the forums. Look for tumbleweed type questions (those that have somehow slipped the view of <a href="http://www.lucd.info/" target="_blank">Luc Dekens</a>. ;)) I'll lurk the forums once in a while looking for things I find interesting. Even if they are already answered, I can look at how the problem was solved, and see if I would have answered it the same way.
<h3>3. Don't be afraid to ask for help, but know how to ask good questions.</h3>
It surprises me how often I answer my own questions just by typing it up, and reading it as if I were answering for someone else. When I ask a question, I really try to understand what information someone would need to answer it. I want to equip the answerer with enough information to get me the right answer the first time. There can be <em>too little</em> information, but worse there can be <em>too much</em> information. Understanding the real issue is the key to getting a correct answer.

Back in my telecom days, there was a tag always attached to a piece of equipment that, in large bold font said "DO NOT ASSUME ANYTHING." I always had a chuckle about it, but it's a life rule Engineers should live by. Don't assume thing A doesn't work because of thing B. Be ready to defend it with facts. When it comes to asking questions, don't assume that DNS is working properly, or that network cable is attached and it's not a crossover, or everything is powered on, or.............. you get the point. ;)
<h3>4. Share what you know.</h3>
The question my mentor asked that I responded with "I just haven't had the time" was about my involvement with the local tech community. My other excuse was "I don't really get anything out of it." That, of course, was also a poor response. ;) He went on to tell the story of the birth of Bluelock. Actually, the story of how the founders of Bluelock first met. Not surprisingly, it was a small technology group.

He recommended that I make it a priority (see tip 1), but also start sharing what I know. I countered with the fact that there are EXPERTS out there who know way more than I do, and what could I possibly have to offer the community. He pointed out that everyone is a sum of their own unique experiences. No two people live exactly the same life. Whether you consider yourself an expert or not, you bring a uniqueness no one else has. Don't be afraid to share it. You could turn out to be an expert in someone else's eyes.

So if you've been on the fence about learning PowerCLI (Powershell), Ruby, or anything else, think about these principles and how they apply to you!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>453</wp:post_id>
  <wp:post_date>2012-03-13 13:31:47</wp:post_date>
  <wp:post_date_gmt>2012-03-13 17:31:47</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>how-to-be-a-powercli-ninja</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="bluelock"><![CDATA[Bluelock]]></category>
  <category domain="post_tag" nicename="learning"><![CDATA[Learning]]></category>
  <category domain="post_tag" nicename="learning-ruby"><![CDATA[Learning Ruby]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="category" nicename="powershell"><![CDATA[Powershell]]></category>
  <category domain="post_tag" nicename="powershell-2"><![CDATA[powershell]]></category>
  <category domain="post_tag" nicename="rails"><![CDATA[Rails]]></category>
  <category domain="post_tag" nicename="ruby"><![CDATA[Ruby]]></category>
  <category domain="post_tag" nicename="windows-powershell"><![CDATA[Windows Powershell]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"179620819163545600";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>145</wp:comment_id>
    <wp:comment_author><![CDATA[Josh Atwell (@Josh_Atwell)]]></wp:comment_author>
    <wp:comment_author_email>Josh_Atwell@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/Josh_Atwell</wp:comment_author_url>
    <wp:comment_author_IP>64.102.249.8</wp:comment_author_IP>
    <wp:comment_date>2012-03-13 13:36:35</wp:comment_date>
    <wp:comment_date_gmt>2012-03-13 17:36:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Fantastic post!  Sounds like you have a solid mentor there as well!  Clearly you've made your mark on the community by making learning and sharing a priority!  Keep up the great work!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1331660195.3319";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1792428937/d208c39f-59c7-4888-9462-c624eb2b37d2_normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>293529249</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1331661117</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1331661117.5309";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>146</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>74.203.148.253</wp:comment_author_IP>
    <wp:comment_date>2012-03-13 13:59:41</wp:comment_date>
    <wp:comment_date_gmt>2012-03-13 17:59:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks Josh. ;) Hopefully you recognize yourself in that post! Thanks for all you do in the community!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>145</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1331661581</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1331661581.8319";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>160</wp:comment_id>
    <wp:comment_author><![CDATA[Dan Jellz (@danjellz)]]></wp:comment_author>
    <wp:comment_author_email>danjellz@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/danjellz</wp:comment_author_url>
    <wp:comment_author_IP>66.189.15.138</wp:comment_author_IP>
    <wp:comment_date>2012-03-14 08:04:40</wp:comment_date>
    <wp:comment_date_gmt>2012-03-14 12:04:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great post...very true. Really learning any type of scripting/programming language starts with a real need. Thank you!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1331726680.5508";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1223949079/dan_twitter_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>169265044</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1331736192</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Import an OVF from your desktop to a vCloud Org Catalog</title>
  <link>http://geekafterfive.com/2012/05/03/import-an-ovf-from-your-desktop-to-a-vcloud-org-catalog/</link>
  <pubDate>Thu, 03 May 2012 15:42:56 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=582</guid>
  <description></description>
  <content:encoded><![CDATA[Have you downloaded a really cool appliance in OVF and want to quickly upload it to your vCloud Director Org? The Web UI would be one way to do it, but I sometimes run into issues with the java uploader.

Here's a simple PowerCLI method to get your OVF appliance from your desktop into your Org:

[sourcecode language="powershell"]

$ovfPath = &quot;C:\users\me\desktop\MyCoolAppliance.ovf&quot;

$orgVdc = Get-OrgVdc &quot;My Org vDC&quot;

$catalog = Get-Catalog &quot;My Catalog&quot;

Import-CIVAppTemplate -SourcePath $ovfPath -OrgVdc $orgVdc -Catalog $catalog

[/sourcecode]

As a subjective observation, it seems to run a lot faster than the Java uploader, but pending a real speed test, it's just another way to upload an OVF into your catalog. :D]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>582</wp:post_id>
  <wp:post_date>2012-05-03 11:42:56</wp:post_date>
  <wp:post_date_gmt>2012-05-03 15:42:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>import-an-ovf-from-your-desktop-to-a-vcloud-org-catalog</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="import"><![CDATA[import]]></category>
  <category domain="post_tag" nicename="import-civapptemplate"><![CDATA[Import-CIVappTemplate]]></category>
  <category domain="post_tag" nicename="ovf"><![CDATA[ovf]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-director"><![CDATA[vCloud Director]]></category>
  <category domain="post_tag" nicename="vcloud-vapp-template"><![CDATA[vcloud vapp template]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: Import an OVF from your desktop to a #vCloud Org Catalog #PowerCLI]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"198075192323481602";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Time Reporting with Outlook and Powershell</title>
  <link>http://geekafterfive.com/2012/05/18/time-reporting-with-outlook-and-powershell/</link>
  <pubDate>Fri, 18 May 2012 19:06:01 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=587</guid>
  <description></description>
  <content:encoded><![CDATA[Do you work at a company that requires you to report your time?

Are you curious how much time you are spending on different projects or duties?

Hate having a separate tool just for time tracking and reporting? (me too!)

My Outlook calendar makes for easy time tracking. It's on my iPhone, my desktop, my laptop, my home PC...but there are no reporting capabilities that I am aware of, and I am not going to buy an app or plugin that I have to manage.

What if I wanted to find out how much time the rest of my team is spending on something like "host maintenance?" They have their calendar shared with me, and I can see their categories, but I would still have to manually add up their time, force them to do double data entry to another app, or something else that requires double-data-entry.

I wrote this Powershell solution to figure out how much time a group of people were spending on "Sales Engineering," and made a couple modifications for this post to allow different users and categories.
<h2>Features:</h2>
<h4>Category</h4>
use <strong>-category</strong> to add up time on. Only single category supported.
<h4>Multiple calendars</h4>
use <strong>-calendars</strong> to enter a single name like "Jake Robinson" or multiple in an array: @("Jake Robinson", "Alan Renouf")
<h4>Date Range</h4>
By default the current week M-F will be reported. If you need something a little different, you can use <strong>-pickDates</strong> to bring up a graphical calendar to each start and end date (click the date then press enter). You can also use <strong>-rangeStart</strong> and <strong>-rangeEnd</strong> with something like this "5/24/2012"
<h4>HTML or CSV output</h4>
Outputs to HTML report by default, or use <strong>-csv</strong> to output to comma separated value file.
<h2>Screenshots!</h2>
[caption id="attachment_593" align="alignnone" width="490"]<a href="http://geekafterfive.files.wordpress.com/2012/05/snag-0098.png"><img class="size-full wp-image-593" title="My Calendar" src="http://geekafterfive.files.wordpress.com/2012/05/snag-0098.png" alt="" width="490" height="283" /></a> My Calendar[/caption]

[caption id="attachment_592" align="alignnone" width="412"]<a href="http://geekafterfive.files.wordpress.com/2012/05/snag-0099.png"><img class="size-full wp-image-592" title="Categories" src="http://geekafterfive.files.wordpress.com/2012/05/snag-0099.png" alt="" width="412" height="441" /></a> Categories[/caption]

[caption id="attachment_591" align="alignnone" width="490"]<a href="http://geekafterfive.files.wordpress.com/2012/05/snag-0101.png"><img class="size-full wp-image-591" title="Example with pickDates" src="http://geekafterfive.files.wordpress.com/2012/05/snag-0101.png" alt="" width="490" height="218" /></a> Example with pickDates[/caption]

[caption id="attachment_590" align="alignnone" width="490"]<a href="http://geekafterfive.files.wordpress.com/2012/05/snag-0103.png"><img class="size-full wp-image-590" title="HTML report" src="http://geekafterfive.files.wordpress.com/2012/05/snag-0103.png" alt="" width="490" height="334" /></a> HTML report[/caption]

[caption id="attachment_594" align="alignnone" width="490"]<a href="http://geekafterfive.files.wordpress.com/2012/05/snag-0105.png"><img class="size-full wp-image-594" title="Example using rangeStart and rangeEnd to CSV" src="http://geekafterfive.files.wordpress.com/2012/05/snag-0105.png" alt="" width="490" height="79" /></a> Example using rangeStart and rangeEnd to CSV[/caption]

[caption id="attachment_589" align="alignnone" width="269"]<a href="http://geekafterfive.files.wordpress.com/2012/05/snag-0104.png"><img class="size-full wp-image-589" title="CSV output" src="http://geekafterfive.files.wordpress.com/2012/05/snag-0104.png" alt="" width="269" height="183" /></a> CSV output[/caption]
<h2>...and here's the script!</h2>
[sourcecode language="powershell"]

#
# OutlookTimeReport.ps1
# Jake Robinson
# v1.2
#
#
#
#

param ( [DateTime] $rangeStart = (get-date -hour 0 -minute 0 -second 0).AddDays(-(get-date).DayOfWeek.value__),
 [DateTime] $rangeEnd = (get-date -hour 23 -minute 59 -second 59).AddDays(7-(get-date).DayOfWeek.value__),
 [String] $category,
 [String] $calendars,
 [switch] $csv,
 [switch] $pickdates)

function pick-date()
{
 $objForm = New-Object Windows.Forms.Form

$objForm.Text = &quot;Select a Date&quot;
 $objForm.Size = New-Object Drawing.Size @(190,190)
 $objForm.StartPosition = &quot;CenterScreen&quot;

$objForm.KeyPreview = $True

$objForm.Add_KeyDown({
 if ($_.KeyCode -eq &quot;Enter&quot;)
 {
 $dtmDate=$objCalendar.SelectionStart
 $objForm.Close()
 }
 })

$objForm.Add_KeyDown({
 if ($_.KeyCode -eq &quot;Escape&quot;)
 {
 $objForm.Close()
 }
 })

$objCalendar = New-Object System.Windows.Forms.MonthCalendar
 $objCalendar.ShowTodayCircle = $False
 $objCalendar.MaxSelectionCount = 1
 $objForm.Controls.Add($objCalendar)

$objForm.Topmost = $True

$objForm.Add_Shown({$objForm.Activate()})
 [void] $objForm.ShowDialog()

if ($dtmDate)
 {
 return $dtmDate
 }
}

if ($pickdates)
{
 [void] [System.Reflection.Assembly]::LoadWithPartialName(&quot;System.Windows.Forms&quot;)
 [void] [System.Reflection.Assembly]::LoadWithPartialName(&quot;System.Drawing&quot;)

 [DateTime] $pickedStart = pick-date
 [DateTime] $pickedEnd = pick-date

 If ($pickedStart -and $pickedEnd)
 {
 $rangeStart = $pickedStart
 $rangeEnd = $pickedEnd
 }
}

Add-Type -AssemblyName Microsoft.Office.Interop.Outlook

$class = @”
using Microsoft.Office.Interop.Outlook;public class MyOL
{
 public MAPIFolder GetCalendar(string userName)
 {
 Application oOutlook = new Application();
 NameSpace oNs = oOutlook.GetNamespace(&quot;MAPI&quot;);
 Recipient oRep = oNs.CreateRecipient(userName);
 MAPIFolder calendar = oNs.GetSharedDefaultFolder(oRep, OlDefaultFolders.olFolderCalendar);
 return calendar;
 }
}
“@

Add-Type $class -ReferencedAssemblies Microsoft.Office.Interop.Outlook

$outlook = new-object MyOL
$restriction = &quot;[End] &gt;= '{0}' AND [Start] &lt;= '{1}'&quot; -f $rangeStart.ToString(&quot;g&quot;), $rangeEnd.ToString(&quot;g&quot;)
$seArray = @()
foreach($se in $calendars)
{
 $seObject = New-Object PSObject
 $SECalendar = $outlook.GetCalendar($se)
 $appointments = $SECalendar.items
 $appointments.Sort(&quot;[Start]&quot;)
 $appointments.IncludeRecurrences = $true
 $SEappts = $appointments.Restrict($restriction) | where {$_.categories -match $category}
 $SEhours = ($SEappts | Measure-Object -Sum -Property duration).sum / 60
 Add-Member -MemberType noteproperty -Value $se -Name &quot;Team Member&quot; -InputObject $seObject
 Add-Member -MemberType noteproperty -Value $SEhours -Name &quot;Hours&quot; -InputObject $seObject
 $seArray += $seObject
}
$totalHours = ($seArray | measure-object -Sum -Property hours).sum
$totalsObject = New-Object PSObject
Add-Member -MemberType noteproperty -Value &quot;TOTAL HOURS&quot; -Name &quot;Team Member&quot; -InputObject $totalsObject
Add-Member -MemberType noteproperty -Value $totalHours -Name &quot;Hours&quot; -InputObject $totalsObject
$seArray += $totalsObject

if ($csv)
{
 $seArray | Export-Csv -NoTypeInformation -Path &quot;$HOME\desktop\OutlookTimeReport.csv&quot;
 Invoke-Item &quot;$HOME\desktop\OutlookTimeReport.csv&quot;
}
else
{
$seHTML = $seArray | ConvertTo-Html -Body &quot;&lt;/pre&gt;
&lt;h3&gt;$($category): $($rangeStart.ToString(&quot;MM.dd.yyyy&quot;)) - $($rangeEnd.ToString(&quot;MM.dd.yyyy&quot;))&lt;/h3&gt;
&lt;pre&gt;&quot;| Out-File &quot;$HOME\desktop\OutlookTimeReport.html&quot;
 Invoke-Item &quot;$HOME\desktop\OutlookTimeReport.html&quot;
}

 [/sourcecode]

 
For more Powershell and Outlook fun, see <a href="http://www.virtu-al.net/2012/05/13/never-miss-an-appointment-again-with-powershell/" target="_blank">Alan's post</a>!</pre>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>587</wp:post_id>
  <wp:post_date>2012-05-18 15:06:01</wp:post_date>
  <wp:post_date_gmt>2012-05-18 19:06:01</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>time-reporting-with-outlook-and-powershell</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="calendar"><![CDATA[calendar]]></category>
  <category domain="post_tag" nicename="csv"><![CDATA[csv]]></category>
  <category domain="post_tag" nicename="html"><![CDATA[HTML]]></category>
  <category domain="post_tag" nicename="microsoft-outlook"><![CDATA[Microsoft Outlook]]></category>
  <category domain="post_tag" nicename="outlook"><![CDATA[outlook]]></category>
  <category domain="category" nicename="powershell"><![CDATA[Powershell]]></category>
  <category domain="post_tag" nicename="powershell-2"><![CDATA[powershell]]></category>
  <category domain="post_tag" nicename="report"><![CDATA[report]]></category>
  <category domain="post_tag" nicename="shared-calendar"><![CDATA[shared calendar]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: Time Reporting with Outlook and #Powershell]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"203562102055641088";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>192</wp:comment_id>
    <wp:comment_author><![CDATA[Daniel Pfuhl (@pfuhli)]]></wp:comment_author>
    <wp:comment_author_email>pfuhli@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/pfuhli</wp:comment_author_url>
    <wp:comment_author_IP>178.25.74.203</wp:comment_author_IP>
    <wp:comment_date>2012-05-18 16:21:32</wp:comment_date>
    <wp:comment_date_gmt>2012-05-18 20:21:32</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Jake, this is crazy. We have been talking in the team about this some weeks ago. Since we need to document all work hours on projects in SAP CATS we asked ourselves if there would be a way to export categorized Outlook appointments to csv for importing the csv into SAP.


Do you think you can make some small changes to export appointments of a week like this:

          cat1   cat2   catx
Mon    2        2.5    3.5
Thu     0         6       4
Wed    9         0       0
.....


I think our whole team would praise you for that ;-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337372493.6568";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337374745.3518";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337374744</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>403576470</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1629156795/87db91cdc.6812109_1_normal.jpg</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>203</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-05-21 16:31:30</wp:comment_date>
    <wp:comment_date_gmt>2012-05-21 20:31:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I imagined using the Group-Object cmdlet to group by date or day. Then you could sum each category in each "day group" and output to a hash table or PSObject array.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>201</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337632291</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:14:"1337632291.988";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>222</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-06-07 09:54:22</wp:comment_date>
    <wp:comment_date_gmt>2012-06-07 13:54:22</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Done. :D http://geekafterfive.com/2012/06/07/powershell-outlook-time-reporting-by-category/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>220</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1339077262</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1339077262.9712";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>220</wp:comment_id>
    <wp:comment_author><![CDATA[iHunger]]></wp:comment_author>
    <wp:comment_author_email>notgym@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://amrph.us</wp:comment_author_url>
    <wp:comment_author_IP>12.219.217.66</wp:comment_author_IP>
    <wp:comment_date>2012-06-07 08:40:27</wp:comment_date>
    <wp:comment_date_gmt>2012-06-07 12:40:27</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Be awesome if you extended this to loop through categories and put them in one report.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1339072827.8327";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1339077263</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1339077263.0393";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>221</wp:comment_id>
    <wp:comment_author><![CDATA[Powershell Outlook Time Reporting by Category &laquo; Geek after Five]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com/2012/06/07/powershell-outlook-time-reporting-by-category/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.127.215</wp:comment_author_IP>
    <wp:comment_date>2012-06-07 09:48:45</wp:comment_date>
    <wp:comment_date_gmt>2012-06-07 13:48:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] request, I have revised the code from my original Outlook Time Reporting to report on Category and day of week with summary totals. A true time sheet really. In fact, I [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1339076925.4276";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1339077273</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1339077273.9808";s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>201</wp:comment_id>
    <wp:comment_author><![CDATA[Daniel Pfuhl (@pfuhli)]]></wp:comment_author>
    <wp:comment_author_email>pfuhli@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/pfuhli</wp:comment_author_url>
    <wp:comment_author_IP>139.18.235.209</wp:comment_author_IP>
    <wp:comment_date>2012-05-21 02:46:26</wp:comment_date>
    <wp:comment_date_gmt>2012-05-21 06:46:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Ok, did most of the sorting but have some problems formatting the output. Could I send you the script for reviewing? Maybe you could give me a hint how to manage nested tables.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>403576470</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1629156795/87db91cdc.6812109_1_normal.jpg</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337582789.2886";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337582788</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>193</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-05-18 17:13:56</wp:comment_date>
    <wp:comment_date_gmt>2012-05-18 21:13:56</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Doesn't sound too difficult. :D

It's just doing a match against $category. Most of the work would be in output and formatting.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>192</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1337375636.8704";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1337375636</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>vShield Edge Version Discovery with PowerCLI</title>
  <link>http://geekafterfive.com/2012/05/22/vshield-edge-version-discovery-with-powercli/</link>
  <pubDate>Tue, 22 May 2012 14:00:56 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=601</guid>
  <description></description>
  <content:encoded><![CDATA[When upgrading vShield Manager, your vShield Edge devices will not be upgraded until you restart them. If you are in a situation where you need to do manual scheduled upgrades, this script will help you keep track of all the old versions running in your environment.

Note: This is a vSphere PowerCLI script should work with both vCloud Director or regular vShield installs.

[sourcecode language="powershell"]

$report = @()
$VSEs = Get-View -ViewType virtualmachine -Filter @{&quot;name&quot;=&quot;vse&quot;}

foreach ($vSE in $vSEs)
{

$vSEObject = New-Object PSObject
 Add-Member -MemberType NoteProperty -Name &quot;Name&quot; -Value $VSE.name -InputObject $vSEObject
 Add-Member -MemberType NoteProperty -Name &quot;Version&quot; -Value $VSE.config.vappconfig.product[0].version -InputObject $vSEObject
 Add-Member -MemberType NoteProperty -Name &quot;Network0&quot; -Value (Get-View -id $VSE.network[0].tostring()).name -InputObject $vSEObject
 Add-Member -MemberType NoteProperty -Name &quot;Network1&quot; -Value (Get-View -id $VSE.network[1].tostring()).name -InputObject $vSEObject

$report += $vSEObject
}

$highVer = ($report | Sort-Object -Property version -Descending)[0].version
$oldvSEs = $report | where {$_.version -ne $highVer}
$oldvSEs | Export-Csv $HOME\Desktop\oldvSEs.csv -NoTypeInformation

[/sourcecode]

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>601</wp:post_id>
  <wp:post_date>2012-05-22 10:00:56</wp:post_date>
  <wp:post_date_gmt>2012-05-22 14:00:56</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vshield-edge-version-discovery-with-powercli</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="upgrade"><![CDATA[upgrade]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="category" nicename="vshield"><![CDATA[vShield]]></category>
  <category domain="post_tag" nicename="vshield-2"><![CDATA[vshield]]></category>
  <category domain="post_tag" nicename="vsphere"><![CDATA[vsphere]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: "#vShield Edge Version Discovery with #PowerCLI" #vCloud #vSphere]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_results</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;a:2:{s:7:"user_id";s:12:"jakerobinson";s:7:"post_id";s:18:"204936334941491203";}}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Powershell Outlook Time Reporting by Category</title>
  <link>http://geekafterfive.com/2012/06/07/powershell-outlook-time-reporting-by-category/</link>
  <pubDate>Thu, 07 Jun 2012 13:48:41 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=605</guid>
  <description></description>
  <content:encoded><![CDATA[By request, I have revised the code from my original<a title="Time Reporting with Outlook and&nbsp;Powershell" href="http://geekafterfive.com/2012/05/18/time-reporting-with-outlook-and-powershell/"> Outlook Time Reporting</a> to report on Category and day of week with summary totals. A true time sheet really. In fact, I believe someone is using this to import their time into SAP...:D

This was a significant change made completely easy with Powershell.

The HTML and CSV output look like this:

[caption id="attachment_606" align="alignnone" width="446"]<a href="http://geekafterfive.files.wordpress.com/2012/06/scriptscreen.png"><img class="size-full wp-image-606 " style="border:1px solid gray;" title="Sample HTML report" src="http://geekafterfive.files.wordpress.com/2012/06/scriptscreen.png" alt="" width="446" height="187" /></a> Sample HTML report[/caption]

&nbsp;

Here's the new code, but please leave me a comment if you use this! I'd love to hear about it!

[sourcecode language="powershell"]

#
# OutlookTimeReport.ps1
# Jake Robinson
# v1.2
#
#
#
#

param ( [DateTime] $rangeStart = (get-date -hour 0 -minute 0 -second 0).AddDays(-(get-date).DayOfWeek.value__),
 [DateTime] $rangeEnd = (get-date -hour 23 -minute 59 -second 59).AddDays(7-(get-date).DayOfWeek.value__),
 [String] $categories,
 [String] $calendar,
 [switch] $csv,
 [switch] $pickdates)

function pick-date()
{
 $objForm = New-Object Windows.Forms.Form

$objForm.Text = &quot;Select a Date&quot;
 $objForm.Size = New-Object Drawing.Size @(190,190)
 $objForm.StartPosition = &quot;CenterScreen&quot;

$objForm.KeyPreview = $True

$objForm.Add_KeyDown({
 if ($_.KeyCode -eq &quot;Enter&quot;)
 {
 $dtmDate=$objCalendar.SelectionStart
 $objForm.Close()
 }
 })

$objForm.Add_KeyDown({
 if ($_.KeyCode -eq &quot;Escape&quot;)
 {
 $objForm.Close()
 }
 })

$objCalendar = New-Object System.Windows.Forms.MonthCalendar
 $objCalendar.ShowTodayCircle = $False
 $objCalendar.MaxSelectionCount = 1
 $objForm.Controls.Add($objCalendar)

$objForm.Topmost = $True

$objForm.Add_Shown({$objForm.Activate()})
 [void] $objForm.ShowDialog()

if ($dtmDate)
 {
 return $dtmDate
 }
}

if ($pickdates)
{
 [void] [System.Reflection.Assembly]::LoadWithPartialName(&quot;System.Windows.Forms&quot;)
 [void] [System.Reflection.Assembly]::LoadWithPartialName(&quot;System.Drawing&quot;)

 [DateTime] $pickedStart = pick-date
 [DateTime] $pickedEnd = pick-date

 If ($pickedStart -and $pickedEnd)
 {
 $rangeStart = $pickedStart
 $rangeEnd = $pickedEnd
 }
}

Add-Type -AssemblyName Microsoft.Office.Interop.Outlook

$class = @”
using Microsoft.Office.Interop.Outlook;public class MyOL
{
 public MAPIFolder GetCalendar(string userName)
 {
 Application oOutlook = new Application();
 NameSpace oNs = oOutlook.GetNamespace(&quot;MAPI&quot;);
 Recipient oRep = oNs.CreateRecipient(userName);
 MAPIFolder calendar = oNs.GetSharedDefaultFolder(oRep, OlDefaultFolders.olFolderCalendar);
 return calendar;
 }
}
“@

Add-Type $class -ReferencedAssemblies Microsoft.Office.Interop.Outlook

$outlook = new-object MyOL
$restriction = &quot;[End] &gt;= '{0}' AND [Start] &lt;= '{1}'&quot; -f $rangeStart.ToString(&quot;g&quot;), $rangeEnd.ToString(&quot;g&quot;)
$seArray = @()
$categoryMatch = [string]$categories -replace ' ','|'
$SECalendar = $outlook.GetCalendar($calendar)
$appointments = $SECalendar.items
$appointments.Sort(&quot;[Start]&quot;)
$appointments.IncludeRecurrences = $true
$SEappts = $appointments.Restrict($restriction) | where {$_.categories -match $categoryMatch}

# Group the appointments by category
$grouped = $SEappts | Group-Object categories

# This is our table array
$table = @()

# Days of the week. Are these language sensitive?
$dow = @(&quot;Monday&quot;,&quot;Tuesday&quot;,&quot;Wednesday&quot;,&quot;Thursday&quot;,&quot;Friday&quot;)
# Change hash values to local language if required.
$dowHash = @{&quot;Monday&quot;=&quot;Monday&quot;; &quot;Tuesday&quot;=&quot;Tuesday&quot;; &quot;Wednesday&quot;=&quot;Wednesday&quot;; &quot;Thursday&quot;=&quot;Thursday&quot;; &quot;Friday&quot;=&quot;Friday&quot;}

# For each category...
foreach ($group in $grouped)
{
 # Start a new row...
 $row = New-Object PSObject

 # Add the category name to the start of our table...
 Add-Member -MemberType NoteProperty -Name &quot;Category&quot; -value $group.name -InputObject $row

# For each work day
 foreach ($day in $dow)
 {
 # Sum up the hours for that category.
 $hours = ($group.group | where {$_.start.dayofweek -eq $day} | Measure-Object -Sum -Property duration).sum /60

# Then add it to our table row.
 Add-Member -MemberType NoteProperty -Name $dowHash.($day) -Value $hours -InputObject $row
 }
 $table += $row
}


# Summary at the end
$summary = New-Object PSObject
Add-Member -MemberType NoteProperty -Name &quot;Category&quot; -value &quot;SUMMARY&quot; -InputObject $summary
foreach ($day in $dow)
 {
 # Sum up the hours for that category.
 $hours = ($SEappts | where {$_.start.dayofweek -eq $day} | Measure-Object -Sum -Property duration).sum /60

# Then add it.
 Add-Member -MemberType NoteProperty -Name $dowHash.($day) -Value $hours -InputObject $summary
 }
$table += $summary

# Get TOTAL hours for final HTML report
$totalHours = ($SEappts | Measure-Object -Sum -Property duration).sum /60


if ($csv)
{
 $table | Export-Csv -NoTypeInformation -Path &quot;$HOME\desktop\OutlookTimeReport.csv&quot;
 Invoke-Item &quot;$HOME\desktop\OutlookTimeReport.csv&quot;
}
else
{
 $totalpost = &quot;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;b&gt;TOTAL HOURS:&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;$($totalHours)&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;&lt;table&gt;&quot;
 $seHTML = $table | ConvertTo-Html -PostContent $totalpost | Out-File &quot;$HOME\desktop\OutlookTimeReport.html&quot;
 Invoke-Item &quot;$HOME\desktop\OutlookTimeReport.html&quot;
}

[/sourcecode]

<span style="font-size:11pt;font-family:'Calibri', 'sans-serif';"><!--[if gte vml 1]&gt;-->
 
 
  
  
  
  
  
  
  
  
  
  
  
  
 
 
 

 
<!--[if !vml]--><!--[endif]--></span>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>605</wp:post_id>
  <wp:post_date>2012-06-07 09:48:41</wp:post_date>
  <wp:post_date_gmt>2012-06-07 13:48:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>powershell-outlook-time-reporting-by-category</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="category"><![CDATA[category]]></category>
  <category domain="post_tag" nicename="outlook"><![CDATA[outlook]]></category>
  <category domain="category" nicename="powershell"><![CDATA[Powershell]]></category>
  <category domain="post_tag" nicename="powershell-2"><![CDATA[powershell]]></category>
  <category domain="post_tag" nicename="sap"><![CDATA[sap]]></category>
  <category domain="post_tag" nicename="time-reporting"><![CDATA[time reporting]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: #Powershell #Outlook Time Reporting by Category!]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>224</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-06-07 15:29:41</wp:comment_date>
    <wp:comment_date_gmt>2012-06-07 19:29:41</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Happy to link to any other changes you decide to make!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>223</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1339097382.5318";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1339097382</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>223</wp:comment_id>
    <wp:comment_author><![CDATA[iHunger]]></wp:comment_author>
    <wp:comment_author_email>notgym@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://amrph.us</wp:comment_author_url>
    <wp:comment_author_IP>12.219.217.66</wp:comment_author_IP>
    <wp:comment_date>2012-06-07 10:30:06</wp:comment_date>
    <wp:comment_date_gmt>2012-06-07 14:30:06</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[AWESOME - Works great. I was starting to revise the script when I saw that you already had it done.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1339079407</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1339079408.3676";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>685</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-12-14 09:58:43</wp:comment_date>
    <wp:comment_date_gmt>2012-12-14 14:58:43</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hello again Ryan!

Yes, you are absolutely correct. Please see the following post for the switches you must use to call the script: http://geekafterfive.com/2012/05/18/time-reporting-with-outlook-and-powershell/]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>681</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1355497124</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1355497124.5565330982208251953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>595</wp:comment_id>
    <wp:comment_author><![CDATA[Ryan]]></wp:comment_author>
    <wp:comment_author_email>rmariotti@choicelunch.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>68.233.211.202</wp:comment_author_IP>
    <wp:comment_date>2012-12-04 18:06:12</wp:comment_date>
    <wp:comment_date_gmt>2012-12-04 23:06:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Just what I was looking for...but I'm new to PowerShell and haven't run a .ps1 file before.  I already copied to a .ps1 file and can run this in my PowerShell.  But I don't know how to properly CALL this script.  Can you provide an example please?  Many thanks!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1354662372.185617923736572265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"skeefy1";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1354719538</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1354719538.92022800445556640625;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>620</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-12-07 11:29:36</wp:comment_date>
    <wp:comment_date_gmt>2012-12-07 16:29:36</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You should just be able to type in the path to the PS1 file. Are you getting an error?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>595</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1354897777</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1354897777.69241809844970703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>681</wp:comment_id>
    <wp:comment_author><![CDATA[skeefy1]]></wp:comment_author>
    <wp:comment_author_email>skeefy1@yahoo.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>68.233.211.202</wp:comment_author_IP>
    <wp:comment_date>2012-12-13 20:08:04</wp:comment_date>
    <wp:comment_date_gmt>2012-12-14 01:08:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I type this and hit ENTER
.\OutlookTimeReport.ps1

But I receive several red error messages.  Shouldn't this file/command be called with a series of parameters, such as to specify User, start/end dates, etc.?

Thanks in advance for any advice on running this!

Exception calling "GetCalendar" with "1" argument(s): "The operation failed."
At I:\it\Cloud Suite\OutlookTimeReport.ps1:96 char:35
+ $SECalendar = $outlook.GetCalendar &lt;&lt;&lt;&lt; ($calendar)
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : DotNetMethodException

You cannot call a method on a null-valued expression.
At I:\it\Cloud Suite\OutlookTimeReport.ps1:98 char:19
+ $appointments.Sort &lt;&lt;&lt;&lt; (&quot;[Start]&quot;)
    + CategoryInfo          : InvalidOperation: (Sort:String) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull

Property &#039;IncludeRecurrences&#039; cannot be found on this object; make sure it exists and is settable.
At I:\it\Cloud Suite\OutlookTimeReport.ps1:99 char:15
+ $appointments. &lt;&lt;&lt;&lt; IncludeRecurrences = $true
    + CategoryInfo          : InvalidOperation: (IncludeRecurrences:String) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

You cannot call a method on a null-valued expression.
At I:\it\Cloud Suite\OutlookTimeReport.ps1:100 char:34
+ $SEappts = $appointments.Restrict &lt;&lt;&lt;&lt; ($restriction) | where {$_.categories -match $categoryMatch}
    + CategoryInfo          : InvalidOperation: (Restrict:String) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>620</wp:comment_parent>
    <wp:comment_user_id>18216051</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1355496976</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1355447284.702136993408203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"skeefy1";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Emailing vCloud Organization Users</title>
  <link>http://geekafterfive.com/2012/06/13/emailing-vcloud-organization-users/</link>
  <pubDate>Wed, 13 Jun 2012 14:30:53 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=615</guid>
  <description></description>
  <content:encoded><![CDATA[<a href="http://geekafterfive.files.wordpress.com/2012/06/snag-0110.png"><img class="size-full wp-image-617 alignright" style="border:3px solid gray;" title="Notify Users" src="http://geekafterfive.files.wordpress.com/2012/06/snag-0110.png" alt="" width="173" height="102" /></a><a href="http://communities.vmware.com/thread/404454" target="_blank">A question</a> popped in the vCloud PowerCLI forum the other day on how to use the "notify users" function in the vCloud Director Web UI through the vCloud API. While the functionality is not in the API, PowerCLI and Powershell make short work of it with the vCloud snap-in and Powershell's Send-MailMessage cmdlet.

<a href="http://geekafterfive.files.wordpress.com/2012/06/snag-0109.png"><img class="alignnone size-full wp-image-618" title="Sending a message" src="http://geekafterfive.files.wordpress.com/2012/06/snag-0109.png" alt="" width="465" height="595" /></a>

The task in this case was to send an email to all Org users to remind them of the number of VMs they have in a particular organization. The following code could easily be adapted to show: Resource usage, IP addresses, OS usage, etc.

Probably the most interesting thing I find about this code is that it can be used in either a systems admin role, or an organization admin role.

[sourcecode language="powershell"]

$mailServer = &quot;mail.example.com&quot;
$users = Get-CIUser # use -Org &quot;OrgName&quot; if connected to system Org
$VApps = Get-CIVApp # use -Org &quot;OrgName&quot; if connected to system Org

foreach ($user in $users)
{
 $counter = 0
 $ownerVApps = $VApps | where {$_.owner -eq $user}
 $vapps | ForEach-Object {$counter += $_.extensiondata.children.vm.count}

$mailbody = &quot;Greetings, You currently have $counter virtual machines in Organization: $($user.Org)&quot;

Send-MailMessage -SmtpServer $mailServer -To $user.email -From &quot;PowerCLI@example.com&quot; -Body $mailbody

}

[/sourcecode]

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>615</wp:post_id>
  <wp:post_date>2012-06-13 10:30:53</wp:post_date>
  <wp:post_date_gmt>2012-06-13 14:30:53</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>emailing-vcloud-organization-users</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="email"><![CDATA[email]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powershell-2"><![CDATA[powershell]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-api"><![CDATA[vCloud API]]></category>
  <category domain="post_tag" nicename="vcloud-director"><![CDATA[vCloud Director]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: Emailing #vCloud Organization Users #PowerCLI #Powershell]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Sharing vApps in vCloud with PowerCLI</title>
  <link>http://geekafterfive.com/2012/06/26/sharing-vapps-in-vcloud-with-powercli/</link>
  <pubDate>Tue, 26 Jun 2012 19:38:31 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=624</guid>
  <description></description>
  <content:encoded><![CDATA[vCloud Director gives Organization users some granular control over what level of access users have to vApps, which can be controlled through the vCloud API and PowerCLI.

The following code grabs a vApp's current access settings, and allows a user to modify the vApp.

[sourcecode language="Powershell"]

# Get our required Objects
$vapp = Get-CIVApp &quot;My vApp&quot;
$user = Get-CIUser &quot;UserToBeAdded&quot;

# Access Level can be one of: ReadOnly,Change,FullControl
$accessLevel = &quot;Change&quot;

# Get current access policy from vApp
$access = $vapp.ExtensionData.GetControlAccess()

if (!$access.AccessSettings)
{
 $access.AccessSettings = New-Object VMware.VimAutomation.Cloud.Views.AccessSettings
}


# New Access object
$newAccess = new-object VMware.VimAutomation.Cloud.Views.AccessSetting
$newAccess.Subject = New-Object VMware.VimAutomation.Cloud.Views.Reference

# Set our access level
$newAccess.AccessLevel = $accessLevel

# Insert user href
$newAccess.Subject.Href = $user.ExtensionData.Href
$newAccess.Subject.Type = &quot;application/vnd.vmware.admin.user+xml&quot;

# Add new access to vApp access settings object
$access.AccessSettings.AccessSetting += $newAccess

#Send new Access config
$vapp.ExtensionData.ControlAccess($access)

[/sourcecode]

<a href="http://geekafterfive.files.wordpress.com/2012/06/snag-0148.png"><img class="alignnone size-full wp-image-654" title="vCloud vApp Sharing" src="http://geekafterfive.files.wordpress.com/2012/06/snag-0148.png" alt="" width="490" height="346" /></a>

You can also control the default access policy, as well as the level using: $access.IsSharedToEveryone and $access.EveryoneAccessLevel !!!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>624</wp:post_id>
  <wp:post_date>2012-06-26 15:38:31</wp:post_date>
  <wp:post_date_gmt>2012-06-26 19:38:31</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>sharing-vapps-in-vcloud-with-powercli</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="controlaccess"><![CDATA[controlaccess]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="sharing"><![CDATA[sharing]]></category>
  <category domain="post_tag" nicename="vapp"><![CDATA[vApp]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-api"><![CDATA[vCloud API]]></category>
  <category domain="post_tag" nicename="vcloud-director"><![CDATA[vCloud Director]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Sharing vApps in #vCloud with #PowerCLI]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>268</wp:comment_id>
    <wp:comment_author><![CDATA[Karsten Bundgaard]]></wp:comment_author>
    <wp:comment_author_email>kabun@arrowecs.dk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>62.243.193.1</wp:comment_author_IP>
    <wp:comment_date>2012-06-27 05:42:04</wp:comment_date>
    <wp:comment_date_gmt>2012-06-27 09:42:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Jake 
Will this be okay, i made it as a function :

Function Sharing-CIVapp {
	# examble of sharing a vApp Sharing-CIVapp -user mars01 -vapp mars01 -accessLevel FullControl
	Param (
	$user=$(throw "need -user"),
	$vApp=$(throw "need -vApp"),
	$accessLevel=$(throw "need -accessleve Like ReadOnly, Change, FullControl")
	)
Process {
$vappOrg = Get-CIVApp $vApp
$user1 = Get-CIUser $user
$accessLevel = "FullControl"
$access = $vappOrg.ExtensionData.GetControlAccess()

if (!$access.AccessSettings)
{
 $access.AccessSettings = New-Object VMware.VimAutomation.Cloud.Views.AccessSettings
}
$newAccess = new-object VMware.VimAutomation.Cloud.Views.AccessSetting
$newAccess.Subject = New-Object VMware.VimAutomation.Cloud.Views.Reference
$newAccess.AccessLevel = $accessLevel
$newAccess.Subject.Href = $user1.ExtensionData.Href
$newAccess.Subject.Type = "application/vnd.vmware.admin.user+xml"
$access.AccessSettings.AccessSetting += $newAccess
$vappOrg.ExtensionData.ControlAccess($access)
}
}

It works like a charm, thanks to you :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1340790125</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1340790126.2158";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Add vCloud Harddisks with PowerCLI</title>
  <link>http://geekafterfive.com/2012/06/29/add-vcloud-harddisks-with-powercli/</link>
  <pubDate>Fri, 29 Jun 2012 12:00:24 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=658</guid>
  <description></description>
  <content:encoded><![CDATA[In <a title="vCloud API/GUI Throwdown: Part 2" href="http://geekafterfive.com/2012/02/24/vcloud-apigui-throwdown-part-2/">vCloud API/GUI Throwdown part 2</a>, I showed you how to modify VM disk sizes in vCloud Director while the VM is still powered on. However, we did *not* cover adding new disks to a VM.

Adding new harddisks is a little tricky because of the implementation of the object in the SDK.. The conversion from XML to a .NET object is not an easy thing, especially with the vCloud API's intricate  nodes, elements, attributes, etc. Because of this, you can't create a representation of a harddisk as a .NET object. Trust me, I've tried.

That being said, we're working with a REST API, and Powershell LOVES REST APIs. Using the <span style="color:#339966;">[System.Net.WebRequest]</span> class, we can talk HTTP just like any web browser. That means we can use the 4 HTTP methods used in REST APIs: GET, POST, PUT, DELETE.

So, with a mix of PowerCLI and some Powershell .NET magic, I give you... <span style="color:#000080;">New-CIHarddisk</span>! I made this one an advanced function, so you can just pipe a vCloud VM to it, like so:

<a href="http://geekafterfive.files.wordpress.com/2012/06/snag-0113.png"><img class="alignnone size-full wp-image-659" title="New-CIHarddisk" src="http://geekafterfive.files.wordpress.com/2012/06/snag-0113.png" alt="" width="490" height="59" /></a>

*Note the harddisk size is in bytes.

Here are a couple different ways to run the command:

[sourcecode language="powershell"]
# Passing VM via pipeline
Get-CIVM &quot;MyVM&quot; | New-CIHarddisk -size 10240

# Or just using a VM name
New-CIHarddisk -vm &quot;MyVM&quot; -size 10240
[/sourcecode]

Here's what it looks like after you add more harddisks to a running VM...I may have had a little too much fun with this one:

<a href="http://geekafterfive.files.wordpress.com/2012/06/snag-0114.png"><img class="alignnone size-full wp-image-660" title="Lots of harddisks!" src="http://geekafterfive.files.wordpress.com/2012/06/snag-0114.png" alt="" width="490" height="169" /></a>

So enjoy, but be careful!

[sourcecode language="powershell" wraplines="false"]

function New-CIHarddisk
{
 [cmdletbinding()]
 param
 (
 [Parameter (ParameterSetName=&quot;pipeline&quot;,ValueFromPipeline=$true,Mandatory=$true)]$vm,
 [Parameter (Position=0, Mandatory=$true)]$size
 )

Process
 {
 # Get indexes to create unique IDs for our new disk.
 if ($vm -is [System.String])
 {
 $vm = get-civm $vm
 }
 $vmHardware = $vm.ExtensionData.GetVirtualHardwareSection()
 $scsiController = $vmHardware.item | where {$_.resourceType.value -eq &quot;6&quot;}
 $highaddress = ($vmHardware.item | where {$_.resourcetype.value -eq &quot;17&quot;} | Sort-Object addressonParent)[-1].addressonParent.value
 $addressOnParent = [int]$highaddress + 1
 $highInstance = ($vmHardware.item | where {$_.resourcetype.value -eq &quot;17&quot;} | Sort-Object instanceID)[-1].instanceId.value
 $instanceId = [int]$highInstance + 1
 $highElement = ($vmHardware.item | where {$_.resourcetype.value -eq &quot;17&quot;} | Sort-Object elementName)[-1].elementName.value
 $elementName = [int]$highElement.Split()[-1] + 1

# We need to get the raw XML via vCloud API to add the new disk.
 $hardwareContentType = &quot;application/vnd.vmware.vcloud.virtualHardwareSection+xml&quot;
 $webclient = New-Object system.net.webclient
 $webclient.Headers.Add(&quot;x-vcloud-authorization&quot;,$vmHardware.Client.SessionKey)
 $webclient.Headers.Add(&quot;accept&quot;,$hardwareContentType)
 [xml]$hardwareConfXML = $webclient.DownloadString($vmhardware.href)

# Clone the XML node, assign our variables, and insert child into the XML
 $newDisk = ($hardwareConfXML.VirtualHardwareSection.Item | where {$_.resourcetype -eq 17})[-1].clonenode(1)
 $newDisk.AddressOnParent = &quot;$addressOnParent&quot;
 $newDisk.InstanceId = &quot;$instanceId&quot;
 $newDisk.elementName = &quot;Hard Disk $elementName&quot;
 $newdisk.hostresource.capacity = &quot;$size&quot;
 $newDisk.parent = &quot;$($scsiController.instanceID.value)&quot;
 [void]$hardwareConfXML.VirtualHardwareSection.InsertAfter($newDisk,($hardwareConfXML.VirtualHardwareSection.Item | where {$_.resourcetype -eq 17})[-1])

# PUT the data back through vCloud API
 $request = [System.Net.WebRequest]::Create($vmHardware.href);
 $request.Headers.Add(&quot;x-vCloud-authorization&quot;,$vmHardware.Client.SessionKey)
 $request.Accept=&quot;application/vnd.vmware.vcloud.task+xml&quot;
 $request.Method=&quot;PUT&quot;
 $request.ContentType = $hardwareContentType
 $postData = $hardwareConfXML.virtualhardwaresection.outerxml
 $xmlString = $postData.replace(&quot;
&quot;,&quot;&quot;) # adding strings to xml puts in silly newlines.
 [byte[]]$xmlEnc = [System.Text.Encoding]::UTF8.GetBytes($xmlString)
 $request.ContentLength = $xmlEnc.length
 [System.IO.Stream]$requestStream = $request.GetRequestStream()
 $requestStream.write($xmlEnc, 0, $xmlEnc.Length)
 $requestStream.Close()
 $response = $request.GetResponse()
 $responseStream = $response.getResponseStream()
 $streamReader = new-object System.IO.StreamReader($responseStream)
 $result = $streamReader.ReadtoEnd()
 $streamReader.close()
 $response.close()
 }
}

[/sourcecode]]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>658</wp:post_id>
  <wp:post_date>2012-06-29 08:00:24</wp:post_date>
  <wp:post_date_gmt>2012-06-29 12:00:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>add-vcloud-harddisks-with-powercli</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="harddisk"><![CDATA[harddisk]]></category>
  <category domain="post_tag" nicename="ovf"><![CDATA[ovf]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="rest"><![CDATA[rest]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-api"><![CDATA[vCloud API]]></category>
  <category domain="post_tag" nicename="vm"><![CDATA[vm]]></category>
  <category domain="post_tag" nicename="vmdk"><![CDATA[vmdk]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: Add #vCloud Harddisks with #PowerCLI (while the VM is still powered ON!)]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>382</wp:comment_id>
    <wp:comment_author><![CDATA[JaySinn]]></wp:comment_author>
    <wp:comment_author_email>jason@cornick.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>98.194.142.21</wp:comment_author_IP>
    <wp:comment_date>2012-08-08 20:16:30</wp:comment_date>
    <wp:comment_date_gmt>2012-08-09 00:16:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great script, but it gave me some trouble!  You set the capacity to $SizeinBytes when building the XML, but never assign a value.  I changed it to use $size instead and it works like a charm!  Also, the size is in MB, not Bytes...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344471466</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344471466.637020111083984375;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344471391.636478900909423828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>303</wp:comment_id>
    <wp:comment_author><![CDATA[joshatwell]]></wp:comment_author>
    <wp:comment_author_email>josh.c.atwell@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>64.102.249.7</wp:comment_author_IP>
    <wp:comment_date>2012-07-16 12:33:34</wp:comment_date>
    <wp:comment_date_gmt>2012-07-16 16:33:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Could you clarify on "Be Careful".  Is there an unstated risk or is the fear of how awesome and easy it is to add the new HardDisk might make us carried away?
Great scripts btw!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>30088208</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342456491</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342456414.4141";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"joshatwell";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>304</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-07-16 13:22:46</wp:comment_date>
    <wp:comment_date_gmt>2012-07-16 17:22:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The simple risk is that adding new disks is way too easy. :D]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>303</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342459369.0392";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342459368</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>384</wp:comment_id>
    <wp:comment_author><![CDATA[JaySinn]]></wp:comment_author>
    <wp:comment_author_email>Jason@cornick.net</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>98.194.142.21</wp:comment_author_IP>
    <wp:comment_date>2012-08-08 22:16:45</wp:comment_date>
    <wp:comment_date_gmt>2012-08-09 02:16:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[More fun!  If you only have a single disk in the VM you are adding to it will fail, because it treats them as a singular result instead of an array.  You can force them to be arrays by sticking an @ in front, so for example, line 19 becomes:
$highaddress = @($vmHardware.item | where {$_.resourcetype.value -eq "17"} | Sort-Object addressonParent)[-1].addressonParent.value

21,23,34 and 40 need the same kind of alteration made.

Thanks again for this awesome script - I am learning a ton from it, and it is saving me so much work.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344478606</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344478607.269340991973876953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>383</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2012-08-08 20:21:45</wp:comment_date>
    <wp:comment_date_gmt>2012-08-09 00:21:45</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Good catch Jason! Fixed! :D]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>382</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344471705.7721250057220458984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344471705</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>744</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>166.137.92.16</wp:comment_author_IP>
    <wp:comment_date>2013-03-03 11:09:48</wp:comment_date>
    <wp:comment_date_gmt>2013-03-03 16:09:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You're welcome, Michael! Glad you found the 5.1 switch! :)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>743</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362326988.69781398773193359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362326988</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>742</wp:comment_id>
    <wp:comment_author><![CDATA[Michael]]></wp:comment_author>
    <wp:comment_author_email>michaelyaakoby@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>62.219.123.187</wp:comment_author_IP>
    <wp:comment_date>2013-03-03 10:47:09</wp:comment_date>
    <wp:comment_date_gmt>2013-03-03 15:47:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Unfortunately I can't get this to work... I keep getting: Exception calling "DownloadString" with "1" argument(s): "The remote server returned an error: (406) Not Acceptable."
This happens in $webclient.DownloadString($vmhardware.href)

I'm using vCloud Diretor 5.1 with PowerCLI 5.1 and am logged in as "org admin" (also tried to log in as sys admin but it didn't help).

Any idea what am I doing wrong?

Thanks,
M.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362326799</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362325629.5849220752716064453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>743</wp:comment_id>
    <wp:comment_author><![CDATA[Michael]]></wp:comment_author>
    <wp:comment_author_email>michaelyaakoby@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>62.219.123.187</wp:comment_author_IP>
    <wp:comment_date>2013-03-03 10:51:01</wp:comment_date>
    <wp:comment_date_gmt>2013-03-03 15:51:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Fixed by adding ";version=5.1" to the content-type.

Anyways, thanks for the very awesome explanations and samples!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>742</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362326803</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362325862.242435932159423828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>386</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2012-08-09 10:10:26</wp:comment_date>
    <wp:comment_date_gmt>2012-08-09 14:10:26</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Great catch Jason, and thanks for using the code! I'll be compiling these types of functions into a Powershell module soon, and I'd love to hear what other challenges you have!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>384</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1344521427</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1344521428.3680870532989501953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>762</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2013-03-07 10:28:34</wp:comment_date>
    <wp:comment_date_gmt>2013-03-07 15:28:34</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[What version of vCloud Director? Was the vApp powered down as well? You might try that.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>761</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362670115</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362670116.25623989105224609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>763</wp:comment_id>
    <wp:comment_author><![CDATA[ש.פ]]></wp:comment_author>
    <wp:comment_author_email>haimsoh@netvision.net.il</wp:comment_author_email>
    <wp:comment_author_url>http://shotefplus.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>62.219.123.187</wp:comment_author_IP>
    <wp:comment_date>2013-03-07 10:49:04</wp:comment_date>
    <wp:comment_date_gmt>2013-03-07 15:49:04</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[The vApp was/is down as well. We are using vCD 5.1.

It looks as if I am able to remove it, just pressing "OK" brings up that message.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>7539071</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362671345.2471721172332763671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"druminy";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362671345</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>759</wp:comment_id>
    <wp:comment_author><![CDATA[Yaron]]></wp:comment_author>
    <wp:comment_author_email>haimsoh@netvision.net.il</wp:comment_author_email>
    <wp:comment_author_url>http://gravatar.com/druminy</wp:comment_author_url>
    <wp:comment_author_IP>62.219.123.187</wp:comment_author_IP>
    <wp:comment_date>2013-03-07 10:14:17</wp:comment_date>
    <wp:comment_date_gmt>2013-03-07 15:14:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Pretty neat!!

And the stupid question of the day - How do I delete such a Hard drive once created?
I made one, but when trying to remove if via the vCD GUI it errs out on save and say "The hard drives of the virtual machine may not be modified, once created"

 :-( Many thanks in advance.

Yaron]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362669342</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362669343.0335190296173095703125;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362669258.73629093170166015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"druminy";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>760</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2013-03-07 10:16:59</wp:comment_date>
    <wp:comment_date_gmt>2013-03-07 15:16:59</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Yaron,

You will need to power down the VM to remove the new harddisk. No way around it. :)

Cheers,

Jake]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>759</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362669420</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362669420.9510910511016845703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>761</wp:comment_id>
    <wp:comment_author><![CDATA[ש.פ]]></wp:comment_author>
    <wp:comment_author_email>haimsoh@netvision.net.il</wp:comment_author_email>
    <wp:comment_author_url>http://shotefplus.wordpress.com</wp:comment_author_url>
    <wp:comment_author_IP>62.219.123.187</wp:comment_author_IP>
    <wp:comment_date>2013-03-07 10:25:44</wp:comment_date>
    <wp:comment_date_gmt>2013-03-07 15:25:44</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I did. That message was after the VM went down.
I powered it down, went to the Hardware catalog and deleted the new disk.

When approving with "OK" I got the aforementioned message...

Thanks,
Yaron]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>760</wp:comment_parent>
    <wp:comment_user_id>7539071</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362670038.5300309658050537109375;s:7:"message";s:53:"jacobmrobinson changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362670037</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362669944.981317043304443359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"druminy";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>831</wp:comment_id>
    <wp:comment_author><![CDATA[Edmund Dipple (@ElMundio87)]]></wp:comment_author>
    <wp:comment_author_email>ElMundio87@twitter.example.com</wp:comment_author_email>
    <wp:comment_author_url>http://twitter.com/ElMundio87</wp:comment_author_url>
    <wp:comment_author_IP>94.173.127.249</wp:comment_author_IP>
    <wp:comment_date>2013-05-12 08:18:30</wp:comment_date>
    <wp:comment_date_gmt>2013-05-12 12:18:30</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I wish I'd read this comment sooner, I was just about to point out the same thing!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>743</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1368361110.93673992156982421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_post_as</wp:meta_key>
      <wp:meta_value>twitter</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_avatar</wp:meta_key>
      <wp:meta_value>http://a0.twimg.com/profile_images/1317312263/avatarpic-l_1__normal.png</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>hc_foreign_user_id</wp:meta_key>
      <wp:meta_value>21911445</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368361907</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>832</wp:comment_id>
    <wp:comment_author><![CDATA[&raquo; Set VM memory and CPU Cores in PowerCLI (vCloud) El Mundio Does Devops]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://www.elmundio.net/blog/set-vm-memory-and-cpu-cores-in-powercli-vcloud/</wp:comment_author_url>
    <wp:comment_author_IP>208.113.153.220</wp:comment_author_IP>
    <wp:comment_date>2013-05-12 09:46:07</wp:comment_date>
    <wp:comment_date_gmt>2013-05-12 13:46:07</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[&#8230;] had me scratching my head for a while until I found this very enlightening post by @jakerobinson (http://geekafterfive.com/2012/06/29/add-vcloud-harddisks-with-powercli). The article provides an example of using the REST api with Powershell+PowerCLI, in this case to [&#8230;]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1368532524</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Hacking the vCloud Director Browser Support Warning</title>
  <link>http://geekafterfive.com/2012/07/19/hacking-the-vcloud-director-browser-support-warning/</link>
  <pubDate>Thu, 19 Jul 2012 19:35:52 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=667</guid>
  <description></description>
  <content:encoded><![CDATA[&nbsp;

&nbsp;

<a href="http://geekafterfive.files.wordpress.com/2012/07/snag-0155.png"><img class="alignnone size-full wp-image-674" title="Warning, Jake Robinson!" src="http://geekafterfive.files.wordpress.com/2012/07/snag-0155.png" alt="" width="1027" height="65" /></a>

I'm a Chrome user and it's particularly annoying to get the "this browser is not supported" message any time I load the vCloud Director URL, or my session expires and I have to re-login. I try to spend most of my time in PowerCLI, but sometimes I need to make a minor tweak, or open the remote console of a VM.

I understand that Chrome is not a supported browser, which is only because of the remote console, as far as I can tell. Everything else works great in Chrome!

So what is an unsupported browser user to do? HACK!

I came up with this idea on accident, when I was playing with the Powershell v3 Invoke-RestMethod cmdlet.

Here's what I ran:

[sourcecode language="powershell"]

Invoke-RestMethod &quot;https://vcloud.example.com/cloud/org/jake&quot; | Out-File C:\users\jake\desktop\vcloudindex.html -encoding UTF8

[/sourcecode]

This dumps the HTML from the URL just like wget in Linux.

After that, I started changing out all of the relative HTML links to absolutes. In the following html, I changed the first one to show you an example.

[sourcecode language="html" wraplines="false"]

css/main.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; /&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;support/&lt;span class=&quot;&gt;// &lt;![CDATA[
javascript&lt;/span&gt;/jquery/jquery-1.3.2.min.js&quot; type=&quot;text/javascript&quot;&gt;
// ]]&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;support/&lt;span class=&quot;&gt;// &lt;![CDATA[
javascript&lt;/span&gt;/upload.js&quot; type=&quot;text/javascript&quot;&gt;
// ]]&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;support/&lt;span class=&quot;&gt;// &lt;![CDATA[
javascript&lt;/span&gt;/swfobject.js&quot; type=&quot;text/javascript&quot;&gt;
// ]]&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;support/&lt;span class=&quot;&gt;// &lt;![CDATA[
javascript&lt;/span&gt;/swfaddress.js&quot; type=&quot;text/javascript&quot;&gt;
// ]]&gt;&lt;/script&gt;
 &lt;script src=&quot;support/javascript/associative-array.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
 &lt;script src=&quot;support/javascript/VMRCConsoleController.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
 &lt;script src=&quot;support/javascript/remoteaccess.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;

[/sourcecode]

After that, I started running into cookie errors, and apparently Chrome does not load cookies for local pages by default. You can fix this by loading Chrome with --enable-file-cookies, but that seemed like a chore. I simply uploaded the file to my public dropbox folder and got the URL for the file.

At that point, I was accessing the file over the internet, but the flash was not loading. After a bit of investigation, I discovered this line:

[sourcecode language="javascript"]

{  wmode: &quot;opaque&quot;, allowScriptAccess: &quot;sameDomain&quot; },

[/sourcecode]

A quick google search revealed I could change "sameDomain" to "always." I made the change and reloaded the page. Flash worked and I could log in!!!

So now I could focus my attention on that browser error. I did a find for the text of the error, and backtracked it to this function:

[sourcecode language="javascript"]

function onPageLoad() {
 if (isSupportedBrowser()) {
 initializeFlash();
 } else {
 $(&quot;#browserWarning&quot;).show();
 $(&quot;#flashWarning&quot;).hide();
 $(&quot;#cookieWarning&quot;).hide();
 }
 }

[/sourcecode]

Easy fix. I simply removed the logic of the onPageLoad() function to this:

[sourcecode language="javascript"]

function onPageLoad() {
 initializeFlash();
 }

[/sourcecode]

I reloaded the page, anxious to see if that fixed it....SUCCESS!

I browsed around a bit to see if there was anything that didn't work, and it appears the only thing is right clicking objects. The work around for that is simply clicking the gear icon to bring up the actions for a particular object, but I am sure there is an HTML or javascript fix for that as well.

From a security standpoint, I could see someone constructing a man-in-the-middle attack of sorts to gain credentials, but they'd have to work at it. Always make sure the URL you are connected to is correct, and the SSL cert is for your domain. Bookmarking the link can also be a method to make sure you are not going to the wrong URL.

<a href="http://geekafterfive.files.wordpress.com/2012/07/snag-0154.png"><img class="alignnone size-full wp-image-671" title="Check your six." src="http://geekafterfive.files.wordpress.com/2012/07/snag-0154.png" alt="" width="396" height="410" /></a>

&nbsp;

As a final note, <strong><span style="color:#ff0000;">This does NOT add VMware remote console support to Chrome</span></strong>. The VMRC plugin is currently only for Firefox and IE. The usefulness of this hack is somewhat limited, as it only removes the browser warnings.

Enjoy!

&nbsp;

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>667</wp:post_id>
  <wp:post_date>2012-07-19 15:35:52</wp:post_date>
  <wp:post_date_gmt>2012-07-19 19:35:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>hacking-the-vcloud-director-browser-support-warning</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="browser"><![CDATA[browser]]></category>
  <category domain="post_tag" nicename="chrome"><![CDATA[chrome]]></category>
  <category domain="post_tag" nicename="hack"><![CDATA[hack]]></category>
  <category domain="post_tag" nicename="html"><![CDATA[HTML]]></category>
  <category domain="post_tag" nicename="javascript"><![CDATA[javascript]]></category>
  <category domain="post_tag" nicename="powershell-2"><![CDATA[powershell]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: Hacking the #vCloud Director Browser Support Warning]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>317</wp:comment_id>
    <wp:comment_author><![CDATA[Jason Ruiz]]></wp:comment_author>
    <wp:comment_author_email>jason.ruiz@hostway.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>64.156.25.4</wp:comment_author_IP>
    <wp:comment_date>2012-07-19 17:46:46</wp:comment_date>
    <wp:comment_date_gmt>2012-07-19 21:46:46</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[And I just thought about asking about this on Twitter!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1342734406.6009";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1342735668</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>787</wp:comment_id>
    <wp:comment_author><![CDATA[Scott]]></wp:comment_author>
    <wp:comment_author_email>scottd.bentz@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>207.114.179.72</wp:comment_author_IP>
    <wp:comment_date>2013-03-27 13:06:55</wp:comment_date>
    <wp:comment_date_gmt>2013-03-27 17:06:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[That sure is one way to do it!

What I've done is use IEtab extension for chrome and just have vCloud auto load into it. Then I unchecked the "Open popups in Chrome" option. 

So now when I click to console into a VM from chrome, the console pops up in IE. Thought I'd share since its kind of the same idea but I agree that chrome needs support for vCloud.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1364404373</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1364404016.255299091339111328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Uploading VMs to vCloud with OVFtool</title>
  <link>http://geekafterfive.com/2012/08/08/uploading-vms-to-vcloud-with-ovftool/</link>
  <pubDate>Wed, 08 Aug 2012 21:42:57 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=682</guid>
  <description></description>
  <content:encoded><![CDATA[VMware's OVFtool is a command line tool that allows you to convert VMware Virtual Machines to Open Virtualization Format, or OVF. In the latest version, it can also upload VMs to vCloud Director for you as well!

To do this, OVFtool simply requires a source (VMX or OVF), and a destination (a vCloud Locator).

The vCloud locator looks something like this:

[sourcecode language="text" wraplines="false"]
vcloud://username:password@host:port?org=name_of_org&amp;vapp=name_of_deployed_vapp&amp;catalog=name_of_catalog&amp;vappTemplate=name_of_vapp_template_in_catalog&amp;vdc=name_of_vdc
[/sourcecode]

As you can see, the vCloud Locator is a URL with all of the information needed to upload your OVF.

Because OVFtool is run from the command line, the simple choice when using Windows is to use the command prompt. Using the Windows command prompt, however, results in errors when uploading to vCloud Director:

[caption id="attachment_684" align="alignnone" width="490"]<a href="http://geekafterfive.files.wordpress.com/2012/08/snag-0164.png"><img class="size-full wp-image-684" title="ovftool error" src="http://geekafterfive.files.wordpress.com/2012/08/snag-0164.png" alt="ovftool error" width="490" height="55" /></a> ovftool error[/caption]

This is most likely because of the special characters ovftool uses in the URL (&amp;, :, ?, @). If I had to guess, I'd say it's the ampersand.

I tried quoting out the vCloud Locator several different ways to get it to understand, but resorted to Powershell to save the day once again.

[sourcecode language="powershell"]

$vCloudLocator = &quot;vcloud://jake:password@vcloud.example.com:443?org=jake&amp;vappTemplate=MyTemplate&amp;catalog=private&quot;

$sourceFile = &quot;C:\jake\MyVM.vmx&quot;

$ovftool = &quot;C:\Program Files\VMware\VMware OVF Tool\ovftool.exe&quot;

&amp; $ovftool $sourceFile $vCloudLocator

[/sourcecode]

Powershell treats the characters are part of the string, so we just simply pass the string as a parameter to OVFtool.

Hope this saves someone a headache! :D

For more OVFtool fun, check out my post on using <a title="Powers Combined: PowerCLI and OVFTool" href="http://geekafterfive.com/2011/10/07/powers-combined-powercli-and-ovftool/">OVF tool with PowerCLI with your vSphere session</a>!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>682</wp:post_id>
  <wp:post_date>2012-08-08 17:42:57</wp:post_date>
  <wp:post_date_gmt>2012-08-08 21:42:57</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>uploading-vms-to-vcloud-with-ovftool</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="error"><![CDATA[error]]></category>
  <category domain="post_tag" nicename="missing-vapp-key"><![CDATA[missing vapp key]]></category>
  <category domain="post_tag" nicename="open-virtualization-format"><![CDATA[Open Virtualization Format]]></category>
  <category domain="post_tag" nicename="ovf"><![CDATA[ovf]]></category>
  <category domain="post_tag" nicename="ovftool"><![CDATA[ovftool]]></category>
  <category domain="category" nicename="powershell"><![CDATA[Powershell]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-director"><![CDATA[vCloud Director]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="windows-powershell"><![CDATA[Windows Powershell]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Uploading VMs to #vCloud with OVFtool #Powershell #PowerCLI]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>746</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2013-03-03 17:15:23</wp:comment_date>
    <wp:comment_date_gmt>2013-03-03 22:15:23</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Unfortunately you can only upload a VM in OVF, not VMX. The only way to accomplish this in the public cloud is for a provider to make the changes.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>745</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362348923</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362348923.6163189411163330078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>745</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Yakobi]]></wp:comment_author>
    <wp:comment_author_email>michaelyaakoby@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>217.70.210.4</wp:comment_author_IP>
    <wp:comment_date>2013-03-03 15:10:35</wp:comment_date>
    <wp:comment_date_gmt>2013-03-03 20:10:35</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Following my tweets regarding setting VMX options such as pciHole.start as an org-admin, I was wondering if I upload a VMX with these ExtraConfig will this get through?
Thanks again,
Michael]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362347082</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362341436.0467090606689453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>751</wp:comment_id>
    <wp:comment_author><![CDATA[Gavin]]></wp:comment_author>
    <wp:comment_author_email>gavin.stephens@simplygeek.co.uk</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>130.246.247.13</wp:comment_author_IP>
    <wp:comment_date>2013-03-04 12:15:48</wp:comment_date>
    <wp:comment_date_gmt>2013-03-04 17:15:48</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[In Windows, &amp; is used for additional commands. You must use ^ to escape the &amp;.

vcloud://username:password@host:port?org=name_of_org^&amp;vapp=name_of_deployed_vapp^&amp;catalog=name_of_catalog^&amp;vappTemplate=name_of_vapp_template_in_catalog^&amp;vdc=name_of_vdc

But then I kept running into this.

Error: cURL error: Couldn't connect to server
Completed with errors

I'll stick with powershell too :-)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362506702</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362417349.50520801544189453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>748</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>76.248.244.226</wp:comment_author_IP>
    <wp:comment_date>2013-03-03 18:23:16</wp:comment_date>
    <wp:comment_date_gmt>2013-03-03 23:23:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Don't waste your time. It's not going to work. :) vCloud connector converts to OVF during the transfer process.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>747</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362352996</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362352996.1039741039276123046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>750</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Yakobi]]></wp:comment_author>
    <wp:comment_author_email>michaelyaakoby@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>62.219.123.187</wp:comment_author_IP>
    <wp:comment_date>2013-03-04 01:57:01</wp:comment_date>
    <wp:comment_date_gmt>2013-03-04 06:57:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Glad I asked before I spent so much time setting up the vCloud Connector...
Thank you very much.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>748</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362380221</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362380221.688201904296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>747</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Yakobi]]></wp:comment_author>
    <wp:comment_author_email>michaelyaakoby@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>217.70.210.4</wp:comment_author_IP>
    <wp:comment_date>2013-03-03 18:21:09</wp:comment_date>
    <wp:comment_date_gmt>2013-03-03 23:21:09</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Gotcha... Thanks.
One of the provider suggested I'll use "vCloud Connector" - will give it a try though its far too complex for what I wanted to do...]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>746</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362352869</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362352870.0830910205841064453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Cloud Automation with PowerCLI</title>
  <link>http://geekafterfive.com/2012/08/20/cloud-automation-with-powercli/</link>
  <pubDate>Mon, 20 Aug 2012 18:55:29 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=696</guid>
  <description></description>
  <content:encoded><![CDATA[I have the distinct privilege to present with Alan Renouf and Eric Williams this year at VMworld.

The session is entitled <a href="https://vmworld2012.activeevents.com/connect/sessionDetail.ww?SESSION_ID=2448" target="_blank">Automating Bare Metal to the Cloud and Beyond</a>.

In this session, Eric will demonstrate the use of PowerCLI and UCS PowerTool to quickly deploy your own cloud infrastructure with a single script. (Amazing!)

After the cloud is built, I will share how real world examples of how Bluelock uses PowerCLI from a provider standpoint. From on-boarding new clients to gathering performance statistics, PowerCLI is a big part of the automation strategy at Bluelock.

It doesn't end there! I will also share how vCloud Organization users and admins are using PowerCLI for reporting and automation of the public and hybrid cloud! You'll see some cool examples of how PowerCLI can best the vCloud Web UI!

Alan will be sharing some great PowerCLI learning resources as well, making this session not one to be missed.

So what are you waiting for? <a href="https://vmworld2012.activeevents.com/connect/sessionDetail.ww?SESSION_ID=2448" target="_blank">Go sign up!</a>

http://www.youtube.com/watch?v=M4fCFo0ljbk

&nbsp;]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>696</wp:post_id>
  <wp:post_date>2012-08-20 14:55:29</wp:post_date>
  <wp:post_date_gmt>2012-08-20 18:55:29</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>cloud-automation-with-powercli</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="2448"><![CDATA[2448]]></category>
  <category domain="post_tag" nicename="cloud-automation"><![CDATA[cloud automation]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="ucs-powertool"><![CDATA[ucs powertool]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-director"><![CDATA[vCloud Director]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmworld"><![CDATA[vmworld]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_twitter</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>[Now Released] vCloud User Training</title>
  <link>http://geekafterfive.com/2012/10/03/coming-soon-vcloud-user-training/</link>
  <pubDate>Wed, 03 Oct 2012 19:43:40 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=701</guid>
  <description></description>
  <content:encoded><![CDATA[<a href="http://www.trainsignal.com/VMware-vCloud-Director-Organizations-Training.aspx"><img class="wp-image-736 alignright" title="TrainSignal" alt="" src="http://geekafterfive.files.wordpress.com/2012/10/ts_jersey.png" height="235" width="235" /></a>

&nbsp;

A challenge for a lot of vCloud Providers is training the vCloud users. The current training available is for running your own vCloud Director environment, and what little there is  for the vCloud users is mixed with provider level stuff as well. This can be very confusing for the users, as you can imagine.

&nbsp;

&nbsp;

<strong>I am thrilled to say that <a href="http://www.trainsignal.com/VMware-vCloud-Director-Organizations-Training.aspx" target="_blank">TrainSignal</a> <span style="color:#008000;">now has</span> <del>will soon be coming out with</del> <a href="http://www.trainsignal.com/VMware-vCloud-Director-Organizations-Training.aspx" target="_blank">a course</a> specifically tailored to vCloud Users!</strong>

http://www.youtube.com/watch?v=dGLf0ZiBxt0

The course focuses on using vCloud from an Organization perspective. It includes real world examples, best practices, and pitfalls that I've fallen in so you don't have to! In addition, you'll learn about some cool tools available to users that integrate with a vCloud Organization.

<strong>If you are a provider:</strong> <a href="http://www.trainsignal.com/Contact-Us.aspx" target="_blank">Contact the TrainSignal team</a> to inquire how you can provide this course to your vCloud users.

<strong>If you are a user:</strong> Pass this info along to your vCloud Provider, or you can simply purchase <a href="http://www.trainsignal.com/VMware-vCloud-Director-Organizations-Training.aspx" target="_blank">the course</a>!

Shout outs to Sean and the rest of the TrainSignal team for all the hard work making my first authored course a reality!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>701</wp:post_id>
  <wp:post_date>2012-10-03 15:43:40</wp:post_date>
  <wp:post_date_gmt>2012-10-03 19:43:40</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>coming-soon-vcloud-user-training</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="cloud-computing"><![CDATA[Cloud computing]]></category>
  <category domain="post_tag" nicename="trainsignal"><![CDATA[TrainSignal]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware-vsphere"><![CDATA[VMware vSphere]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: Coming Soon: #vCloud User Training from @TrainSignal]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:209084;i:665;}s:2:"wp";a:1:{i:0;i:12;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:62:"http://geekafterfive.files.wordpress.com/2012/10/ts_jersey.png";s:6:"images";a:1:{s:62:"http://geekafterfive.files.wordpress.com/2012/10/ts_jersey.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2012/10/ts_jersey.png";s:5:"width";i:500;s:6:"height";i:500;s:4:"type";s:5:"image";s:4:"area";i:250000;s:9:"file_path";b:0;}}s:6:"videos";a:0:{}s:11:"image_count";i:1;s:6:"author";s:7:"9088041";s:7:"blog_id";s:8:"18937350";s:9:"mod_stamp";s:19:"2012-10-04 17:05:44";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>vCloud Director Snapshots with PowerCLI</title>
  <link>http://geekafterfive.com/2012/10/02/vcloud-director-snapshots-with-powercli/</link>
  <pubDate>Tue, 02 Oct 2012 21:47:22 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=729</guid>
  <description></description>
  <content:encoded><![CDATA[If you or your provider are already running vCloud Director 5.1, you now have access to take a single snapshot of your VMs!

If you want to play with snapshots in PowerCLI, you're going to need the module in this blog. PowerCLI 5.1 currently only supports the vCloud API 1.5, which means there are no 5.1 API capabilities yet. (I stress "yet." :D)

The module uses the current PowerCLI for it's session and API access, and then bolts on some 5.1 API snapshot magic.

To use the module, simply download the <a href="https://dl.dropbox.com/u/225399/vCloudSnapshots.psm1" target="_blank">.psm1 file</a> and:

[sourcecode language="powershell"]

Import-Module vCloudSnapshots.psm1

[/sourcecode]

After that, you'll have access to 4 cmdlets:

[sourcecode language="powershell"]

Get-CISnapshot
New-CISnapshot
Remove-CISnapshot
Set-CISnapshot

[/sourcecode]

To get snapshots:

[sourcecode language="powershell"]

# Get vApps with Snapshots
Get-CIVapp | Get-CISnapshot

# Get VMs with Snapshots
Get-CIVM | Get-CISnapshot

# Get Snapshot info for a particular VM
Get-CIVM &quot;MyVM&quot; | GetCISnapshot

[/sourcecode]

It should be noted that all the cmdlets apply to a VM or vApp, so always make sure you're doing a Get-CIVM or Get-CIVapp first.

For example...here's creating, reverting, and removing:

[sourcecode language="powershell"]

# Create a snapshot for a vApp (or all VMs in the vApp, really.)
Get-CIVApp &quot;MyVApp&quot; | New-CISnapshot

# Revert to our snapshot
Get-CIVApp &quot;MyVApp&quot; | Set-CISnapshot -revertToCurrent

# Remove our snapshot
Get-CIVApp &quot;MyVApp&quot; | Remove-CISnapshot

[/sourcecode]

For more help, just use <span style="color:#0000ff;">Get-Help</span> and the command!

<a href="https://dl.dropbox.com/u/225399/vCloudSnapshots.psm1" target="_blank">vCloud Snapshots Powershell Module</a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>729</wp:post_id>
  <wp:post_date>2012-10-02 17:47:22</wp:post_date>
  <wp:post_date_gmt>2012-10-02 21:47:22</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vcloud-director-snapshots-with-powercli</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powershell-2"><![CDATA[powershell]]></category>
  <category domain="post_tag" nicename="snapshots"><![CDATA[snapshots]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-api"><![CDATA[vCloud API]]></category>
  <category domain="post_tag" nicename="vcloud-director-5-1"><![CDATA[vcloud director 5.1]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="windows-powershell"><![CDATA[Windows Powershell]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: #vCloud Director Snapshots with #PowerCLI]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:209084;i:662;}s:2:"wp";a:1:{i:0;i:12;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Creating new vCloud Organization users with PowerCLI</title>
  <link>http://geekafterfive.com/2012/12/03/creating-new-vcloud-organization-users-with-powercli/</link>
  <pubDate>Mon, 03 Dec 2012 20:34:10 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=758</guid>
  <description></description>
  <content:encoded><![CDATA[&nbsp;

There is not a New-CIUser cmdlet *yet*, but I'll show you the way you can do it now!

We'll need 3 things: A username, a password, and a role.

To get the role we want to assign the user, we'll need to use Search-Cloud:
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#0000ff;">Search-Cloud </span><span style="color:#000080;">-QueryType </span><span style="color:#8a2be2;">Role </span><span style="color:#a9a9a9;">| </span><span style="color:#0000ff;">select </span><span style="color:#8a2be2;">Name </span></p>

</div>
This will give us a list of roles. Pick a role name. As an example, I want to add an Org admin, so I am going to run this:
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$role </span><span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">Search-Cloud </span><span style="color:#000080;">-QueryType </span><span style="color:#8a2be2;">Role </span><span style="color:#000080;">-Name </span><span style="color:#8b0000;">"Organization Administrator" </span><span style="color:#a9a9a9;">| </span><span style="color:#0000ff;">Get-CIView </span></p>

</div>
The previous line queried for the role, retrieved the role object using Get-CIView and assigned it to the $role variable.

Congrats, that was the hardest part... on to the good stuff!

We need to do two things next... Get our Org object, and create a new user object:
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$org </span><span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">Get-Org</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$user </span><span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">New-Object </span><span style="color:#8a2be2;">VMware.VimAutomation.Cloud.Views.User </span></p>

</div>
Now we assign the fun stuff to our user object (name, password, role)!
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$user</span><span style="color:#a9a9a9;">.</span>Name <span style="color:#a9a9a9;">=</span><span style="color:#8b0000;">"JakeRobinson"</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$user</span><span style="color:#a9a9a9;">.</span>Password <span style="color:#a9a9a9;">= </span><span style="color:#8b0000;">"myPassword"</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$user</span><span style="color:#a9a9a9;">.</span>Role <span style="color:#a9a9a9;">= </span><span style="color:#ff4500;">$role</span><span style="color:#a9a9a9;">.</span>href</p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$user</span><span style="color:#a9a9a9;">.</span>IsEnabled <span style="color:#a9a9a9;">= </span><span style="color:#ff4500;">$true </span></p>

</div>
and finally, we push the user object to our Org:
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$org</span><span style="color:#a9a9a9;">.</span>ExtensionData<span style="color:#a9a9a9;">.</span>createUser(<span style="color:#ff4500;">$user</span>)</p>

</div>
So that's it! Probably 10 lines of code and we have a new user. The secret is really in the .extensiondata of the objects like $org.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>758</wp:post_id>
  <wp:post_date>2012-12-03 15:34:10</wp:post_date>
  <wp:post_date_gmt>2012-12-03 20:34:10</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>creating-new-vcloud-organization-users-with-powercli</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="user"><![CDATA[user]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-api"><![CDATA[vCloud API]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:209084;i:698;}s:2:"wp";a:1:{i:0;i:13;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[jakerobinson]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: Creating new #vCloud Organization users with #PowerCLI]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>755</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2013-03-06 10:33:01</wp:comment_date>
    <wp:comment_date_gmt>2013-03-06 15:33:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Tim,

In the vCloud API Schema reference, you can find the user element by clicking on all elements, and then clicking on user. In there, you will find the PUT method for the user object:

https://www.vmware.com/support/vcd/doc/rest-api-doc-1.5-html/types/UserType.html

Good luck!
Cheers,

Jake]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>749</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362583981</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362583981.6597049236297607421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>749</wp:comment_id>
    <wp:comment_author><![CDATA[Tim P.]]></wp:comment_author>
    <wp:comment_author_email>tim.prest@telusplanet.ca</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>70.75.132.70</wp:comment_author_IP>
    <wp:comment_date>2013-03-04 01:25:39</wp:comment_date>
    <wp:comment_date_gmt>2013-03-04 06:25:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Could you please maybe explain how did you find how to push the user object into the Org? Where is this method documented? A search for "createUser" in the Doc Center is not much help. An explanation on how to find the method and its syntax would be great. Thanks!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1362378339.8250210285186767578125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1362378437</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>774</wp:comment_id>
    <wp:comment_author><![CDATA[Tim P.]]></wp:comment_author>
    <wp:comment_author_email>tim.prest@telusplanet.ca</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>70.75.132.70</wp:comment_author_IP>
    <wp:comment_date>2013-03-16 00:30:40</wp:comment_date>
    <wp:comment_date_gmt>2013-03-16 04:30:40</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I am still confused by this. I did go to the link above, I do see a "PUT /admin/user/{id}" at the bottom of the page. However i fail to see the link between this and how this was invoked in:
$org.ExtensionData.createUser($user)
To put it from a different perspective I am wondering how how would you research and get the methods and their syntax available in the ExtensionData of an object. Thanks for replying and any feedback would be greatly appreciated! Tim.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1363408240.6085379123687744140625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1363408240</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>vCloud API 5.1 Metadata</title>
  <link>http://geekafterfive.com/2013/02/20/vcloud-api-5-1-metadata/</link>
  <pubDate>Wed, 20 Feb 2013 17:54:52 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=769</guid>
  <description></description>
  <content:encoded><![CDATA[There has been very good coverage and code samples for working with Metadata in vCloud Director 1.5 (See posts from <a href="http://blogs.vmware.com/vsphere/2012/03/creating-custom-metadata-using-the-vcloud-api.html" target="_blank">William</a>, <a href="http://blogs.vmware.com/vipowershell/2012/03/working-with-vcloud-metadata-in-powercli.html" target="_blank">Alan</a>, and <a href="http://velemental.com/2012/03/29/managing-metadata-in-vcd-with-powercli/" target="_blank">Clinton</a>), so this will simply be an update post for Metadata in vCloud Director 5.1.
<h3><span style="color:#3366ff;">What's different?</span></h3>
<ol>
	<li><a href="http://pubs.vmware.com/vcd-51/topic/com.vmware.vcloud.api.reference.doc_51/doc/types/MetadataTypedValue.html" target="_blank">Typed Values</a> - Metadata must now be put into a certain type. No more throwing random junk into a single metadata entry. :D</li>
	<li><a href="http://pubs.vmware.com/vcd-51/topic/com.vmware.vcloud.api.reference.doc_51/doc/types/MetadataDomainTagType.html" target="_blank">Domain and Visibility</a> - Providers now have the ability to provide System metadata entries on objects, which is not editable by users. Providers can additionally make the metadata private, meaning the users cannot see the System metadata on the object at all.</li>
	<li><a href="http://pubs.vmware.com/vcd-51/topic/com.vmware.vcloud.api.reference.doc_51/doc/types/MetadataType.html" target="_blank">Objects</a> - Metadata can now be added to new vCloud Director 5.1 objects, including disks and storage profiles. Additionally, I believe that because OrgVDC networks are now user manageable, vCloud users can add their own metadata to networks.</li>
</ol>
For more instruction on Metadata in the vCloud API, read <a href="http://pubs.vmware.com/vcd-51/index.jsp?topic=%2Fcom.vmware.vcloud.api.doc_51%2FGUID-8D8C68F0-AC63-4134-A57E-326E510FC690.html" target="_blank">"Working with Object Metadata"</a> in the vCloud Programming Guide.
<h3><span style="color:#3366ff;">PowerCLI 5.1 R2 example:</span></h3>
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$vapp </span><span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">Get-CIVapp </span><span style="color:#8b0000;">"MyVApp"</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$metadata </span><span style="color:#a9a9a9;">= </span><span style="color:#ff4500;">$vapp</span><span style="color:#a9a9a9;">.</span>extensiondata<span style="color:#a9a9a9;">.</span>GetMetadata()</p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$metadata</span><span style="color:#a9a9a9;">.</span>MetadataEntry <span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">New-Object </span><span style="color:#8a2be2;">VMware.VimAutomation.Cloud.Views.MetadataEntry</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#006400;"># I don't have any other metadata, so index is [0].</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$metadata</span><span style="color:#a9a9a9;">.</span>MetadataEntry<span style="color:#a9a9a9;">[</span><span style="color:#800080;">0</span><span style="color:#a9a9a9;">].</span>Key <span style="color:#a9a9a9;">= </span><span style="color:#8b0000;">"Jake"</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$metadata</span><span style="color:#a9a9a9;">.</span>MetadataEntry<span style="color:#a9a9a9;">[</span><span style="color:#800080;">0</span><span style="color:#a9a9a9;">].</span>TypedValue <span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">New-Object </span><span style="color:#8a2be2;">VMware.VimAutomation.Cloud.Views.MetadataStringValue</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$metadata</span><span style="color:#a9a9a9;">.</span>MetadataEntry<span style="color:#a9a9a9;">[</span><span style="color:#800080;">0</span><span style="color:#a9a9a9;">].</span>TypedValue<span style="color:#a9a9a9;">.</span>Value <span style="color:#a9a9a9;">= </span><span style="color:#8b0000;">"vCloudNerd"</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$vapp</span><span style="color:#a9a9a9;">.</span>ExtensionData<span style="color:#a9a9a9;">.</span>CreateMetadata(<span style="color:#ff4500;">$metadata</span>)</p>

</div>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>769</wp:post_id>
  <wp:post_date>2013-02-20 12:54:52</wp:post_date>
  <wp:post_date_gmt>2013-02-20 17:54:52</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vcloud-api-5-1-metadata</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="metadata"><![CDATA[Metadata]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-5-1"><![CDATA[vcloud 5.1]]></category>
  <category domain="post_tag" nicename="vcloud-api"><![CDATA[vCloud API]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:209084;i:817;}s:2:"wp";a:1:{i:0;i:16;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: #vCloud API 5.1 Metadata http://wp.me/p1hst8-cp #PowerCLI]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[jakerobinson]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>723</wp:comment_id>
    <wp:comment_author><![CDATA[Burke]]></wp:comment_author>
    <wp:comment_author_email>burke@vmware.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.vcoteam.info</wp:comment_author_url>
    <wp:comment_author_IP>96.255.41.53</wp:comment_author_IP>
    <wp:comment_date>2013-02-20 15:03:54</wp:comment_date>
    <wp:comment_date_gmt>2013-02-20 20:03:54</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[And, just in case you want to do similar using vCenter Orchestrator, Christophe released a package for vCD 5.1 here: http://communities.vmware.com/docs/DOC-20475 
and vCD 1.5 here:
http://communities.vmware.com/docs/DOC-20474]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1361392020</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1361390634.979362010955810546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>725</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jacob.m.robinson@gmail.com</wp:comment_author_email>
    <wp:comment_author_url>http://geekafterfive.com</wp:comment_author_url>
    <wp:comment_author_IP>23.25.57.9</wp:comment_author_IP>
    <wp:comment_date>2013-02-20 15:30:39</wp:comment_date>
    <wp:comment_date_gmt>2013-02-20 20:30:39</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks Burke!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>723</wp:comment_parent>
    <wp:comment_user_id>9088041</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1361392241</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1361392241.888278961181640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:14:"jacobmrobinson";}</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>vCloud 5.1 API Support in PowerCLI 5.1 R2</title>
  <link>http://geekafterfive.com/2013/02/11/vcloud-5-1-api-support-in-powercli-5-1-r2/</link>
  <pubDate>Tue, 12 Feb 2013 03:36:41 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=771</guid>
  <description></description>
  <content:encoded><![CDATA[Quite a few people have been asking about vCloud 5.1 feature support in PowerCLI. Guess what: It's <a href="http://vmware.com/go/powercli" target="_blank">here</a>! PowerCLI 5.1 R2 has officially dropped, and the new vCloud 5.1 features are built in!

You will find all the new 5.1 API properties and methods in the .extensiondata of objects such as a VM returned by Get-CIVM. Snapshots come to mind as a frequent request. Here's how to find them:
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$vm</span><span style="color:#a9a9a9;">=</span><span style="color:#0000ff;">Get-CIVM </span><span style="color:#8b0000;">"MyVM"</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$vm</span><span style="color:#a9a9a9;">.</span>ExtensionData <span style="color:#a9a9a9;">| </span><span style="color:#0000ff;">Get-Member</span></p>

</div>
The .extensiondata property is really the same object as you would get from the Get-CIView cmdlet.

So, lets say we wanted to find out what new fancy 5.1 VM snapshot properties and methods are available to us:
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$vm</span><span style="color:#a9a9a9;">=</span><span style="color:#0000ff;">Get-CIVM </span><span style="color:#8b0000;">"MyVM"</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$vm</span><span style="color:#a9a9a9;">.</span>ExtensionData <span style="color:#a9a9a9;">| </span><span style="color:#0000ff;">Get-Member</span><span style="color:#8a2be2;">*snapshot*</span></p>

</div>
<p style="text-align:center;"><a href="http://geekafterfive.files.wordpress.com/2013/02/snag-0207.png"><img class="size-full wp-image-772 aligncenter" alt="PowerCLI snapshots" src="http://geekafterfive.files.wordpress.com/2013/02/snag-0207.png" width="490" height="158" /></a></p>
From this,  we see that we now have the ability to automate the creation, removal and revert of snapshots in vCloud Director 5.1!

Creating, Reporting on, and Removing snapshots is now easy!
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#006400;"># Create Snapshot (Snapshot memory false, quiece true, snapshot name, description)</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$vm</span><span style="color:#a9a9a9;">.</span>extensiondata<span style="color:#a9a9a9;">.</span>CreateSnapshot(<span style="color:#ff4500;">$false</span><span style="color:#a9a9a9;">,</span><span style="color:#ff4500;">$true</span><span style="color:#a9a9a9;">,</span><span style="color:#8b0000;">"Snapshot"</span><span style="color:#a9a9a9;">,</span><span style="color:#8b0000;">"Description"</span>)

</p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#006400;"># Get VM snapshot</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$vm</span><span style="color:#a9a9a9;">.</span>ExtensionData<span style="color:#a9a9a9;">.</span>GetSnapshotSection()<span style="color:#a9a9a9;">.</span>snapshot

</p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#006400;"># Remove Snapshots</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$vm</span><span style="color:#a9a9a9;">.</span>ExtensionData<span style="color:#a9a9a9;">.</span>RemoveAllSnapshots()</p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"></p>
<p style="font-family:'Lucida Console';margin:0;background-color:#ffffff;text-align:center;"><a href="http://geekafterfive.files.wordpress.com/2013/02/snag-0215.png"><img class="size-full wp-image-776 aligncenter" alt="SNAG-0215" src="http://geekafterfive.files.wordpress.com/2013/02/snag-0215.png" width="490" height="111" /></a></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"></p>

</div>
Let's check out another one. Edge Gateways are new in vCloud Director 5.1. How do we find those without any new cmdlets? Search-Cloud!
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#0000ff;">Search-Cloud </span><span style="color:#000080;">-QueryType </span><span style="color:#8a2be2;">EdgeGateway </span><span style="color:#a9a9a9;">| </span><span style="color:#0000ff;">Get-CIView </span></p>

</div>
Search-Cloud returns a search object, and from this we can get the .NET object with all the properties and methods.
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$edge </span><span style="color:#a9a9a9;">| </span><span style="color:#0000ff;">Get-Member </span></p>

</div>
<a href="http://geekafterfive.files.wordpress.com/2013/02/snag-0210.png"><img class="aligncenter size-full wp-image-774" alt="Edge Gateway in PowerCLI" src="http://geekafterfive.files.wordpress.com/2013/02/snag-0210.png" width="490" height="275" /></a>

Note that we don't have to use the .extensiondata, because we used Get-CIView to directly get the .NET object.

Let's check out the .configuration!
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$edge</span><span style="color:#a9a9a9;">.</span>configuration</p>

</div>
<p style="text-align:center;"><a href="http://geekafterfive.files.wordpress.com/2013/02/snag-0212.png"><img class="size-full wp-image-775 aligncenter" alt="PowerCLI Edge Gateway Configuration" src="http://geekafterfive.files.wordpress.com/2013/02/snag-0212.png" width="490" height="110" /></a></p>
Both the vCloud Admin and Tenant PowerCLI snap-ins have been updated, so if your cloud provider is running on 5.1, enjoy the new features!

Now, this is certainly not all <strong>PowerCLI 5.1 R2</strong> has to offer.  <strong>Powershell 3 support</strong> as well as an <strong>official VDS snap-in</strong> are also available! You can read more about these updates on the <a href="http://blogs.vmware.com/vipowershell/2013/02/powercli-5-1-release-2-now-available.html" target="_blank">Official PowerCLI Blog!</a> For tons of <strong>VDS examples</strong>, See <a href="http://www.virtu-al.net/2013/02/11/powercli-5-1-r2-released/" target="_blank">Alan's post</a>!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>771</wp:post_id>
  <wp:post_date>2013-02-11 22:36:41</wp:post_date>
  <wp:post_date_gmt>2013-02-12 03:36:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vcloud-5-1-api-support-in-powercli-5-1-r2</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="5-1"><![CDATA[5.1]]></category>
  <category domain="post_tag" nicename="alan-renouf"><![CDATA[alan renouf]]></category>
  <category domain="post_tag" nicename="edge-gateway"><![CDATA[edge gateway]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="category" nicename="powershell"><![CDATA[Powershell]]></category>
  <category domain="post_tag" nicename="snapshots"><![CDATA[snapshots]]></category>
  <category domain="post_tag" nicename="vcd"><![CDATA[vcd]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post! #vCloud 5.1 API Support in #PowerCLI 5.1 R2]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[jakerobinson]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>vCloud VM and VApp Backups with PowerCLI</title>
  <link>http://geekafterfive.com/2013/02/15/vcloud-vm-and-vapp-backups-with-powercli/</link>
  <pubDate>Fri, 15 Feb 2013 21:38:35 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=784</guid>
  <description></description>
  <content:encoded><![CDATA[<a href="http://geekafterfive.files.wordpress.com/2013/02/snag-0230.png"><img class="alignnone size-full wp-image-789" alt="vcloud backups" src="http://geekafterfive.files.wordpress.com/2013/02/snag-0230.png" width="490" height="211" /></a>

There are times when a snapshot doesn't cut it, and asking the Backup Administrator or Cloud Provider to set up backups doesn't make sense. Just a couple examples I've run into as a Cloud Provider:
<ul>
	<li>Upgrades with testing could take longer than a snapshot should exist for.</li>
	<li>Temporary workloads may need backups for "warm storage"</li>
</ul>
So where is the in-between? Wouldn't it be great to hot clone a VM or VApp with some light scheduling and retention capabilities?
<h2 style="text-align:left;"><span style="color:#3366ff;">vCloudBackups is the Powershell module for doing this.</span></h2>
The vCloudBackups powershell module allows you to create local backups of VMs and vApps at any cloud provider running vCloud Director 1.5 or 5.1. By local, I mean the VMs and vApps will currently be cloned to the same storage the workloads are currently running on. If you don't trust your SAN with this level of backup, you probably need to talk to you Backup Administrator or cloud provider for that off-site backup. :)
<h2><span style="color:#3366ff;">How does it work?</span></h2>
Very simply, the module is just doing hot-clones of VMs or vApps through the vCloud API. When backing up just VMs, they are stored inside a vApp simply called 'Backups.' Each VM backup is named with the vApp origination, VM name, and a date/time of the backup.

VApp backups are simply just exact copies of the originals, except named titled as Backup with a date/time of the backup.

"Retention" is built into the module as a number to keep. The oldest will automatically be deleted.

Scheduling is accomplished through your Windows Task Scheduler and an included script called MyBackups.ps1. Credentials for your vCloud Director login are stored encrypted in a configuration file, meaning NO PLAIN TEXT PASSWORDS!

If you are interested in the vCloud Backups script, please contact me on <a href="twitter.com/jakerobinson" target="_blank">Twitter</a>, <a href="https://plus.google.com/102640615339992680317/" target="_blank">Google+</a>, or the comments below.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>784</wp:post_id>
  <wp:post_date>2013-02-15 16:38:35</wp:post_date>
  <wp:post_date_gmt>2013-02-15 21:38:35</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>vcloud-vm-and-vapp-backups-with-powercli</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="backup"><![CDATA[backup]]></category>
  <category domain="post_tag" nicename="backups"><![CDATA[backups]]></category>
  <category domain="post_tag" nicename="bluelock"><![CDATA[Bluelock]]></category>
  <category domain="post_tag" nicename="cloud-computing"><![CDATA[Cloud computing]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="category" nicename="powershell"><![CDATA[Powershell]]></category>
  <category domain="post_tag" nicename="script"><![CDATA[script]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vcloud-api"><![CDATA[vCloud API]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:209084;i:789;}s:2:"wp";a:1:{i:0;i:16;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:62:"http://geekafterfive.files.wordpress.com/2013/02/snag-0230.png";s:6:"images";a:1:{s:62:"http://geekafterfive.files.wordpress.com/2013/02/snag-0230.png";a:6:{s:8:"file_url";s:62:"http://geekafterfive.files.wordpress.com/2013/02/snag-0230.png";s:5:"width";i:732;s:6:"height";i:316;s:4:"type";s:5:"image";s:4:"area";i:231312;s:9:"file_path";b:0;}}s:6:"videos";a:0:{}s:11:"image_count";i:1;s:6:"author";s:7:"9088041";s:7:"blog_id";s:8:"18937350";s:9:"mod_stamp";s:19:"2013-02-15 21:38:35";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: #vCloud VM and VApp Backups with #PowerCLI! #vmware]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[jakerobinson]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>826</wp:comment_id>
    <wp:comment_author><![CDATA[Chris]]></wp:comment_author>
    <wp:comment_author_email>netservicesusa@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>204.87.171.100</wp:comment_author_IP>
    <wp:comment_date>2013-04-23 17:09:57</wp:comment_date>
    <wp:comment_date_gmt>2013-04-23 21:09:57</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[This would come in very handy for me. I frequently have to manually clone certain vApps to satisfy developer needs. Can you share the backup script by chance?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1366751398.3615360260009765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:6:"nsusa3";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1367068636</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>817</wp:comment_id>
    <wp:comment_author><![CDATA[Creating a test vCloud system using Autolab | Virtual Mountain]]></wp:comment_author>
    <wp:comment_author_email></wp:comment_author_email>
    <wp:comment_author_url>http://virtualmountain.wordpress.com/2013/04/19/creating-a-test-vcloud-system-using-autolab/</wp:comment_author_url>
    <wp:comment_author_IP>72.232.7.65</wp:comment_author_IP>
    <wp:comment_date>2013-04-19 11:02:55</wp:comment_date>
    <wp:comment_date_gmt>2013-04-19 15:02:55</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] vCloud VM and VApp Backups with PowerCLI (geekafterfive.com) [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1366383775.4230229854583740234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1366462549</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>841</wp:comment_id>
    <wp:comment_author><![CDATA[Jake]]></wp:comment_author>
    <wp:comment_author_email>jakec2570@gmail.com</wp:comment_author_email>
    <wp:comment_author_url></wp:comment_author_url>
    <wp:comment_author_IP>158.147.114.114</wp:comment_author_IP>
    <wp:comment_date>2013-05-23 10:12:01</wp:comment_date>
    <wp:comment_date_gmt>2013-05-23 14:12:01</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[I would be interested in this script as well!]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type></wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1369522809</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1369318321.6416919231414794921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Setting Default VDSwitch security for vCloud with PowerCLI</title>
  <link>http://geekafterfive.com/2013/03/14/setting-default-vdswitch-security-for-vcloud-with-powercli/</link>
  <pubDate>Thu, 14 Mar 2013 19:30:24 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=805</guid>
  <description></description>
  <content:encoded><![CDATA[Working as a public <a href="http://bluelock.com" target="_blank">vCloud provider</a> periodically gives me the opportunity to help clients that are running their own private vCloud. It's a great side benefit to working with an experienced public vCloud provider in case you need some advanced help, or custom code/scripting!

In this case, my client needed to set <strong>default</strong> security permissions for all new VDPortgroups that were <strong>created by vCloud Director</strong>. This is different than setting security on a single portgroup. This sets the <strong>defaults for ALL portgroups</strong> created <strong>after</strong> the setting change! This is very handy when the network creation is out of our hands. :D
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#006400;">############################################</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#006400;"># Configuration Settings                   #</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#006400;">############################################</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$switchName</span><span style="color:#a9a9a9;">=</span><span style="color:#8b0000;">"dvSwitch"</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$promiscuous</span><span style="color:#a9a9a9;">=</span><span style="color:#ff4500;">$true</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$forgedTransmits</span><span style="color:#a9a9a9;">=</span><span style="color:#ff4500;">$false</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$macChanges</span><span style="color:#a9a9a9;">=</span><span style="color:#ff4500;">$false</span></p>
&nbsp;
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#006400;">###################################################</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#006400;"># Shouldn't need to edit anything below this line #</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#006400;">###################################################</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$dvSwitch </span><span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">Get-VDSwitch </span><span style="color:#ff4500;">$switchname</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$spec </span><span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">New-Object </span><span style="color:#8a2be2;">VMware.Vim.VMwareDVSConfigSpec</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$spec</span><span style="color:#a9a9a9;">.</span>configVersion <span style="color:#a9a9a9;">= </span><span style="color:#ff4500;">$dvswitch</span><span style="color:#a9a9a9;">.</span>ExtensionData<span style="color:#a9a9a9;">.</span>Config<span style="color:#a9a9a9;">.</span>ConfigVersion</p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$spec</span><span style="color:#a9a9a9;">.</span>DefaultPortConfig <span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">New-Object </span><span style="color:#8a2be2;">VMware.Vim.VMwareDVSPortSetting</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$spec</span><span style="color:#a9a9a9;">.</span>DefaultPortConfig<span style="color:#a9a9a9;">.</span>SecurityPolicy <span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">New-Object </span><span style="color:#8a2be2;">VMware.Vim.DVSSecurityPolicy</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$spec</span><span style="color:#a9a9a9;">.</span>DefaultPortConfig<span style="color:#a9a9a9;">.</span>SecurityPolicy<span style="color:#a9a9a9;">.</span>AllowPromiscuous <span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">New-Object </span><span style="color:#8a2be2;">VMware.Vim.BoolPolicy</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$spec</span><span style="color:#a9a9a9;">.</span>DefaultPortConfig<span style="color:#a9a9a9;">.</span>SecurityPolicy<span style="color:#a9a9a9;">.</span>AllowPromiscuous<span style="color:#a9a9a9;">.</span>Value <span style="color:#a9a9a9;">= </span><span style="color:#ff4500;">$promiscuous</span></p>
&nbsp;
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$spec</span><span style="color:#a9a9a9;">.</span>DefaultPortConfig<span style="color:#a9a9a9;">.</span>SecurityPolicy<span style="color:#a9a9a9;">.</span>MacChanges <span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">New-Object</span><span style="color:#8a2be2;">VMware.Vim.BoolPolicy</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$spec</span><span style="color:#a9a9a9;">.</span>DefaultPortConfig<span style="color:#a9a9a9;">.</span>SecurityPolicy<span style="color:#a9a9a9;">.</span>MacChanges<span style="color:#a9a9a9;">.</span>Value <span style="color:#a9a9a9;">= </span><span style="color:#ff4500;">$macChanges</span></p>
&nbsp;
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$spec</span><span style="color:#a9a9a9;">.</span>DefaultPortConfig<span style="color:#a9a9a9;">.</span>SecurityPolicy<span style="color:#a9a9a9;">.</span>ForgedTransmits <span style="color:#a9a9a9;">= </span><span style="color:#0000ff;">New-Object </span><span style="color:#8a2be2;">VMware.Vim.BoolPolicy</span></p>
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$spec</span><span style="color:#a9a9a9;">.</span>DefaultPortConfig<span style="color:#a9a9a9;">.</span>SecurityPolicy<span style="color:#a9a9a9;">.</span>ForgedTransmits<span style="color:#a9a9a9;">.</span>Value <span style="color:#a9a9a9;">= </span><span style="color:#ff4500;">$forgedTransmits</span></p>
&nbsp;
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"><span style="color:#ff4500;">$dvswitch</span><span style="color:#a9a9a9;">.</span>ExtensionData<span style="color:#a9a9a9;">.</span>ReconfigureDvs_Task(<span style="color:#ff4500;">$spec</span>)</p>

</div>
I've written about getting around the missing dvPortgroup inheritance in the past, and there are also a couple good posts from Luc Dekens and Alan Renouf:

http://geekafterfive.com/2011/04/04/dvportgroup-inheritance/

http://www.lucd.info/2009/10/12/dvswitch-scripting-part-2-dvportgroup/

http://blogs.vmware.com/vipowershell/2011/11/vsphere-distributed-switch-powercli-cmdlets.html

Last but not least, special thanks to <a href="https://twitter.com/lamw" target="_blank">William Lam</a> for pointing me to the right spot in the API. :)]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>805</wp:post_id>
  <wp:post_date>2013-03-14 15:30:24</wp:post_date>
  <wp:post_date_gmt>2013-03-14 19:30:24</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>setting-default-vdswitch-security-for-vcloud-with-powercli</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="dvportgroups"><![CDATA[dvPortgroups]]></category>
  <category domain="post_tag" nicename="forgedtransmits"><![CDATA[forgedtransmits]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="promiscuous"><![CDATA[promiscuous]]></category>
  <category domain="post_tag" nicename="security"><![CDATA[security]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="vdportgroup"><![CDATA[vdportgroup]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="category" nicename="vsphere-vmware"><![CDATA[vSphere]]></category>
  <wp:postmeta>
    <wp:meta_key>_oembed_e81db1249b4d405f03fa660519f43b92</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[Setting Default VDSwitch security for #vCloud with #PowerCLI]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_bf86348ed769c525f7f38461bd5191b7</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_reach</wp:meta_key>
    <wp:meta_value><![CDATA[a:2:{s:7:"twitter";a:1:{i:209084;i:856;}s:2:"wp";a:1:{i:0;i:17;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_skip_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_78d2c278df8757d89596bcbaa5418530</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_17770d5861142fac30f7476f988e9063</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[jakerobinson]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_11ab174c89800844cebf85a6ddf088be</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_8bf513c848613f2908632fe76e1a082c</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_de6e92301f59153810736170721bbea5</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>tagazine-media</wp:meta_key>
    <wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";i:0;s:6:"author";s:7:"9088041";s:7:"blog_id";s:8:"18937350";s:9:"mod_stamp";s:19:"2013-03-14 19:30:24";}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_6cf7aeb4816bf45872a8c45061c383ee</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_c1f4ac44e2676bf59e84aaba6367d522</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_cfdc90a02ebed811bef4a46367beeff6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_833a3a7ec014f68657e25ed3d6cdaf02</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_1b65fc880264bb4f6e829d00fee092dc</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_88cf3d4a17fa5b9c2d6b254fd451e597</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_4f595f07d3c6e31a1e270709d26bc435</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_oembed_40cee69c7bec1ba8e6f3cc777a7341b6</wp:meta_key>
    <wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>Simple VM reporting in vCloud with PowerCLI</title>
  <link>http://geekafterfive.com/2013/03/21/simple-vm-reporting-in-vcloud-with-powercli/</link>
  <pubDate>Thu, 21 Mar 2013 18:49:06 +0000</pubDate>
  <dc:creator>jacobmrobinson</dc:creator>
  <guid isPermaLink="false">http://geekafterfive.com/?p=812</guid>
  <description></description>
  <content:encoded><![CDATA[Because of the unique requirement of VMs to exist inside vApps in vCloud Director, it's a challenge to get a nice view of all the VMs and their locations within your vCloud Organization. This can mostly be satisfied with a <span style="color:#3366ff;">Get-CIVM</span> command, which will return great info about your VMs, but it's missing the storage assignment. Here's a sweet little script to report specifically on the VM resources in use inside your vCloud Organization:

[sourcecode language="powershell"]

$vms = get-civm
$objects = @()

foreach($vm in $vms)
{
 $hardware = $vm.ExtensionData.GetVirtualHardwareSection()
 $diskMB = (($hardware.Item | where {$_.resourcetype.value -eq &quot;17&quot;}) | %{$_.hostresource[0].anyattr[0].&quot;#text&quot;} | Measure-Object -Sum).sum
 $row = New-Object PSObject -Property @{&quot;vapp&quot; = $vm.vapp; &quot;name&quot;=$vm.Name;&quot;cpuCount&quot;=$vm.CpuCount;&quot;memoryGB&quot;=$vm.MemoryGB;&quot;storageGB&quot;=($diskMB/1024)}
 $objects += $row
}

# Use select object to get the column order right. Sort by vApp. Force table formatting and auto-width.
$objects | select-Object name,vapp,cpuCount,memoryGB,storageGB | Sort-Object -Property vapp | Format-Table -AutoSize

[/sourcecode]
<div style="text-align:Left;font-family:Segoe UI;font-style:normal;font-weight:normal;font-size:12px;color:#000000;">
<p style="font-family:Lucida Console;margin:0;background-color:#ffffff;"></p>

</div>
You can easily export to a CSV by using <span style="color:#3366ff;">Export-CSV</span> or just run the report to get output that looks something like this:

<a href="http://geekafterfive.files.wordpress.com/2013/03/snag-0380.png"><img class="alignnone size-full wp-image-813" alt="VMreport" src="http://geekafterfive.files.wordpress.com/2013/03/snag-0380.png" width="490" height="211" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>812</wp:post_id>
  <wp:post_date>2013-03-21 14:49:06</wp:post_date>
  <wp:post_date_gmt>2013-03-21 18:49:06</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>simple-vm-reporting-in-vcloud-with-powercli</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password></wp:post_password>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="post_tag" nicename="bluelock"><![CDATA[Bluelock]]></category>
  <category domain="category" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="powercli"><![CDATA[PowerCLI]]></category>
  <category domain="post_tag" nicename="reporting"><![CDATA[reporting]]></category>
  <category domain="post_tag" nicename="vapp"><![CDATA[vApp]]></category>
  <category domain="post_tag" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="category" nicename="vcloud"><![CDATA[vCloud]]></category>
  <category domain="post_tag" nicename="virtual-machine"><![CDATA[Virtual machine]]></category>
  <category domain="category" nicename="vmware"><![CDATA[vmware]]></category>
  <category domain="post_tag" nicename="vmware"><![CDATA[vmware]]></category>
  <wp:postmeta>
    <wp:meta_key>_wpas_mess</wp:meta_key>
    <wp:meta_value><![CDATA[New Post: Simple VM reporting in #vCloud with #PowerCLI]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>publicize_twitter_user</wp:meta_key>
    <wp:meta_value><![CDATA[jakerobinson]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_wpas_done_209084</wp:meta_key>
    <wp:meta_value><![CDATA[1]]></wp:meta_value>
  </wp:postmeta>
  <wp:postmeta>
    <wp:meta_key>_publicize_done_external</wp:meta_key>
    <wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:14061017;b:1;}}]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
